<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马攀的技术栈</title>
  
  <subtitle>If you&#39;re going to try , go all the way.</subtitle>
  <link href="/posts/atom.xml" rel="self"/>
  
  <link href="https://mapan.tech/posts/"/>
  <updated>2019-05-15T18:42:20.539Z</updated>
  <id>https://mapan.tech/posts/</id>
  
  <author>
    <name>马攀</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>typora + hexo-abbrlink + hexo-asset-image和谐共存</title>
    <link href="https://mapan.tech/posts/789d.html"/>
    <id>https://mapan.tech/posts/789d.html</id>
    <published>2019-05-15T16:12:11.000Z</published>
    <updated>2019-05-15T18:42:20.539Z</updated>
    
    <content type="html"><![CDATA[<p>实现效果：typora直接粘贴图片进来，图片自动放到hexo的posts目录下的title同名文件夹，在typora内正常预览，<code>hexo s</code>以后,浏览器内图片正常预览。再搭配自己写的cmd脚本，实现完全的typora写博客，图库问题解决了，图片路径修改问题解决了，hexo-abbrlink的永久短链接问题解决了，真的皆大欢喜！</p><p>需要安装上述插件</p><blockquote><p>hexo-abbrlink<br>hexo-asset-image</p></blockquote><h1 id="设置typora"><a href="#设置typora" class="headerlink" title="设置typora"></a>设置typora</h1><p><img src="/posts/789d/1557944483486.png" alt="1557944483486"></p><p>下一步：（每一篇文章都要设置一次）手动选择文件的根目录</p><p><img src="/posts/789d/1557944521083.png" alt="1557944521083"></p><p>设置完毕，重启typora</p><p>修改插件<code>_hexo-asset-image@0.0.3@hexo-asset-image</code>中的index.js文件如图13行</p><p>添加变量</p><p><img src="/posts/789d/1557944599954.png" alt="1557944599954"></p><p>修改45行，添加黄色框框内容</p><p><img src="/posts/789d/1557944631753.png" alt="1557944631753"></p><p>重新执行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p><p>再次打开typora，即可实现，拖动图片即自动添加功能。</p><p>另外可以和谐的兼容 hexo-browsersync </p><p>hexo大法好！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;实现效果：typora直接粘贴图片进来，图片自动放到hexo的posts目录下的title同名文件夹，在typora内正常预览，&lt;code&gt;hexo
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>全站图片失效问题</title>
    <link href="https://mapan.tech/posts/fbc8.html"/>
    <id>https://mapan.tech/posts/fbc8.html</id>
    <published>2019-05-11T04:12:52.000Z</published>
    <updated>2019-05-15T14:26:48.092Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微博图床跑路啦！"><a href="#微博图床跑路啦！" class="headerlink" title="微博图床跑路啦！"></a>微博图床跑路啦！</h1><h1 id="新浪增加了防盗链措施，由于本站点图片全部存在新浪图床，已经确认全军覆没。"><a href="#新浪增加了防盗链措施，由于本站点图片全部存在新浪图床，已经确认全军覆没。" class="headerlink" title="新浪增加了防盗链措施，由于本站点图片全部存在新浪图床，已经确认全军覆没。"></a>新浪增加了防盗链措施，由于本站点图片全部存在新浪图床，已经确认全军覆没。</h1><p>情况相当悲壮，暂时没有时间修复，想看图片可以右键在新连接中打开图片，出现403 Forbidden，然后点击网址栏再回车，图片即可显示。</p><hr><p>临时添加以下代码，问题暂时解决，但随时可能再次失效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;same-origin&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;微博图床跑路啦！&quot;&gt;&lt;a href=&quot;#微博图床跑路啦！&quot; class=&quot;headerlink&quot; title=&quot;微博图床跑路啦！&quot;&gt;&lt;/a&gt;微博图床跑路啦！&lt;/h1&gt;&lt;h1 id=&quot;新浪增加了防盗链措施，由于本站点图片全部存在新浪图床，已经确认全军覆没。&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Frp内网穿透实现minecraft远程联机</title>
    <link href="https://mapan.tech/posts/6b1f.html"/>
    <id>https://mapan.tech/posts/6b1f.html</id>
    <published>2019-01-10T02:06:42.000Z</published>
    <updated>2019-01-10T04:06:48.421Z</updated>
    
    <content type="html"><![CDATA[<p>想玩minecraft，公网多人游戏，做了一些尝试</p><blockquote><ol><li>VPS搭建minecraft服务器。</li><li>内网穿透，VPS做TCP端口转发。</li></ol></blockquote><p>第一个方案，服务器端架设成功了，但是不可以加mods和插件。另外由于服务器配置太低，运行一段时间就会崩溃。以失败告终。<br>第二个方案，花点时间琢磨了一下，发现可行。下文为配置方法</p><h2 id="实现功能和原理"><a href="#实现功能和原理" class="headerlink" title="实现功能和原理"></a>实现功能和原理</h2><p>minecraft公网联机，公网服务器安装Frps，来实现转发服务。内网主机安装Frpc，来实现穿透。</p><h2 id="配置前准备"><a href="#配置前准备" class="headerlink" title="配置前准备"></a>配置前准备</h2><blockquote><p>公网服务器一台 ,假设我的服务器IP是155.155.155.156<br>内网电脑一台<br>域名一个 ，假设我的域名是baidu.com</p></blockquote><h2 id="解析域名到公网服务器的IP"><a href="#解析域名到公网服务器的IP" class="headerlink" title="解析域名到公网服务器的IP"></a>解析域名到公网服务器的IP</h2><p>添加一条A记录，主机记录自定义，我写的是router<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fz1c4jfiocj30oe07ldgm.jpg" alt></p><h2 id="安装Frp"><a href="#安装Frp" class="headerlink" title="安装Frp"></a>安装Frp</h2><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">项目地址</a></p><h3 id="公网服务器端"><a href="#公网服务器端" class="headerlink" title="公网服务器端"></a>公网服务器端</h3><p>找到与自己服务器和本地主机对应版本，下载即可。<br>我的VPS是搬瓦工的低配，如下<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fz1cb2jvukj30j00dmjs8.jpg" alt><br>安装的是CentOS6_32位系统，所以就下载Linux32位的软件 frp_x.x.x_linux_386.tar.gz<br>下载并解压后得到一个文件夹，里面有七个文件，对于公网服务器来说只有frps和frps.ini是我们必需的。</p><h4 id="配置frps-ini"><a href="#配置frps-ini" class="headerlink" title="配置frps.ini"></a>配置frps.ini</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">bind_udp_port = 7001</span><br><span class="line">vhost_http_port = 80</span><br><span class="line">vhost_https_port = 10443</span><br></pre></td></tr></table></figure><p>3，4两行是必须配置的，端口可以自定义，5，6两行是其他的服务，可以照抄或者不予理会。<br>使用下面命令运行<br><code>./frps -c ./frps.ini</code><br>我相信你可以通过Screen插件让此服务保持后台运行，此服务建议一直运行。</p><h3 id="内网电脑端"><a href="#内网电脑端" class="headerlink" title="内网电脑端"></a>内网电脑端</h3><p>打开minecraft游戏，开启局域网联机，生成一个端口号，记下来。</p><p>找到与自己电脑对应的版本，下载即可。我本地电脑win_x64系统，所以下载frp_0.22.0_windows_amd64.zip。<br>和之前一样解压得到7个文件，只有frpc.exe和frpc.ini是我们必需的。</p><h4 id="配置frpc-ini"><a href="#配置frpc-ini" class="headerlink" title="配置frpc.ini"></a>配置frpc.ini</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"></span><br><span class="line"># x.x.x.x为公网服务器IP地址，只需设置一次</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line"></span><br><span class="line"># server_port填写上面配置的bind_port值，只需设置一次</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[range:test_tcp]</span><br><span class="line">type = tcp</span><br><span class="line"># local_ip填写我们电脑的局域网ip，每次开启游戏需要修改。</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line"></span><br><span class="line"># local_port填写刚才记下的minecraft生成的端口号，每次开启游戏需要修改。</span><br><span class="line">local_port = 10240</span><br><span class="line"></span><br><span class="line">#这里自定义，建议填写五位数的端口号，不超过65535，小伙伴开启游戏时候填这个。只需设置一次</span><br><span class="line">remote_port = 25600</span><br></pre></td></tr></table></figure><p>双击frpc.exe,弹出一个黑框，把这个黑框最小化后台。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fz1bwq6j6jj30kw08k75f.jpg" alt></p><p>在远方的小伙伴，开启游戏，选择多人游戏，直接连接，输入router.baidu.com:25600，加入服务器玩耍吧。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fz1c60athuj30nq0e4acx.jpg" alt><br>【注】：router为设置的主机记录，baidu.com为自己的域名，25600为上面设置的remote_port端口号。</p><hr><p>以后每次开游戏，先打开游戏生成端口号，然后修改frpc.ini，打开frpc.exe并后台，小伙伴联机即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;想玩minecraft，公网多人游戏，做了一些尝试&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;VPS搭建minecraft服务器。&lt;/li&gt;
&lt;li&gt;内网穿透，VPS做TCP端口转发。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一个方案，服务器端架
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>汇编基本语法实现</title>
    <link href="https://mapan.tech/posts/fac.html"/>
    <id>https://mapan.tech/posts/fac.html</id>
    <published>2018-07-20T08:01:02.000Z</published>
    <updated>2018-07-20T12:56:42.529Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第五个程序"><a href="#第五个程序" class="headerlink" title="第五个程序"></a>第五个程序</h3><p>堆栈的学习<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:codesg</span><br><span class="line"></span><br><span class="line">codesg <span class="meta">segment</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">2000h</span>  <span class="comment">;地址2000h赋值给ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ss</span>,<span class="built_in">ax</span>  <span class="comment">;ax的值传递给段寄存器ss</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">sp</span>,<span class="number">0</span>  <span class="comment">;堆栈指针sp赋初值0</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">ax</span>  <span class="comment">;出栈到ax</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">bx</span>  <span class="comment">;出栈到bx</span></span><br><span class="line"><span class="keyword">push</span> <span class="built_in">ax</span>  <span class="comment">;ax入栈</span></span><br><span class="line"><span class="keyword">push</span> <span class="built_in">bx</span>  <span class="comment">;bx入栈</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">ax</span>  <span class="comment">;出栈到ax</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">bx</span>  <span class="comment">;出栈到bx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line"></span><br><span class="line">codesg ends</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>首先观察代码段的前256字节称为PSP的内容<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ftgg33nd3aj30hj060767.jpg" alt></p><p>通过debug观察各个寄存器的值，通过现象学习堆栈的<em>后进先出</em>的操作规则。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ftgg3f8onvj30i40grads.jpg" alt><br>可以看到进行<br>出栈出栈<br>入栈入栈<br>再出栈出栈<br>之后<br>ax和bx寄存器的值进行了交换。</p><p>类似生活中的一瓶糖水，一瓶盐水，现在需要交换两个瓶子的液体。使用“堆栈”这个容器进行了一个中转。</p><hr><h3 id="第六个程序"><a href="#第六个程序" class="headerlink" title="第六个程序"></a>第六个程序</h3><p>程序功能把内存单元的ffff:0    ~ffff:b单元的内容复制到0:200~0：20b内存单元中。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:code </span><br><span class="line"></span><br><span class="line">code <span class="meta">segment</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">0ffffh</span>  <span class="comment">;通过ax中转给段寄存器ds赋初值FFFFH</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ds</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">0020h</span>  <span class="comment">;通过ax中转给段寄存器es赋初值20H</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">es</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">bx</span>,<span class="number">0</span>  <span class="comment">;bx置零</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">cx</span>,<span class="number">12</span>  <span class="comment">;循环12次</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">s:</span>  <span class="keyword">mov</span> <span class="built_in">dl</span>,[<span class="built_in">bx</span>]  <span class="comment">;循环体s 开始循环12次</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">es</span>:[<span class="built_in">bx</span>],<span class="built_in">dl</span>  <span class="comment">;通过dl中转把ds:0-ds:b中的内容复制到es:0-es:b</span></span><br><span class="line"><span class="keyword">inc</span> <span class="built_in">bx</span>  <span class="comment">;b自增一</span></span><br><span class="line"><span class="keyword">loop</span>  <span class="comment">;循环</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>总结：此程序类似C语言中的循环,通过段寄存器DS和ES、BX自加、 以及循环，达到复制内存的目的。其中bx的作用就相当于C语言中的自加量i的作用。C代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">ds[i] = es[i];</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="包含多个段的程序"><a href="#包含多个段的程序" class="headerlink" title="包含多个段的程序"></a>包含多个段的程序</h2><p>在计算机运行程序时，程序和数据都是以二进制形式加载到内存中，实际上程序段和数据段对于计算机来说并没有任何不同。但是对于编程人员来说并不是一件好事，我们希望程序和数据以及堆栈分开存放。那么就需要对程序进行分块了。</p><h3 id="第七个程序"><a href="#第七个程序" class="headerlink" title="第七个程序"></a>第七个程序</h3><p>交换内存中数据段前两个双字单元的数据<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:code,<span class="built_in">ds</span>:data,<span class="built_in">ss</span>:stack</span><br><span class="line"></span><br><span class="line">data <span class="meta">segment</span>  <span class="comment">;定义数据段</span></span><br><span class="line"><span class="built_in">dw</span> <span class="number">0123h</span>,<span class="number">0456h</span>,<span class="number">0798h</span>,<span class="number">0abch</span>,<span class="number">0defh</span>,<span class="number">0fdeh</span>,<span class="number">0cbah</span>,<span class="number">0987h</span></span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stack <span class="meta">segment</span>  <span class="comment">;定义栈段</span></span><br><span class="line"><span class="built_in">dw</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">code <span class="meta">segment</span>  <span class="comment">;定义代码段</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">start:</span> <span class="keyword">mov</span> <span class="built_in">ax</span>,data  <span class="comment">;数据段地址给到ds</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ds</span>,<span class="built_in">ax</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,stack  <span class="comment">;栈段地址给到ss</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ss</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">sp</span>,<span class="number">16</span>  <span class="comment">;栈段指针指向栈底</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">push</span> <span class="built_in">ds</span>:[<span class="number">0</span>]  <span class="comment">;把数据段的ds:[0]单元的双字内容 压入栈</span></span><br><span class="line"><span class="keyword">push</span> <span class="built_in">ds</span>:[<span class="number">2</span>]  <span class="comment">;把数据段的ds:[2]单元的双字内容 压入栈</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">ds</span>:[<span class="number">0</span>]  <span class="comment">;出栈到ds:[0]单元</span></span><br><span class="line"><span class="keyword">pop</span> <span class="built_in">ds</span>:[<span class="number">2</span>]  <span class="comment">;出栈到ds:[2]单元</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></table></figure></p><p>通过<code>debug调试器</code>可以即将运行的代码看到<code>date段</code>的地址为<code>0b36h</code>,通过<code>d命令</code>查看内存<code>0b36</code>处的内容，正是在程序中定义的数据段<code>0123h，0456h,···，0987h</code><br>栈段地址为0b37h，在内存中<code>0b36:0010</code>单元处即为在程序中定义的全0的栈段。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ftgkj8qz6sj30ht0fwtd6.jpg" alt><br>经过两次入栈和出栈之后，可以看出date段的前两个双字节中的数据已经交换了位置。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ftgkacor6pj30hs0au0v7.jpg" alt></p><p>第八个程序<br>使用push指令将a段中的前八个字形数据逆序存储到b段中<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:code</span><br><span class="line"></span><br><span class="line">a <span class="meta">segment</span>  <span class="comment">;a段数据</span></span><br><span class="line"><span class="built_in">dw</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0ah</span>,<span class="number">0bh</span>,<span class="number">0ch</span>,<span class="number">0dh</span>,<span class="number">0eh</span>,<span class="number">0fh</span>,<span class="number">0ffh</span>  </span><br><span class="line">a ends</span><br><span class="line"></span><br><span class="line">b <span class="meta">segment</span></span><br><span class="line"><span class="built_in">dw</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>  <span class="comment">;b段数据</span></span><br><span class="line">b ends</span><br><span class="line"></span><br><span class="line">code <span class="meta">segment</span>  <span class="comment">;代码段</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">start:</span> <span class="keyword">mov</span> <span class="built_in">ax</span>,b  <span class="comment">;把栈段指针指向b数据段</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ss</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">sp</span>,<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,a  <span class="comment">;数据指针指向a段数据</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ds</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">cx</span>,<span class="number">8</span>  <span class="comment">;设置8次循环</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">bx</span>,<span class="number">0</span>  <span class="comment">;变量bx初值为0</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">s:</span>  <span class="keyword">push</span> <span class="built_in">ds</span>:[<span class="built_in">bx</span>]  <span class="comment">;开始8次压栈</span></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="number">2</span>  <span class="comment">;bx自加2</span></span><br><span class="line"><span class="keyword">loop</span> s</span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></table></figure></p><p>如图执行数次循环后，a段数据已经逆序存储在b段中<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ftgmdm9gqqj30hm0e6gm9.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;第五个程序&quot;&gt;&lt;a href=&quot;#第五个程序&quot; class=&quot;headerlink&quot; title=&quot;第五个程序&quot;&gt;&lt;/a&gt;第五个程序&lt;/h3&gt;&lt;p&gt;堆栈的学习&lt;br&gt;&lt;figure class=&quot;highlight x86asm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>汇编初识</title>
    <link href="https://mapan.tech/posts/c6d9.html"/>
    <id>https://mapan.tech/posts/c6d9.html</id>
    <published>2018-07-07T06:10:57.000Z</published>
    <updated>2018-07-20T08:11:46.326Z</updated>
    
    <content type="html"><![CDATA[<p>大学时候学习的单片机原理和微机原理有用到汇编语言，但是当时觉得太过晦涩难懂，就没有学太懂。最近开始学习汇编语言，决定把汇编好好学习一下，网友介绍了王爽老师的<a href="https://pan.baidu.com/s/1leYR_IiEVU8l1jpQApxTcg" target="_blank" rel="noopener">《汇编语言》</a>第三版 (提取码nc3c)，但为了学习还是买了一本实体书，这样更便于学习和翻阅。</p><p>win10对汇编支持并不友好，索性在虚拟机装了一个XP。折腾汇编环境半天才搞定。<br>首先是带x的寄存器（常用16位寄存器）<br>AX，BX，CX，DX</p><p>另有CS:IP<br>CS是段寄存器，段寄存器是羞涩的姑娘，不可以直接赋值，只能间接赋值。<br>CS:IP是当前执行的指令在内存中的地址。IP中存放为偏移地址。<br>计算方法：指向地址 =（CS）x10H +(IP)</p><p>DS是数据 段寄存器<br>SS为堆栈 段寄存器  SP为堆栈偏移地址，计算方法和CS:IP类似。</p><p>每个16位寄存器都是由两个八位寄存器组成，比如AX是有AH和AL组成，以此类推….</p><p>最简单且常用的指令有:</p><div class="table-container"><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">作用</th><th style="text-align:center">举例</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">MOV</td><td style="text-align:center">赋值</td><td style="text-align:center">MOV AX,BX</td><td style="text-align:center">(AX)=(BX)</td></tr><tr><td style="text-align:center">ADD</td><td style="text-align:center">加法</td><td style="text-align:center">ADD AX,CX</td><td style="text-align:center">(AX)=(AX)+(CX)</td></tr><tr><td style="text-align:center">SUB</td><td style="text-align:center">减法</td><td style="text-align:center">SUB AH,BH</td><td style="text-align:center">(AH)=(AH)-(BH)</td></tr></tbody></table></div><p>按照国际惯例第一个程序应该是’hello world’才对，但是对于masm5.0来说‘hello world’已经相当复杂了。</p><h3 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">; 计算（0123h + 0456h) x 2的值</span></span><br><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:wahaha     <span class="comment">;wahaha程序入口地址</span></span><br><span class="line"></span><br><span class="line">wahaha <span class="meta">segment</span>   <span class="comment">;代码段开始</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">0123h</span>  <span class="comment">; 0123h赋值给AX</span></span><br><span class="line">        <span class="keyword">mov</span> <span class="built_in">bx</span>,<span class="number">0456h</span>  <span class="comment">; 0456赋值给BX</span></span><br><span class="line">        <span class="keyword">add</span> <span class="built_in">ax</span>,<span class="built_in">bx</span>   <span class="comment">; BX的值加到AX中去</span></span><br><span class="line">        <span class="keyword">add</span> <span class="built_in">ax</span>,<span class="built_in">ax</span>   <span class="comment">; AX的两倍放到AX中去</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span>  <span class="comment">;程序结束返回</span></span><br><span class="line">        <span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line"></span><br><span class="line">wahaha ends</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>依次执行<code>masm 1.asm</code>和<code>link 1.obj</code>如下图<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1cshmohbj30fi07fdgh.jpg" alt></p><p>进如debug进行调试<br>使用u命令查看汇编指令，使用r命令查看当前当前CPU寄存器的状态，使用t命令执行一条指令，如下图<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1cw1kq9yj30hv0eggo1.jpg" alt></p><p>遇到<code>int 21</code>使用p命令进行结束<br>最后使用q命令退出debug模式<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1czkzhn8j30hw03a74e.jpg" alt></p><h3 id="第二个程序："><a href="#第二个程序：" class="headerlink" title="第二个程序："></a>第二个程序：</h3><p>计算2x2的值，并保存在ax中<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:code</span><br><span class="line">code <span class="meta">segment</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">2</span>   <span class="comment">;把2放到AX中</span></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">ax</span>,<span class="built_in">ax</span>  <span class="comment">;AX自加一次，也可以用 inc ax</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span> <span class="comment">; 程序结束，返回</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line">code ends</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>deug查看寄存器中的值，<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1dszeespj30hu0eedib.jpg" alt><br>我们有发现ds：0B26,但是程序存放在0B36起始的地址中，那么这265个（0B36H x 10H - B26H x 10H = 100H）个字节的空间跑哪里去了呢？<br>其实这256字节的空间叫做PSP，是debug程序需要占用的一段内存。</p><h3 id="第三个程序：计算5x4的值"><a href="#第三个程序：计算5x4的值" class="headerlink" title="第三个程序：计算5x4的值"></a>第三个程序：计算5x4的值</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:wusi</span><br><span class="line">wusi <span class="meta">segment</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">5h</span>   <span class="comment">;赋初值</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">bx</span>,<span class="number">0h</span>   <span class="comment">;累加到BX，bx置0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="built_in">ax</span>    <span class="comment">;第一次累加</span></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="built_in">ax</span></span><br><span class="line"><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="built_in">ax</span>    <span class="comment">;第四次累加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00H</span>   <span class="comment">;程序返回</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line">wusi ends             <span class="comment">;这一段程序结束</span></span><br><span class="line">end                   <span class="comment">;所有程序结束</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1emj4k8hj30hs0gl0vn.jpg" alt><br>计算机是非常笨的，他不会做乘法，乘法是通过一次次累加得出的。<br>计算5x4需要5 累加4次，如果5x100呢？<br>换个思路100x5,可以用100累加5次，那如果88568x58755呢？难道累加五万多次？<br>很好，和C语言一样，汇编也有自己的循环程序，只需要写一段代码，让他循环五万多次就可以了</p><h3 id="第四个程序：-计算285x168"><a href="#第四个程序：-计算285x168" class="headerlink" title="第四个程序： 计算285x168"></a>第四个程序： 计算285x168</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:laila</span><br><span class="line">laila <span class="meta">segment</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">bx</span>,<span class="number">0</span>       <span class="comment">;累加器置零</span></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">cx</span>,<span class="number">168</span>     <span class="comment">;循环次数168</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">s:</span><span class="keyword">add</span> <span class="built_in">bx</span>,<span class="number">286</span>    <span class="comment">;循环体</span></span><br><span class="line"><span class="keyword">loop</span> s        <span class="comment">;若cx不等于0 跳转执行s</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span>   <span class="comment">;程序结束，返回</span></span><br><span class="line"><span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line"></span><br><span class="line">laila ends</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1f3br5wdj30ht0guacq.jpg" alt><br>使用lopp循环168次，循环次数默认存放在CX中</p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1ft1fo0l6rsj30hu07tt9t.jpg" alt><br>结果是BX中存放的BBB0H<br>十进制就是48048,可以用计算器验证一下,算的没错。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;大学时候学习的单片机原理和微机原理有用到汇编语言，但是当时觉得太过晦涩难懂，就没有学太懂。最近开始学习汇编语言，决定把汇编好好学习一下，网友介绍了王爽老师的&lt;a href=&quot;https://pan.baidu.com/s/1leYR_IiEVU8l1jpQApxTcg&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>戴明环在自我管理中的应用</title>
    <link href="https://mapan.tech/posts/a2ab.html"/>
    <id>https://mapan.tech/posts/a2ab.html</id>
    <published>2018-04-19T14:31:54.000Z</published>
    <updated>2018-04-19T16:49:12.515Z</updated>
    
    <content type="html"><![CDATA[<p>PDCA是英语单词Plan(计划)、Do(执行)、Check(检查)和Action(调整)的第一个字母，PDCA循环就是按照这样的顺序进行质量管理，并且循环不止地进行下去的科学程序。PDCA循环是美国质量管理专家休哈特博士首先提出的，由戴明采纳、宣传，获得普及，所以又称戴明环。</p><blockquote><p>1、P (plan) 计划</p></blockquote><p>包括方针和目标的确定，以及活动规划的制定。</p><blockquote><p>2、D (Do) 执行</p></blockquote><p>根据已知的信息，设计具体的方法、方案和计划布局；再根据设计和布局，进行具体运作，实现计划中的内容。</p><blockquote><p>3、C (check) 检查</p></blockquote><p>总结执行计划的结果，分清哪些对了，哪些错了，明确效果，找出问题。</p><blockquote><p>4、A (Adjust)调整</p></blockquote><p>对总结检查的结果进行处理，对成功的经验加以肯定，并予以标准化；对于失败的教训也要总结，引起重视。对于没有解决的问题，应提交给下一个PDCA循环中去解决</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fqiclsttvsj30dw09h74f.jpg" alt></p><hr><p>上面是<a href="https://baike.baidu.com/item/PDCA%E5%BE%AA%E7%8E%AF" target="_blank" rel="noopener">百度百科</a>给出的定义与解释，有按照自己理解轻微改动。戴明环是一种企业管理方法，现在我觉得<br><strong>应用在个人的自我管理当中也是非常好的一种方法 </strong><br>近期我在制定自己的学习规划和时间规划，就是按照这样的方法一直循环下去。觉得完全可以作为个人管理的一种高效方法。通过几轮循环，自己的计划越来越适合自己，越来越接近完美。</p><h4 id="制定计划-—-gt-执行-—-gt-检查-—-gt-调整-···"><a href="#制定计划-—-gt-执行-—-gt-检查-—-gt-调整-···" class="headerlink" title="制定计划 —&gt; 执行 —&gt; 检查 —&gt; 调整 ···"></a>制定计划 —&gt; 执行 —&gt; 检查 —&gt; 调整 ···</h4><p>举个例子，要考研的小明同学想制定时间规划，计划每天学习12h，他制定了下面的时间表。这就是<strong>Plan阶段</strong>。</p><blockquote><p>06:30 - 07:00 起床&amp;&amp;洗漱<br>08:00 - 13:00 数学<br>14:30 - 19:00 数据结构<br>20:00 - 21:00 数学<br>22:00 - 23:30 英语<br>00:00 - 06:30 睡觉</p></blockquote><p>小明最初的计划是这样的，很认真的执行了半个月，现在是属于<strong>Do阶段</strong>。<br>慢慢的小明发现，在下午的14:30 - 15:30 学习效率极低，而在晚上23:30达到一天中最高的学习效率。<br>小明分析效率低是由于中午吃过午饭，身体血液涌向消化系统，大脑血液含量下降，脑子转的速度变慢，效率变低。而晚上睡前，一天的学习虽然疲倦但是夜幕降临，丰富的夜生活开始，大脑变得兴奋，效率也急剧提高。那么现在是属于<strong>Check阶段</strong>。 </p><p>小明决定调整复习计划，把效率最低的时间段去安排到别的事情上，把效率最高的时间段做延长调整，这个阶段成为<strong>Adjust阶段</strong>。</p><p>小明重新制定计划：</p><blockquote><p>07:00 - 07:30 起床&amp;&amp;洗漱<br>08:00 - 13:00 数学<br>14:30 - 15:30 散步&amp;&amp;单词记忆<br>15:30 - 19:00 数据结构<br>20:00 - 21:00 数学<br>22:00 - 23:30 英语<br>23:30 - 00:30 数据结构<br>00:30 - 07:00 睡觉</p></blockquote><p>那么现在属于第二轮的PDCA循环的<strong>P阶段</strong>，依此类推，一个一个循环下去，这个计划会越来越适合小明。</p><hr><p>每个戴明环的阶段，也可以有小戴明环，形成了大环套小环的状态，如下图。<br>举个例子，还是上文的小明，小明在Do阶段，即按照计划学习阶段，制定了英语学习计划，作文，阅读理解，翻译等等怎么怎么学习，这是可执行的一个小戴明环。在作文学习中，分为画图说话，书信，引言等几类作文，每一类作文的格式是什么，计划怎么学习，这又可以细化为小的戴明环。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fqidwdf402j306j065mxe.jpg" alt></p><p>如果用在一个更大更长远的目标上呢？如下图，把大目标分解为阶段目标，阶段目标细化落实为行动，这样一个大的目标就会越来越清晰，能感受到距离目标越来越近。当a、b、c、d达到时，你就完成了1，当1、2、3、4完成时，你就实现了目标A。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fqig6815x6j30g00f9t99.jpg" alt></p><p>这是一个神奇的管理方法，不仅在质量管理上用处颇大，在个人的自我管理上也是非常好的方法。</p><p>如果真正的做到了，那么这种可以<strong><a href="#jump1">控制自我</a></strong>的快感和愉悦是难以用语言来分享的。</p><hr><p><span id="jump1">控制自我</span> : 这里的控制自我指的是<strong>在大的时间跨度上，能够通过自我规划和管理实现自身意愿</strong>。而不是抬抬左手，左手就能抬起来的这种控制。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;PDCA是英语单词Plan(计划)、Do(执行)、Check(检查)和Action(调整)的第一个字母，PDCA循环就是按照这样的顺序进行质量管理，并且循环不止地进行下去的科学程序。PDCA循环是美国质量管理专家休哈特博士首先提出的，由戴明采纳、宣传，获得普及，所以又称戴明
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使Hexo文章图文并茂</title>
    <link href="https://mapan.tech/posts/c9c3.html"/>
    <id>https://mapan.tech/posts/c9c3.html</id>
    <published>2018-04-11T13:35:10.000Z</published>
    <updated>2019-05-15T11:48:56.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019-4-30-微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。"><a href="#2019-4-30-微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。" class="headerlink" title="[2019-4-30]微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。"></a>[2019-4-30]微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。</h1><p>在上一篇<a href="http://localhost:4000/posts/e10b.html" target="_blank" rel="noopener">零基础HEXO搭建博客教程</a>中，陆续有人咨询一些问题，就常见问题做一个回答，本文介绍如何写图文并茂的博客文章。</p><p>在Coding上我们的项目大小只有128M/256M/512M，反正我的是256M，也许你的是仓库容量是128M（普通会员），升级绑定腾讯云后壳升级为银牌会员512M仓库容量。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq9259sme6j304w02s743.jpg" alt></p><p>总之不管128/256/512M，对于一个网站来说，如果图片和视频多的话，那是不太够的。今天介绍一种节省空间的方法，使用图床。</p><p>什么是图床，我不解释了，看<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BA%8A/10721348?fr=aladdin" target="_blank" rel="noopener">百度百科</a>自己了解下。<br>首先提供图床服务的有很多，收费的免费的各种。今天我们使用的是新浪微博提供的微博图床。此图床需要chrome浏览器配合图床插件使用。<br>有科学上网条件的童鞋，请在谷歌应用商店搜索关键词<code>新浪微博</code>然后安装下图所示插件。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fq92g9fjemj30xh0een0k.jpg" alt></p><p>没条件的同学可以去<a href="https://www.crx4chrome.com/extensions/fdfdnfpdplfbbnemmmoklbfjbhecpnhf/" target="_blank" rel="noopener">镜像站点</a>安装<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fq92jtqkk2j30y40j5n1g.jpg" alt></p><p>安装完成之后，在浏览器的右上角会出现一个这样的图标<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq92lstdtoj305504kglm.jpg" alt><br>我们点一下，会弹出一个窗口，如下图所示<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq92mv6u5lj30lu0f3q3h.jpg" alt></p><p>现在随便拖进去一张图片会弹出让我们登录新浪微博，登录自己微博账号即可。<br>下次再拖进进去一张图片，就会弹出如下图所示。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fq92op8cgzj30lq0f2my6.jpg" alt><br>我们选择markdown（原图、中等尺寸、缩略图 分别对应大、中、小三个尺寸，按自己需求选择）点复制即可，把复制的链接粘贴到我们文章所需要的地方，即可。如下图<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fq92rkf6oej30rc0e0di6.jpg" alt></p><p>然后就可以愉快写图文并茂的文章了。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;2019-4-30-微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。&quot;&gt;&lt;a href=&quot;#2019-4-30-微博图床添加防盗链，此方法以过时，请寻找其他图床或者自建图床。&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>英语词典推荐</title>
    <link href="https://mapan.tech/posts/f3b9.html"/>
    <id>https://mapan.tech/posts/f3b9.html</id>
    <published>2018-04-09T23:42:34.000Z</published>
    <updated>2018-04-10T00:28:38.578Z</updated>
    
    <content type="html"><![CDATA[<p>说到英语词典，我想大多数人仅知道</p><blockquote><p>有道词典<br>金山词霸<br>…</p></blockquote><p>看有道和词霸的APP大小，里面各种广告，推荐内容。完全不是一个词典该有的样子。<br>在朋友的引荐下，知道了欧路词典，在去找欧路词典的词库的途中，有不少发现。<br>独乐了不如众乐乐，在这里给大家分享一下：</p><hr><p>首先是迄今为止 <strong>安卓</strong>第二好用的词典 : <a href="http://www.ssdlsoft.com/bluedict/" target="_blank" rel="noopener">深蓝词典</a><br>迄今为止 PC和ios第二好用的词典 : <a href="https://www.eudic.net/v4/en/app/eudic" target="_blank" rel="noopener">欧路词典</a></p><p>为什么推荐这两个词典呢？因为可以自定义词库！<br>自定义词库意味着什么？<br>意味着你可以一个词典app里面装有数十本词典！<br>意味着你可以完全离线使用！<br>意味着没有使你分心的各种推荐软文。<br>意味着快！</p><p>两个字典都有免费版和注册版。我想说的是对于初学者免费版完全够用。当你词汇量突破两万的时候可以考虑一下收费版。</p><p>另外词库去哪里找，这里有个叫<a href="https://www.pdawiki.com/forum/?fromuid=275908" target="_blank" rel="noopener">掌上百科</a>的论坛，里面有各种词库可供下载。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;说到英语词典，我想大多数人仅知道&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有道词典&lt;br&gt;金山词霸&lt;br&gt;…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看有道和词霸的APP大小，里面各种广告，推荐内容。完全不是一个词典该有的样子。&lt;br&gt;在朋友的引荐下，知道了欧路词典，在去
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一个艰难的决定</title>
    <link href="https://mapan.tech/posts/f82e.html"/>
    <id>https://mapan.tech/posts/f82e.html</id>
    <published>2018-03-16T12:27:43.000Z</published>
    <updated>2018-03-26T12:22:20.813Z</updated>
    
    <content type="html"><![CDATA[<p>2017年2月26日来到上海找实习工作。<br>面试通知的邮件：<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpezqbrx22j30kc0qjtbb.jpg" alt></p><p>录用通知邮件：<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpezscwhfqj30ns0e60t2.jpg" alt><br>公司还是蛮好的，时不时的给一些惊喜，诸如生日礼，过节礼品等。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpezhcz75gj30zd0hx1kx.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpqh6qadr6j30p60mftba.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpqh80xz4cj30lq0cbjsd.jpg" alt></p><p>经过深思熟虑的考虑，最终还是选择了离开，为了实现自己的理想，过上想要的生活。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fpezhih6jwj310u0cfab6.jpg" alt><br>OA的流程已走完，我选择在今天更新一篇文章，<br>虽然离开但还是有一些不舍的，同事们很好。领导待员工也特别好。我们组老大待我们组员工也是几个组里面最好的。真的非常的想要感谢同事们，后会有期…</p><p>给自己一个没有退路的选择，作为一个实现人生价值的契机，真的蛮好。接下来会消失很长一段时间，也许很久不会有更新，但网站一直在维护。加油</p><p>每次听到这首歌，还是激情澎湃。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=1368451217&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;2017年2月26日来到上海找实习工作。&lt;br&gt;面试通知的邮件：&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/mw690/005vwoCygy1fpezqbrx22j30kc0qjtbb.jpg&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEXO优化之GULP</title>
    <link href="https://mapan.tech/posts/8f24.html"/>
    <id>https://mapan.tech/posts/8f24.html</id>
    <published>2018-03-15T15:58:10.000Z</published>
    <updated>2018-04-20T05:23:28.630Z</updated>
    
    <content type="html"><![CDATA[<p>现在你可以鼠标右键单击空白处，选择查看源代码。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fqj1veoox6j30eb0awmxe.jpg" alt><br>你会发现本页面只有一行代码。把网页文件中的空格换行和注释等删除，可以在一定程度上减小网页的文件大小，进而加快访问速度，这就是网页压缩。</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="什么是Gulp"><a href="#什么是Gulp" class="headerlink" title="什么是Gulp"></a>什么是Gulp</h4><p>gulp.js是一种基于流的，代码优于配置的新一代构建工具.</p><p>Gulp和Grunt类似。但相比于 Grunt 的频繁的 I/O 操作，Gulp 的流操作，能更快地完成构建</p><h3 id="Gulp特性"><a href="#Gulp特性" class="headerlink" title="Gulp特性"></a>Gulp特性</h3><h4 id="使用方便"><a href="#使用方便" class="headerlink" title="使用方便"></a>使用方便</h4><p>通过代码优于配置的策略，Gulp可以让简单的任务简单，复杂的任务更可管理。</p><h4 id="构建快速"><a href="#构建快速" class="headerlink" title="构建快速"></a>构建快速</h4><p>通过流式操作，减少频繁的 IO 操作，更快地构建项目。</p><h4 id="插件高质"><a href="#插件高质" class="headerlink" title="插件高质"></a>插件高质</h4><p>Gulp 有严格的插件指导策略，确保插件能简单高质的工作。</p><h4 id="易于学习"><a href="#易于学习" class="headerlink" title="易于学习"></a>易于学习</h4><p>少量的API，掌握Gulp可以毫不费力。构建就像流管道一样，轻松加愉快。</p><h3 id="Gulp安装"><a href="#Gulp安装" class="headerlink" title="Gulp安装"></a>Gulp安装</h3><p>Gulp是基于Node.js的，故要首先安装 Node.js。</p><p><code>npm install -g gulp</code></p><p>然后按以下清单文件安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gulp</span><br><span class="line">gulp-htmlclean</span><br><span class="line">gulp-htmlmin</span><br><span class="line">gulp-minify-css</span><br><span class="line">gulp-clean-css</span><br><span class="line">gulp-uglify</span><br></pre></td></tr></table></figure></p><p>方法是同样的,<code>npm install xxx --save</code>，xxx即为清单列表文件名</p><p>其中gulp是工程的核心程序，Gulp采用插件方式进行工作，下面的5个文件就是基于Gulp的插件.Gulp插件列表</p><h3 id="使用Gulp优化Hexo"><a href="#使用Gulp优化Hexo" class="headerlink" title="使用Gulp优化Hexo"></a>使用Gulp优化Hexo</h3><p>建立gulpfile.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var cleancss = require(&apos;gulp-clean-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line">//  css</span><br><span class="line">gulp.task(&apos;minify-css&apos;, () =&gt; &#123;</span><br><span class="line">    return gulp.src([&apos;./public/**/*.css&apos;,&apos;!./public/**/*.min.css&apos;])</span><br><span class="line">        .pipe(cleancss())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//  html</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class="line">  return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(htmlmin(&#123;</span><br><span class="line">         removeComments: true,</span><br><span class="line">         minifyJS: true,</span><br><span class="line">         minifyCSS: true,</span><br><span class="line">         minifyURLs: true,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;);</span><br><span class="line">// js</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class="line">    return gulp.src([&apos;./public/**/*.js&apos;,&apos;!./public/assets/js/*.js&apos;])</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">// </span><br><span class="line">gulp.task(&apos;default&apos;, [</span><br><span class="line">    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>要运行gulp任务，只需切换到存放gulpfile.js文件的目录，然后在终端中执行gulp命令就行了，gulp后面可以加上要执行的任务名，例如gulp task1，如果没有指定任务名，则会执行任务名为default的默认任务。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;现在你可以鼠标右键单击空白处，选择查看源代码。&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005vwoCyly1fqj1veoox6j30eb0awmxe.jpg&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Hexo写文章</title>
    <link href="https://mapan.tech/posts/2b94.html"/>
    <id>https://mapan.tech/posts/2b94.html</id>
    <published>2018-01-07T01:31:16.000Z</published>
    <updated>2018-04-11T14:42:47.095Z</updated>
    
    <content type="html"><![CDATA[<p>为了帮助广大电子爱好者建立自己的独立博客，形成记录思考的习惯。上个月写了一篇<a href="https://mapan.tech/posts/e10b.html" target="_blank">怎样创建个人独立博客网站的文章</a>。没想到会有这么多的反响，有很多朋友就细节问题来咨询。<br>今天有时间整理一下网站搭建好以后，如何更新文章。</p><h3 id="1-本地写文章"><a href="#1-本地写文章" class="headerlink" title="1.本地写文章"></a>1.本地写文章</h3><p>选中你的Blog文件夹(我这里选择的是我自己重命名过的),鼠标右键单击，选择<code>Git Bash Here</code><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7sob24o7j30b00ajt9k.jpg" alt></p><h5 id="1-1-新建文章"><a href="#1-1-新建文章" class="headerlink" title="1.1 新建文章"></a>1.1 新建文章</h5><p>输入指令<code>hexo new XXX</code> 如下图xxx为文章标题，根据自己情况写。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7srydq0fj30cv01nq2t.jpg" alt><br>完成后会提示 在<code>.../Blog/source/_post/</code>目录下创建了xxx.md</p><h5 id="1-2-写文章"><a href="#1-2-写文章" class="headerlink" title="1.2 写文章"></a>1.2 写文章</h5><p>我们根据提示的目录，找到这个文件，然后使用编辑器打开。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7sx0jdg7j30h8057gma.jpg" alt><br>我这里使用的是Sublime,你可以使用自己喜欢的编辑器。<br>打开后如图所示，可以开始写文章了,写完后请<code>Ctrl+S</code>保存。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7sz7kug4j30v80i4tc4.jpg" alt><br>关于Markdown可以看我这篇文章<a href="https://mapan.tech/posts/b33e.html" target="_blank">Markdown语法和MD编辑器</a></p><h5 id="1-3如何在文章插入图片？"><a href="#1-3如何在文章插入图片？" class="headerlink" title="1.3如何在文章插入图片？"></a>1.3如何在文章插入图片？</h5><p>可以看我这篇文章 <a href="/posts/c9c3.html" target="_blank">使Hexo文章图文并茂</a></p><h3 id="2-本地预览-非必要，可选"><a href="#2-本地预览-非必要，可选" class="headerlink" title="2.本地预览 (非必要，可选)"></a>2.本地预览 (非必要，可选)</h3><p>在编辑文章过程中，我们肯定不想频繁的部署，查看效果。这时候使用<code>hexo s</code>指令进行本地预览，文章编辑完成，且自己满意后，再进行部署。<br>提示<code>INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code><br>这句信息含义是“网站已经运行在本地 <code>http://locahost:4000/</code> ,按<code>Ctrl+C</code>可以停止预览”。<br>我们不要按<code>Ctrl+C</code>，现在直接浏览器打开 <a href="http://locahost:4000/" target="_blank" rel="noopener">http://locahost:4000/</a> 即可看到预览效果。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7tv4nqsoj30fw09zgmi.jpg" alt></p><h3 id="3-渲染并部署网站"><a href="#3-渲染并部署网站" class="headerlink" title="3.渲染并部署网站"></a>3.渲染并部署网站</h3><h5 id="3-1-hexo-g渲染生成网站"><a href="#3-1-hexo-g渲染生成网站" class="headerlink" title="3.1 hexo g渲染生成网站"></a>3.1 <code>hexo g</code>渲染生成网站</h5><p>现在我们文章已经写好，预览也比较满意。现在可以<code>Ctrl+C</code>停止预览，然后<code>hexo g</code>渲染出整套网站代码(你可以在<code>../Blog/public/</code>文件夹下看到整套网站的代码)。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7t2ivla5j30g705ijrj.jpg" alt><br>渲染完成后，info提示信息:使用2.01秒生成了74个文件,这表示完成了渲染。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7t59khztj30g609bglx.jpg" alt></p><h5 id="3-2-hexo-d部署网站-把渲染好的html等网站文件，上传到Coding服务器"><a href="#3-2-hexo-d部署网站-把渲染好的html等网站文件，上传到Coding服务器" class="headerlink" title="3.2 hexo d部署网站(把渲染好的html等网站文件，上传到Coding服务器)"></a>3.2 <code>hexo d</code>部署网站(把渲染好的html等网站文件，上传到Coding服务器)</h5><p>如图，除了黄色框框内的信息或许没有，其他都应该有。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7tdc765xj30g40h3ab4.jpg" alt><br>最后一句<code>INFO Deploy done: git</code>表示部署已完成。</p><blockquote><p>写新文章请重复步骤 1—&gt;3</p></blockquote><hr><p>请 <strong>每次执行完命令后 查看命令窗口返回的信息</strong> ，有很多童鞋闷头敲指令，报错了也不管。这样前面有<strong>ERROR</strong>的话，后面的指令就肯定报错。很多步骤都是活的，并不是一成不变不可变通，当你知道他的含义之后，就可以随心所欲，怎么来都行。刚开始不熟悉还是建议按照教程来。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;为了帮助广大电子爱好者建立自己的独立博客，形成记录思考的习惯。上个月写了一篇&lt;a href=&quot;https://mapan.tech/posts/e10b.html&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>手机信号强度表示方法</title>
    <link href="https://mapan.tech/posts/83f.html"/>
    <id>https://mapan.tech/posts/83f.html</id>
    <published>2018-01-04T02:36:01.000Z</published>
    <updated>2018-01-07T03:43:09.316Z</updated>
    
    <content type="html"><![CDATA[<p>在状态信息里面查看手机的信号强度，有两个单位，一个是<script type="math/tex">dBm</script>，另一个是<script type="math/tex">asu</script>。<br>dBm我们知道是信号功率单位，手机信号强度为<script type="math/tex">-100dBm</script>左右。那么<script type="math/tex">asu</script>是什么单位呢？<br>今天特意搜索引擎查了一下：</p><blockquote><p>asu（alone signal unit 独立信号单元）是Google给Android手机定义的特有信号单位， 它们之间的关系是：<script type="math/tex">dBm =-113+2*asu</script>。</p></blockquote><p>举个例子：</p><div class="table-container"><table><thead><tr><th style="text-align:center">dBm</th><th style="text-align:center">asu</th></tr></thead><tbody><tr><td style="text-align:center">-113 dBm</td><td style="text-align:center">0 asu</td></tr><tr><td style="text-align:center">-103 dBm</td><td style="text-align:center">5 asu</td></tr><tr><td style="text-align:center">-93 dBm</td><td style="text-align:center">10 asu</td></tr><tr><td style="text-align:center">-83 dBm</td><td style="text-align:center">15 asu</td></tr><tr><td style="text-align:center">-73 dBm</td><td style="text-align:center">20 asu</td></tr></tbody></table></div><p>所以<script type="math/tex">asu</script>数越大，信号就越强，虽然我们习惯使用<script type="math/tex">dBm</script>表示信号强度，但<script type="math/tex">asu</script>单位正数看起来更直观一些。</p><hr><p>虽然在网上查到的是这样的结果，但是实际发现自己的魅族手机还有工作上接触的小米手机信号表示方法并不按照这个公式来的。而是dBm =-140+asu。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7w93ul83j31401z4q9g.jpg" alt><br>再次搜索维基百科发现：</p><blockquote><p>In GSM networks, ASU maps to RSSI (received signal strength indicator, see TS 27.007[2] sub clause 8.5).</p><p><script type="math/tex">dBm = 2 × ASU - 113</script>, ASU in the range of 0..31 and 99 (for not known or not detectable).</p><p>In UMTS networks, ASU maps to RSCP level (received signal code power, see TS 27.007[2] sub clause 8.69 and TS 27.133 sub clause 9.1.1.3).</p><p><script type="math/tex">dBm = ASU - 116</script>, ASU in the range of -5..91 and 255 (for not known or not detectable).</p><p>In LTE networks, ASU maps to RSRP (reference signal received power, see TS 36.133, sub-clause 9.1.4). The valid range of ASU is from 0 to 97. For the range 1 to 96, ASU maps to</p><p><script type="math/tex">(ASU - 141) ≤ dBm < (ASU - 140)</script>.<br>The value of 0 maps to RSRP below -140 dBm and the value of 97 maps to RSRP above -44 dBm.</p></blockquote><p>以上一大段话什么意思呢？<br>简单说：<br>在2G的GSM时候 <script type="math/tex">dBm = 2 × ASU - 113</script></p><p>在3G的UMTS时候 <script type="math/tex">dBm = ASU - 116</script></p><p>在4G的LTE制式下  <script type="math/tex">(ASU - 141) ≤ dBm < (ASU - 140)</script></p><hr><p>擅长使用搜索引擎，真的挺重要。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在状态信息里面查看手机的信号强度，有两个单位，一个是&lt;script type=&quot;math/tex&quot;&gt;dBm&lt;/script&gt;，另一个是&lt;script
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017年总结</title>
    <link href="https://mapan.tech/posts/3c34.html"/>
    <id>https://mapan.tech/posts/3c34.html</id>
    <published>2017-12-31T01:52:16.000Z</published>
    <updated>2017-12-31T13:48:38.481Z</updated>
    
    <content type="html"><![CDATA[<ul><li>今天是2017年最后一天，2017年12月31日，最后一批90后（生于1999年12月31日）度过了他们18岁的生日。这意味着：从法律上讲，90后一代已全部成年，集体告别了少年时代。</li></ul><ul><li>今年经历了毕业到就业，恋爱到分手。是人生中重要的一年，经历了许多许多事情，心理也俞来俞成熟。</li></ul><ul><li>下午去电影院看了冯导最近热映的电影《芳华》，看完整个人处于低落状态，也许是这个电影的基调就是悲剧、一个时代就是这样吧。</li></ul><ul><li>买的米酒到了，味道甜美香醇，后劲十足。</li></ul><hr><ul><li><p>工作上，出差不断，忙忙碌碌，没有太多进步，感觉自己依然有些浮躁，沉不下去。</p></li><li><p>年终没有攒到钱。</p></li><li><p>心智相比之前更加成熟。</p></li><li><p>认识很多以前没注意到的缺点和不足，接纳真实的自己。</p></li></ul><hr><blockquote><p>新的一年，希望多锻炼，有个健康的体魄。<br>希望能够多读书，增加自己文化素养。<br>通过多认识人结交朋友，更加清晰的认识自己。</p></blockquote><p>2017已去，2018请努力。</p><p>1月2号出差北京，任务红米5首返分析、希望通过本次出差，获的多多的项目经验。加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;今天是2017年最后一天，2017年12月31日，最后一批90后（生于1999年12月31日）度过了他们18岁的生日。这意味着：从法律上讲，90后一代已全部成年，集体告别了少年时代。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;今年经历了毕业到就业，恋爱到分手。是人
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>密码和方言</title>
    <link href="https://mapan.tech/posts/3e9.html"/>
    <id>https://mapan.tech/posts/3e9.html</id>
    <published>2017-12-26T12:38:10.000Z</published>
    <updated>2017-12-26T13:14:37.014Z</updated>
    
    <content type="html"><![CDATA[<p>今天在思考一个问题，如何加密数据才能让自己的通信更安全。诸如我们所使用的微信和QQ、短信等，均有可能被第三方监视和窃取。在这个大数据的时代，自己怎么才能不<strong>被</strong>大数据了呢？</p><p>走在路上听见前面阿姨大妈用上海话叽里呱啦的说话，我一句也听不懂。忽然脑袋里就跳出一个想法，对我来说这不就是所谓的加密了么？</p><p>如果把每个人都看成一个系统，那么两个系统之间的通信，可以被中间者窃听，但是能不能解码出其中的含义就不一定了。</p><blockquote><p>普通话就是为了人与人沟通方便，而约定的一种<code>开源</code>的沟通传递工具语言。</p><p>每个人都会说，能听得懂。对每个人来说，相当于明文。</p><p>对外地人来说，上海话听不懂，在自己的语言系统中，听不懂。上海话就是一个经过加密的信息，密钥就是上海话的说法，说上海话就是加密，听上海话就是解密。</p><p>上海人即能听得懂，又会说的出。这样就完成了最基本的加密解密。</p></blockquote><p>抛开通信的原理不讲，只当通信系统是一个黑盒，微信和QQ是一个黑盒。在这个黑盒实现通信的过程中，是经过第三方的服务器的，数据是有可能<strong>被</strong>大数据的。</p><p>为了保障被践踏的隐私权，我们怎么办呢？</p><p>回到上海阿姨说上海话，如果上海话只有谈话间的阿姨两个人可以听得懂，那么这次谈话就是安全的。在这次安全的通信中，上海话充当了密钥的作用。</p><p>由于上海话即可以说也可以听，所以就充当了加密和解密的两个作用，所以属于对称加密。</p><blockquote><p>这样一来，上海话就是属于一种对称加密算法。</p></blockquote><p>我在想，可以借助如微信、QQ等现有的通信工具，实现简单的通信加密。在发送信息之前，发送的信息经过RSA非对称算法加密，对方收到的消息是一堆乱码。经过密钥解密之后，才可以看到真实的信息。实现类似的效果：</p><blockquote><p>A: Gjhk89kjh89HKJ)6%76GHBJk7T%^90hlkG&amp;^</p><p>B: &amp;(HG^8ThhniJ09(yhKH89^Y&amp;^)ijlGyih()uij)</p><p>A: asdBH和ugdas82^9780HJ#@56gh^Jk0U5</p><p>B: #$khj)j^JjY8jLK;p-)978&amp;^667yh^%%$</p><p>A: HJh&amp;uhy速JKHJuu6hH”sd9kG%j%ijH_=Its </p><p>B: ASHGd876asd5%$^f%^TTG7G&amp;g7y78T6rt%R%5e</p></blockquote><hr><p>自己太菜，并没有技术能力实现。只是灵机一动的想法，如果有机会再去学习相关知识，先马一下自己灵感。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天在思考一个问题，如何加密数据才能让自己的通信更安全。诸如我们所使用的微信和QQ、短信等，均有可能被第三方监视和窃取。在这个大数据的时代，自己怎么才能不&lt;strong&gt;被&lt;/strong&gt;大数据了呢？&lt;/p&gt;
&lt;p&gt;走在路上听见前面阿姨大妈用上海话叽里呱啦的说话，我一句也
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>冬至快乐</title>
    <link href="https://mapan.tech/posts/4d8a.html"/>
    <id>https://mapan.tech/posts/4d8a.html</id>
    <published>2017-12-22T13:53:01.000Z</published>
    <updated>2017-12-22T14:40:19.697Z</updated>
    
    <content type="html"><![CDATA[<p>今天是冬至，也是考研的前一天，同样圣诞节即将来临，是意义非凡的一天。</p><p>圣诞临近，Coding也悄悄的给上了祝福。不同的人很有可能会遇到不同的祝福哦。我遇到是一个圣诞老人和一个圣诞树，哈哈。Coding用命令行来做广告和祝福，真心不错。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpvytbx9gj30g50efjrc.jpg" alt><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpxa7absmj30g50g4jt9.jpg" alt><br>同样今天折腾了下图这个东西。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpw4wmlrvj30id079wes.jpg" alt><br>博客添加了发布时间，最后更新时间，原始链接，许可协议，网站字数等信息。<br>仿造的是Yelee主题的样式。但由于未知原因，单篇文章字数显示不了，也许是自己太折腾了，误删部分Hexo核心代码所导致。</p><p>另外已经备案的<code>lenx.top</code>域名也通过ICP的审核。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpwatijuwj30j20afaac.jpg" alt></p><p>最近为了保重身体也改掉了熬夜的坏习惯，尽量11点之前上床睡觉。感觉改掉一个坏习惯也不是太难的事情。</p><p>今天买了饺子皮和饺子馅，在家里包了饺子。嗯，有图<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpwe0ewuoj31hc140afz.jpg" alt><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpwe99qzdj31hc140jub.jpg" alt></p><p>最后再祝福屏幕前的你，冬至快乐！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天是冬至，也是考研的前一天，同样圣诞节即将来临，是意义非凡的一天。&lt;/p&gt;
&lt;p&gt;圣诞临近，Coding也悄悄的给上了祝福。不同的人很有可能会遇到不同的祝福哦。我遇到是一个圣诞老人和一个圣诞树，哈哈。Coding用命令行来做广告和祝福，真心不错。&lt;br&gt;&lt;img
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>再谈电子DIY</title>
    <link href="https://mapan.tech/posts/58c8.html"/>
    <id>https://mapan.tech/posts/58c8.html</id>
    <published>2017-12-14T11:21:18.000Z</published>
    <updated>2017-12-14T13:46:35.605Z</updated>
    
    <content type="html"><![CDATA[<p>今天无意翻到一个<a href="http://www.pengzhihui.xyz/" target="_blank" rel="noopener">稚晖的博客</a>，看到那些精美的电子制作，把自己的创意一个个变为实物。这种过程真是极美的，又想到自己在大学的时候，那股认真劲儿。大学时候并没有高人指点，另外由于囊中羞涩，许多设备也买不起，没有3D打印机这类高端玩意儿，PCB还仅限于手工制版的阶段，限于工艺限制也只能画单层板，然而这就玩的不亦乐乎。</p><p>就现在的工作认识来看，一个创意从雏形到实物无非就是把创意变成产品，然后卖出去。然而大学里并不考虑卖产品，仅仅限于好玩，开阔专业视野。</p><p>要玩得好电子DIY，把自己的小点子和创意实现。<br>首先需要最基础的模电数电知识，这是硬件搭建的基础。</p><p>原理图要逻辑清晰，原理连接无误，绘制出尽量小的PCB板。可以淘宝打板或者手工制板(麻烦)</p><ul><li>这就需要一定的EDA基础，学会PADS 、Altium等EDA软件。</li></ul><p>程序就是小制作的灵魂，是你的创意实现的过程</p><ul><li>一般使用C、C++等语言。</li></ul><p>ID设计，如果有条件可以用3D打印机，打印出外壳，把硬件电路放壳子里。</p><ul><li>我没有涉及过，不知要学什么。简单点一把热胶枪可以搞定许多事情。</li></ul><p>要做出精美的制作，上面3步都需要做的相当好。</p><p>工作近一年都已经褪去了这种激情，只剩下解硬件bug，提高良率的死循环。<br>创新创作的激情已经磨灭了！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天无意翻到一个&lt;a href=&quot;http://www.pengzhihui.xyz/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>零基础免费搭建个人博客网站</title>
    <link href="https://mapan.tech/posts/e10b.html"/>
    <id>https://mapan.tech/posts/e10b.html</id>
    <published>2017-12-03T01:26:53.000Z</published>
    <updated>2019-03-11T11:03:32.102Z</updated>
    
    <content type="html"><![CDATA[<p>在大学时候自学过一丁点HTML的基础皮毛，对建站有那么一丁点的认识。作为自己业余爱好建立了本博客，简单的写下来搭建方法给搞技术的朋友们。</p><h3 id="一、网站概念"><a href="#一、网站概念" class="headerlink" title="一、网站概念"></a>一、网站概念</h3><p>首先来科普下网站的概念:<br>笼统的讲，网站有两类：<a href="https://baike.baidu.com/item/%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/2776858?fr=aladdin" target="_blank" rel="noopener">动态网站</a>和<a href="https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/2776875?fr=aladdin" target="_blank" rel="noopener">静态网站</a>。并不是动态网站会动，静态网站不会动，千万不要这样理解，是会被笑话的。<br>简单地说，程序是否在服务器端运行，是<strong>重要标志</strong>。<br>在服务器端运行的程序、网页、组件，属于动态网页，它们会随不同客户、不同时间，返回不同的网页，例如ASP、PHP、JSP、 CGI等。</p><p>而静态网站只有固定的文件，是单向的，类似你用文件管理器浏览你硬盘里面的资料，这些资料并不会由于不同用户，不同时间浏览而对你显示不同的效果，无论你在何地、何时打开播放<code>1.MP3</code>，他就只会播放<code>1.MP3</code>。详细的解释可以点前面超链接了解区别。</p><h3 id="二、最终选择"><a href="#二、最终选择" class="headerlink" title="二、最终选择"></a>二、最终选择</h3><p>既然标题说了是0元建站，那就该省的都省了(省了服务器费用，域名费用)，为了保证良好的访问速度和体验，我们选择静态网站。</p><p>静态网站是需要有本地的网站渲染程序进行渲染我们的网站文件，不然纯手敲HTML+CSS+JS，那更新一篇文章可敲到何年何月了。<br>简单的说，我们搭建好环境后，我们只负责写文章内容，其他网页代码交给程序渲染生成。然后把这套网站代码上传服务器即可。<br>同类的静态博客程序有很多，前3名依次是Jekyll 、 Hexo 、 Hugo。三个我都有尝试过，最后选择了用户量第二的Hexo，个人感觉是三者中最简单快捷的。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq94zggn6lj30p90b13yz.jpg" class="full-image"><br>据说Hexo是一个台湾学生的毕业设计，所以比较符合国人的使用习惯，支持国产。原理：<code>hexo</code>渲染出网站文件，使用<code>git</code>工具上传到<code>Coding</code>服务器。</p><h3 id="三、准备工作"><a href="#三、准备工作" class="headerlink" title="三、准备工作"></a>三、准备工作</h3><p>Windows 7 &amp;&amp; 10 环境下 需要安装：</p><blockquote><ul><li>Node.js</li><li>Git</li><li>文本编辑器(推荐Sublime)</li></ul></blockquote><p>需要注册的网站：Coding</p><h4 id="3-1-安装node-js-必须"><a href="#3-1-安装node-js-必须" class="headerlink" title="3.1 安装node.js(必须)"></a>3.1 安装node.js(必须)</h4><p>下载: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网下载</a> <a href="https://pan.baidu.com/s/1cLL8Fc" target="_blank" rel="noopener">百度云</a> 密码:xnb2<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3ipzy2opj30ef0b6my3.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3iq6vm6tj30dz0b1wfj.jpg" alt><br>一路Next即可<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3irnujuhj30e70b63zc.jpg" alt><br>最后点Finsh，安装完毕。<br>（PS: 如果安装失败，提示ERROR code：XXXX 巴拉巴拉等字样，请尝试用管理员权限安装。）</p><h4 id="3-2-安装Git-必须"><a href="#3-2-安装Git-必须" class="headerlink" title="3.2 安装Git(必须)"></a>3.2 安装Git(必须)</h4><p>下载: <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">官网下载</a> <a href="https://pan.baidu.com/s/1bZI2Zk" target="_blank" rel="noopener">百度云</a> 密码:2d4b<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3iti05mjj30eb0b03zf.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3iu57i8pj30eb0b3dgt.jpg" alt><br>同样一路Next<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3ivqo8upj30e50b3gma.jpg" alt><br>最后点Finsh，安装完毕。</p><h4 id="3-3-安装Sublime-Text3-可选"><a href="#3-3-安装Sublime-Text3-可选" class="headerlink" title="3.3 安装Sublime Text3(可选)"></a>3.3 安装Sublime Text3(可选)</h4><p>下载: <a href="https://www.sublimetext.com/" target="_blank" rel="noopener">官网下载</a> <a href="https://pan.baidu.com/s/1nuXulwl" target="_blank" rel="noopener">百度云</a> 密码:uhzl</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3ixavhr5j30ea0b2aax.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3iz1d0v6j30ek0b73zi.jpg" alt><br>然后一路Next ，最后Finsh即可。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3izu2k47j30ef0b83zh.jpg" alt></p><p>建议添加右键菜单，添加成功后如下图<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm3j30f444j30b60b9tb7.jpg" alt></p><h4 id="3-4-注册Coding-必须"><a href="#3-4-注册Coding-必须" class="headerlink" title="3.4 注册Coding(必须)"></a>3.4 注册Coding(必须)</h4><p>(PS：Coding已经被腾讯收购，变成了腾讯开发者平台。其他托管服务商同样可以用，本文以Coding举例)</p><p><a href="https://coding.net/r/LTANRJ" target="_blank" rel="noopener">Coding</a>提供了page服务，是我们用来放网站文件的免费<strong>‘服务器’</strong><br><strong>用户名</strong>设置后不可更改，如果不打算买域名，那么以后你的网站地址就是 <code>https://用户名.coding.me</code>,建议自己想好再设置。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3j7u0fmsj30my0kin85.jpg" alt><br>注册后，会提示验证邮箱。</p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3j8o0ncwj30my0kidkk.jpg" alt></p><p>我们登录填写的邮箱，进行验证</p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3ja87gtlj30qh0pqgnz.jpg" alt></p><p>进入之后，创建第一个新项目<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3jbnutzuj311b0kin28.jpg" alt></p><p>如下图设置：<br>项目名称填写: <code>用户名.coding.me</code>(用户名复制自己的)<br>(请注意用户名区分大小写，请严格比照图示设置<em>项目名称</em>，否则后面会报错。)<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3jiyl9yfj30vu0pm0w3.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3jlzk62fj30xo0ktdj4.jpg" alt><br>提示<code>Coding Pages 已经运行在 http://xxx.coding.me</code><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7v38qnhwj311e0h9di9.jpg" alt><br>现在Coding端设置已经完成。</p><p>Ps: 同类的代码托管网站有Gitee、Github等。本文选择国内速度比较块快，功能完善的Coding。<br>其他托管网站也可使用，与Coding大同小异，这里不再赘述。</p><h3 id="四、安装Hexo"><a href="#四、安装Hexo" class="headerlink" title="四、安装Hexo"></a>四、安装Hexo</h3><h4 id="4-1-创建网站本地目录"><a href="#4-1-创建网站本地目录" class="headerlink" title="4.1 创建网站本地目录"></a>4.1 创建网站本地目录</h4><p>在电脑上新建一个<code>Blog</code>文件夹，建议D盘根目录如 <code>D:/Blog</code>，这个文件夹是我们本地网站的目录。由于我在虚拟机下，只有C盘，所以我建在桌面。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3stnw8l6j30op0avgol.jpg" alt></p><h4 id="4-2-切换NPM源"><a href="#4-2-切换NPM源" class="headerlink" title="4.2 切换NPM源"></a>4.2 切换NPM源</h4><p>NPM源由于服务器在国外，速度比较慢。为了避免安装中断，我们使用<a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝NPM镜像</a>，输入以下命令安装cnpm，等待几分钟完成(我这里用了131s)。(仅需一次)<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3ouuj4pkj30em0ahdgn.jpg" alt><br>(如果此步骤提示找不到npm指令，请检查node.js是否安装成功,另外检查指令是npm！是npm！是npm！，不要输错了)</p><h4 id="4-3-安装Hexo"><a href="#4-3-安装Hexo" class="headerlink" title="4.3 安装Hexo"></a>4.3 安装Hexo</h4><p>使用以下命令安装Hexo(仅需一次)<br><code>cnpm install -g hexo-cli</code></p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3p3kr4itj30gb0gpgnn.jpg" alt></p><p>使用<code>hexo -v</code>指令查看hexo的版本，如下图可以看出</p><p><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3p6evhhlj30gj08s754.jpg" alt></p><p>使用<code>hexo init</code>指令初始化hexo(仅需一次)<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3pd0ezr4j30gg0ddmyp.jpg" alt></p><h4 id="4-4-本地预览网站"><a href="#4-4-本地预览网站" class="headerlink" title="4.4 本地预览网站"></a>4.4 本地预览网站</h4><p>使用<code>hexo s</code>指令预览网站，可能Windows防火墙会弹出提示，这时候我们选择允许访问<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3phcjgy3j30go0dsdi6.jpg" alt></p><p>上图提示信息意思为hexo已经运行在<code>http://localhost:4000/</code>,你可使用<code>Ctrl + C</code>组合键来停止预览。现在不要动这个窗口(不要按CTRL+C，否则就退出了)，我们打开浏览器访问<code>http://localhost:4000/</code><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3po60gqsj311y0jg4ez.jpg" alt><br>如上图，你现在已经成功一大半了。现在网站已经可以运行在我们电脑本地了，但是别人还不能访问，因为网站文件仅仅在我们自己电脑上。需要传到Coding上之后，别人才可以访问你的网站。</p><h4 id="4-5-Blog文件夹的目录结构-了解"><a href="#4-5-Blog文件夹的目录结构-了解" class="headerlink" title="4.5 Blog文件夹的目录结构(了解)"></a>4.5 Blog文件夹的目录结构(了解)</h4><p>我们可以了解下Blog目录下的每个文件夹及文件的作用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy       #需要部署的文件</span><br><span class="line">├── node_modules  #Hexo插件</span><br><span class="line">├── public        #生成的静态网页文件</span><br><span class="line">├── scaffolds     #模板</span><br><span class="line">├── source        #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里</span><br><span class="line">|   ├── _drafts   #草稿</span><br><span class="line">|   └── _posts    #文章</span><br><span class="line">├── themes        #主题</span><br><span class="line">├── _config.yml   #全局配置文件</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure></p><h3 id="五、配置SSH部署公钥-仅需一次"><a href="#五、配置SSH部署公钥-仅需一次" class="headerlink" title="五、配置SSH部署公钥(仅需一次)"></a>五、配置SSH部署公钥(仅需一次)</h3><p>本步骤的目的是<strong>确保只有你本人才能改动和编辑网站内容</strong>。<br>回到bash黑窗口，输入指令<code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code>(你的邮箱)，连续点击 Enter 键即可。(<strong> 指令中的字母 C要大写、C要大写、C要大写 ，注意空格、注意空格、注意空格，重要的事情说三遍！</strong>)<br>如下图<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3rbpncjvj30gp0ax0u5.jpg" alt><br><a href="https://coding.net/help/doc/account/ssh-key.html" target="_blank" rel="noopener">官方参考</a></p><p>配置的目的是为了保证只有自己可以改动和上传到仓库，防止别人更改你网站的内容。<br>找到我们刚刚生成的公钥<code>id_rsa.pub</code>,编辑器打开，复制里面的内容<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3rhehsk3j30q40g00x6.jpg" alt></p><p>回到Coding网站，把粘贴板上的内容粘贴到里面，如下图。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3qyne40lj30sz0l1q6t.jpg" alt><br>点击添加，会验证Coding的密码，输入Coding的密码即可。<br>这样就完成了公钥的配置。</p><h3 id="六、配置博客网站"><a href="#六、配置博客网站" class="headerlink" title="六、配置博客网站"></a>六、配置博客网站</h3><p>打开Blog文件夹，如下图我们使用Sublime打开<code>_config.yml</code>文件，对博客进行配置。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3ptmnaerj30nm0gj0vb.jpg" alt></p><p>配置文件使用的语法<strong>大小写敏感</strong>，<strong>空格敏感</strong>。<strong>英文冒号后必须有空一个空格</strong> 使用<code>#</code>号注释<br>我们可以随意更改的有<code>tittle</code>网站标题，<code>subtitle</code>小标题， <code>description</code>网站描述。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3q7daa4jj30et0i9400.jpg" alt><br>第10和11行<code>语言</code>和<code>时区</code>可以默认空着。如需填写可复制如下配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure></p><p>第15行<code>url:</code>这里填写我们第三步中提示的URL，即我们以后将使用的域名(域名就是网址)。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7v6k5eo9j30o80dit9z.jpg" alt><br>其他项如不清楚含义或者格式，强烈建议不要修改。</p><p>配置文件拉到最下面 (<strong>重要</strong>)，本部分修改的是上传的地址，是网站是否能成功上传到服务器的关键<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fm4fk3zcsrj30mb0b5gm2.jpg" alt><br>配置原文如下，coding部分替换成你自己的Coding地址。<br>当然也可以配置多个远程地址，自定义添加即可。如下图，记得替换仓库地址。不要忘记添加相应的SSH密钥到对应的平台。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo:</span><br><span class="line">      coding: git@git.dev.tencent.com:mapan/posts.git</span><br><span class="line">      #github: git@github.com:username/xxx.git</span><br><span class="line">      #gitee: git@gitee.com:username/posts.git </span><br><span class="line">    branch: master</span><br><span class="line">    message: xx更新了博客更新了博客 # 这里可以随便写，每次更新博客提交的显示的信息。</span><br></pre></td></tr></table></figure></p><p>Coding地址从Coding网站的这里找到:<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3qt5ademj30xa0nc42i.jpg" alt></p><h3 id="七、配置Git和Git部署插件"><a href="#七、配置Git和Git部署插件" class="headerlink" title="七、配置Git和Git部署插件"></a>七、配置Git和Git部署插件</h3><h4 id="7-1-配置git昵称和邮箱-仅需一次"><a href="#7-1-配置git昵称和邮箱-仅需一次" class="headerlink" title="7.1 配置git昵称和邮箱(仅需一次)"></a>7.1 配置git昵称和邮箱(仅需一次)</h4><p>继续回到bash黑色框框<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3stnw8l6j30op0avgol.jpg" alt><br>使用命令<code>git config --global user.email &quot;you@email.com&quot;</code>配置Git邮箱，记得把邮箱替换成自己的<br>使用命令<code>git config --global user.name &quot;Kevin&quot;</code>配置Git用户名，记得把昵称替换成自己的<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpvqx6md2j30gk08ijsl.jpg" alt></p><h4 id="7-2-安装git上传插件-只需一次"><a href="#7-2-安装git上传插件-只需一次" class="headerlink" title="7.2 安装git上传插件(只需一次)"></a>7.2 安装git上传插件(只需一次)</h4><p>使用以下命令安装hexo-deployer-git工具<br><code>cnpm install hexo-deployer-git --save</code><br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3rpznk5gj30gj08x0tx.jpg" alt></p><h3 id="八、网站PUSH到Coding"><a href="#八、网站PUSH到Coding" class="headerlink" title="八、网站PUSH到Coding"></a>八、网站PUSH到Coding</h3><p><code>hexo g</code>代表渲染网站文件，<code>hexo d</code>代表push网站文件到云端仓库，这两条指令可以单独依次执行。<br>（<code>hexo g &amp;&amp; hexo d</code>或者<code>hexo d -g</code>这两个是组合命令，作用相同，以后熟练可以使用。）<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fmpvrl4pi5j30gk08idh1.jpg" alt></p><p>然后会弹出一个让你确认的窗口，你输入<code>yes</code>后确定即可。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fm3rytu0v5j30h20e70uz.jpg" alt></p><h3 id="九、访问网站"><a href="#九、访问网站" class="headerlink" title="九、访问网站"></a>九、访问网站</h3><p>现在我们访问自己的域名 <a href="https://mapann.coding.me/" target="_blank" rel="noopener">https://mapann.coding.me</a>即可访问我们自己搭建的网站了。如果看到已经可以访问，那么恭喜！大功告成！</p><hr><h3 id="如何写文章？"><a href="#如何写文章？" class="headerlink" title="如何写文章？"></a>如何写文章？</h3><p>可以看我这篇文章 <a href="/posts/2b94.html" target="_blank">使用Hexo写文章</a></p><h3 id="后续优化"><a href="#后续优化" class="headerlink" title="后续优化"></a>后续优化</h3><h4 id="如何更改主题？"><a href="#如何更改主题？" class="headerlink" title="如何更改主题？"></a>如何更改主题？</h4><p>(挖坑待填)<br>可以自定义和优化的有很多，比如不喜欢默认的主题，我们可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a><br>下载更漂亮的主题，如比较火的<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT主题</a>。</p><h4 id="如何绑定自定义域名？"><a href="#如何绑定自定义域名？" class="headerlink" title="如何绑定自定义域名？"></a>如何绑定自定义域名？</h4><p>(挖坑待填)<br>可以绑定自己的域名。(域名就收费了，不在本文探讨范围内)</p><h4 id="如何压缩网站文件，加快访问速度？"><a href="#如何压缩网站文件，加快访问速度？" class="headerlink" title="如何压缩网站文件，加快访问速度？"></a>如何压缩网站文件，加快访问速度？</h4><p>可以看我这篇文章 <a href="/posts/8f24.html" target="_blank">HEXO优化之GULP</a></p><h4 id="如何使用图床？如何在文章插入图片？"><a href="#如何使用图床？如何在文章插入图片？" class="headerlink" title="如何使用图床？如何在文章插入图片？"></a>如何使用图床？如何在文章插入图片？</h4><p>可以看我这篇文章 <a href="/posts/c9c3.html" target="_blank">使Hexo文章图文并茂</a></p><h4 id="如何升级为HTTPS访问？"><a href="#如何升级为HTTPS访问？" class="headerlink" title="如何升级为HTTPS访问？"></a>如何升级为HTTPS访问？</h4><p>现在Coding默认支持https，在Coding端打开即可，其他部署平台类似。</p><p>快去写文章吧，网站只是载体和工具，内容才是主要的。等待你的友链！<br>如果你在按照教程走出现了问题，可以在下方评论区留言，或者进Q群讨论 613284009<br><img src="https://ws1.sinaimg.cn/small/005vwoCygy1fm3ubl4vnqj30f00kk3zf.jpg" alt></p><p><a href="http://blog.csdn.net/jzooo/article/details/46781805" target="_blank" rel="noopener">本文参考</a></p><hr><p>2017-12更新</p><p>如果觉得有难度不容易上手，那么还可以有以下几个选择：<br><a href="http://blog.csdn.net" target="_blank" rel="noopener">CSDN博客</a>: 集成好的功能，只需要注册即可使用，但并不是独立博客。<br><a href="https://www.jianshu.com/" target="_blank" rel="noopener">简书</a>:  一个比较文艺的地方，你同样可以用来写技术文章，同样注册即可使用，不是独立博客。<br><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a>: 可定制化比较强，听名字就知道是做什么了。<br><a href="https://cn.wordpress.org/" target="_blank" rel="noopener">wordpress</a>、<a href="http://typecho.org/" target="_blank" rel="noopener">typecho</a>等其他动态博客程序 ：部署简单、需要购买虚拟主机或者VPS服务器。</p><p>···</p><p>其实说到底博客只是一个用来展示自己的地方，重要的还是自己有所学习，一个博客的内容才是最重要的。写本文的目的仅仅是为了帮助一些做技术但对网站前端不太懂，而且想少花钱搭建独博客的人。<br>做技术本身就要一股钻劲儿，要知道专业领域比搭网站复杂的多。</p><hr><p>2019-02更新<br>如今Coding已经被腾讯收购，变身为<a href="https://dev.tencent.com/" target="_blank" rel="noopener">腾讯开发者平台</a>,但是换汤不换药，仍然提供pages服务，而且不需要再页面底部添加<code>hosted by</code>的广告，据说还是Coding的原班人马在运营维护。另外Hexo的同类产品<a href="https://gohugo.io" target="_blank" rel="noopener">Hugo</a>发展迅猛，官方宣传现在主题数目已经超过Hexo。我试用了Hugo，安装十分方便，渲染速度快，当然也有缺点，现阶段Hugo在国内使用的人还是相对较少，所以中文文档和资料少，遇到问题一般要去搜索英文论坛之类。国外火爆的另一个缺点是网站默认引用许多国外的CDN资源，众所周知的大陆网络的情况，国外的CDN资源加载速度比较慢甚至不能访问，需要自己去优化，把国外资源本地化或者换成国内的CDN。</p><hr><blockquote><h3 id="FAQ-常见问题"><a href="#FAQ-常见问题" class="headerlink" title="FAQ (常见问题)"></a><em>FAQ</em> (常见问题)</h3></blockquote><h4 id="1-执行hexo-d报错"><a href="#1-执行hexo-d报错" class="headerlink" title="1.执行hexo d报错"></a>1.执行<code>hexo d</code>报错</h4><p><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq95ekwmvwj30p60bujt2.jpg" alt><br>原因: <code>_config.yml</code> 文件内容格式错误，其实上图已经提示的非常清楚了。其中错误是在第9行，第9个字符<code>keywords:</code>附近出现，而且非常贴心的使用箭头指出了位置。<br>我们看一下出错原因，看下图。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq95l6glfcj30dt0k545l.jpg" alt><br>英文冒号之后，是需要加一个空格的。为什么推荐使用sublime这个编辑器呢？原因就在这里，这个默认的语法高亮很贴心，当你语法出错的时候，颜色就不变的不同。<br>解决方法：<strong>英文冒号</strong> 后添加一个空格。</p><h4 id="2-npm-commnd-not-found"><a href="#2-npm-commnd-not-found" class="headerlink" title="2.npm commnd not found"></a>2.npm commnd not found</h4><p>首先排查npm是否安装成功，在git bash里分别输入<code>npm -v</code> 和<code>node -v</code><br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq95vwvxsjj30am03ogll.jpg" alt><br>如果出现<code>bash: node: command not found</code>说明node安装失败，请尝试使用管理员权限重新安装。</p><p>如果出现正确的版本号，说明npm和node安装成功了。请继续往下看</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fq95qebwdlj30cw02gjrb.jpg" alt><br>原因：仔细看下，是npm！不是nmp！复制粘贴不比手敲要快准确率要高啊？<br>建议直接鼠标复制，粘贴操作，减少错误概率。<br>解决方法： nmp更正为npm<br>类似的 <strong>少个空格</strong>，<strong>大小写错</strong>，<strong>多个空格</strong>之类的低级错误，请先与示例图片对比检查。</p><h4 id="3-除了Coding，有别的托管服务商吗？"><a href="#3-除了Coding，有别的托管服务商吗？" class="headerlink" title="3.除了Coding，有别的托管服务商吗？"></a>3.除了Coding，有别的托管服务商吗？</h4><p>有，除了Coding（腾讯开发者平台），还有<a href="https://gitee.com/" target="_blank" rel="noopener">Gitee</a>，<a href="https://github.com/" target="_blank" rel="noopener">Github</a>，<a href="https://about.gitlab.com/" target="_blank" rel="noopener">Gitlab</a>，<a href="https://bitbucket.org" target="_blank" rel="noopener">Bitbucket</a>等等。</p><h4 id="4-有没有免费的顶级域名？"><a href="#4-有没有免费的顶级域名？" class="headerlink" title="4.有没有免费的顶级域名？"></a>4.有没有免费的顶级域名？</h4><p>有，<a href="http://www.freenom.com/en/index.html" target="_blank" rel="noopener">freenom</a>这个网站提供最长一年的顶级域名注册,一年到期还可以手动续。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在大学时候自学过一丁点HTML的基础皮毛，对建站有那么一丁点的认识。作为自己业余爱好建立了本博客，简单的写下来搭建方法给搞技术的朋友们。&lt;/p&gt;
&lt;h3 id=&quot;一、网站概念&quot;&gt;&lt;a href=&quot;#一、网站概念&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="https://mapan.tech/posts/2148.html"/>
    <id>https://mapan.tech/posts/2148.html</id>
    <published>2017-10-26T14:26:53.000Z</published>
    <updated>2017-11-01T14:06:45.713Z</updated>
    
    <content type="html"><![CDATA[<p>一开始接触Git是搭建hexo 博客的时候，对Git没有什么理解和印象只感觉是一个上传东西的工具。<br>在刚来上海求职时候，一间公司面试官问我会不会Git，我说了解。直到最近才了解和学习了一部分的Git用法和指令，在这里整理记录下来，以备不时之需。</p><p>初始化本地仓库<br><code>git init</code></p><p>本地仓库添加到暂存区<br><code>git add .</code></p><p>提交到主要分支<br><code>git commint -m &quot;XXX&quot;</code></p><p>推送到远程仓库<br><code>git push oririn master</code></p><p>撤销暂存区的修改<br><code>git checkout -- xxx.xx(文件名)</code></p><p>查看当前仓库状态<br><code>git status</code></p><hr><p>10.27更新</p><p>返回根目录<br><code>cd ../..</code><br>cd命令是切换目录的作用</p><p><code>git pull origin master</code>这条指令是把远程仓库拉回本地。<br>但是远程仓库比本地新的时候，需要执行下面一条，意思是把远程的仓库master同步到本地。<br><code>git pull origin master --allow-unrelated-histories</code></p><hr><p>11.1更新</p><p>使用git add添加要提交的文件的时候，如果文件名是中文，会显示形如<code>274\232\350\256\256\346\200\273\347\273\223.txt</code>的乱码。<br>解决方案：<br>在bash提示符下输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure></p><p>使用<code>git log</code>或者<code>git commit -m &quot;更新xx文件&quot;</code>显示提交的中文信息乱码。</p><p>解决方案：<br>设置git gui的界面编码<br>在bash提示符下输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global gui.encoding utf-8</span><br></pre></td></tr></table></figure></p><p>使用<code>git push origin master</code>提交代码时候出现如下<code>warning</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">warning: LF will be replaced by CRLF in /*/*.***.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br></pre></td></tr></table></figure></p><p>解决方案:<br>在bash提示符下输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false  //禁止自动转换</span><br></pre></td></tr></table></figure></p><p>千万不要手贱执行下面的命令<br><code>rm -rf .git</code><br>这是删除<code>.git</code>文件夹的命令，删除了就不太容易找回来了，不会告诉你我是怎么知道的。<br>还有<code>git clean -df</code>这条指令。不要碰</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一开始接触Git是搭建hexo
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>换电脑</title>
    <link href="https://mapan.tech/posts/d190.html"/>
    <id>https://mapan.tech/posts/d190.html</id>
    <published>2017-10-23T00:26:53.000Z</published>
    <updated>2017-10-23T00:40:26.335Z</updated>
    
    <content type="html"><![CDATA[<p>自己的电脑是2014年3月买的，到现在已经服役了近4年。原始配置还停留在<code>i5-4200M</code> + <code>4GB DDR3L</code> + <code>GT740M</code> + <code>5400rpm 750G @SATA2.6</code></p><p>期间加了一个4GB内存条,对性能提升也不是很明显。我不怎么玩游戏，仅看看文档，敲敲代码，看看原理图，对显卡没有要求，这显卡看原理图也足够了。已经一年多没有重装系统了，没有安装杀毒软件,仅使用微软家的 <code>Windows Defender</code>也定期清理缓存和注册表，但就是电脑越用越卡，还经常关不了机。<br>一气之下想要换个电脑用用。那么问题来了，没钱？！！！（人工/笑哭）</p><p>那么就升级个固态吧，毕竟电脑硬盘还跑在SATA2.6的速度上，瓶颈原来在这，以前一直没有注意过。光驱留着也没什么用，索性干掉，加了一个120G SSD，重新安装系统。电脑瞬间满血复活，感觉还能再战斗个3年不是问题。<br>那么问题又来了，不是说要换电脑的吗？(/捂脸)拿一块抹布，把电脑上的灰擦一擦，又是干净崭新的，系统也是新的。就假装换了一个新电脑吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;自己的电脑是2014年3月买的，到现在已经服役了近4年。原始配置还停留在&lt;code&gt;i5-4200M&lt;/code&gt; + &lt;code&gt;4GB DDR3L&lt;/code&gt; + &lt;code&gt;GT740M&lt;/code&gt; + &lt;code&gt;5400rpm 750G
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>美食集锦</title>
    <link href="https://mapan.tech/posts/100a.html"/>
    <id>https://mapan.tech/posts/100a.html</id>
    <published>2017-10-21T13:26:53.000Z</published>
    <updated>2017-11-02T12:58:15.825Z</updated>
    
    <content type="html"><![CDATA[<p>出差归来正好是周末，有时间烧菜吃</p><p>干煸小鸡腿<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c9l7ouj30p00xcdpx.jpg" alt="干煸小鸡腿"><br>刚下锅的小鸡腿<br><div id="dplayer7" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer7"),"video":{"url":"//ofasa9w0p.bkt.clouddn.com/100a/005.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><br>做好的小鸡腿瞬间被吃完了，只好留一段小视频了。</p><p>红烧小排<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c7sg36j30qo0zktbg.jpg" alt="红烧小排"></p><p>排骨汤小面<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c84cgyj30qo0zkq56.jpg" alt="排骨汤小面"></p><p>家常菜可以hold的住</p><p>比肉还要好吃的炒冬瓜<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c7t6ynj30qo0zk3zl.jpg" alt="比肉还要好吃的炒冬瓜"></p><p>干锅土豆片<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c7un3bj30qo0zk0u9.jpg" alt="干锅土豆片"></p><p>线椒炒鸡蛋<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c8snccj30p00xcwmh.jpg" alt="线椒炒鸡蛋"></p><p>鸡蛋面汤(鸡蛋稀饭)<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c8vv78j30qo0zk458.jpg" alt="鸡蛋稀饭"></p><p>奥尔良炸鸡腿<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41c9kxs5j30qo0k0qbv.jpg" alt="奥尔良炸鸡腿"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;出差归来正好是周末，有时间烧菜吃&lt;/p&gt;
&lt;p&gt;干煸小鸡腿&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005vwoCygy1fl41c9l7ouj30p00xcdpx.jpg&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>If You Are Going To Try</title>
    <link href="https://mapan.tech/posts/11ef.html"/>
    <id>https://mapan.tech/posts/11ef.html</id>
    <published>2017-10-15T13:03:53.000Z</published>
    <updated>2017-11-10T13:41:09.291Z</updated>
    
    <content type="html"><![CDATA[<p align="center">Charles Bukowski, Factotum</p><p><script src="//api.html5media.info/1.1.8/html5media.min.js"></script></p><p align="center"><audio src="http://ohjy75rmz.bkt.clouddn.com/IfYouAreGoingToTry.mp3" controls preload></audio></p><p align="center"><i>If you're going to try, go all the way. </i></p><p align="center">如果你想尝试，那就全力以赴</p><p align="center"><i>Otherwise, don't even start.</i></p><p align="center">否则，就不要开始</p><p align="center"><i>If you're going to try, go all the way. </i></p><p align="center">如果你想尝试，那就全力以赴</p><p align="center"><i>This could mean losing girlfriends, wives, relatives, jobs and maybe your mind. </i></p><p align="center">这将意味着你可能要失去女朋友，妻子，家庭，工作，甚至你的意志</p><p align="center"><i>Go all the way.</i></p><p align="center">全力以赴</p><p align="center"><i>It could mean not eating for three or four days. </i></p><p align="center">意味着你可能数天没吃没喝</p><p align="center"><i>It could mean freezing on a park bench. </i></p><p align="center">意味着你可能在寒风刺骨的时睡大街桥洞</p><p align="center"><i>It could mean jail. </i></p><p align="center">甚至被拘留监禁</p><p align="center"><i>It could mean derision, mockery, isolation.</i></p><p align="center">意味着你可能被嘲笑、戏弄和孤立</p><p align="center"><i>Isolation is the gift. </i></p><p align="center">孤立是一份礼物</p><p align="center"><i>All the others are a test of your endurance, of how much you really want to do it.</i></p><p align="center">是所有人对你毅力的一份考验，考验你多想做成一件事</p><p align="center"><i>And, you'll do it, despite rejection and the worst odds. </i></p><p align="center">你会做到的，尽管被拒绝，做好最坏的打算</p><p align="center"><i>And it will be better than anything else you can imagine.</i></p><p align="center">它会超出你的任何想象</p><p align="center"><i>If you're going to try, go all the way. </i></p><p align="center">如果你想尝试，那就全力以赴</p><p align="center"><i>There is no other feeling like that.</i></p><p align="center">没有别的事情能如此感受</p><hr><p>摘录自Charles Bukowski的《Factotum》一段，有轻微改动。<br>原谅我渣渣的英语水平，翻译的不忍直视。<br>听到这首朗诵时，深深被惊了一下。配乐加上深沉的嗓音，与诗文混为一体，仿佛是作者自己在诉说自己心底的境遇，我不知道作者经历了什么，能够写出如此深沉的文字。然后我反复的读，反复的听，去用心体会作者的感情，越发喜欢。<br>追求，追求一份想做的事！可能你要放弃事业，丢掉爱情，丢掉家庭，甚至坐牢，这仅仅是为了要去做你想做的事情，这需要莫大的勇气，需要多少经历,才能敢于做出这样的决定！<br>可爱的人，勇敢去梦，勇敢去逐梦。Just <strong>do</strong> and <strong>keep in</strong> it.</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p align=&quot;center&quot;&gt;Charles Bukowski, Factotum&lt;/p&gt;

&lt;p&gt;&lt;script src=&quot;//api.html5media.info/1.1.8/html5media.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>汪国真《许诺》赏析</title>
    <link href="https://mapan.tech/posts/2337.html"/>
    <id>https://mapan.tech/posts/2337.html</id>
    <published>2017-10-13T14:20:03.000Z</published>
    <updated>2017-10-13T15:22:45.194Z</updated>
    
    <content type="html"><![CDATA[<p align="center" style="font-size:25px;">许诺</p><p align="center">汪国真</p><p align="center"><i>不要太相信许诺</i></p><p align="center"><i>许诺是时间结出的松果</i></p><p align="center"><i>松果尽管美妙</i></p><p align="center"><i>谁能保证不会被季节打落</i></p><p align="center"><i>机会，凭自己争取</i></p><p align="center"><i>命运，靠自己把握</i></p><p align="center"><i>生命是自己的画板</i></p><p align="center"><i>为什么要依赖别人着色</i></p><hr><p>看一下这首诗的前半部分，写的是不要相信许诺，相信很多人会把这个<em>许诺</em>  对号入座在恋爱关系当中去，的确写的很恰当，许多人会说：恋爱中的诺言听听而已，不必当真。<br>然而我看来，有许多人不相信许诺更多的是不相信自己能够做到当初许下的承诺，而刻意拒绝许诺。<br>诺言是时间结出的松果，是美好的果实，我们应该为享用这美好的果实而付诸行动。<br>要相信美好，相信自己能做到。</p><p>另外诗的下半部分写的特别好，机会是凭借自己争取的，命运靠自己把握。<br>思想决定了眼界，而眼界决定了能达到的高度。<br>唯有自己成为有独立思想的人，才不依靠比人的着色。<br>而怎样成为独立思想的人，就需要大量去实践、去思考和总结。<br>多读书是一个很好的法子。</p><hr><p>这首诗写的很大，很空。没有实例，所以每个人读起来都会有不同的想法与感受。这正是诗歌之美</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p align=&quot;center&quot; style=&quot;font-size:25px;&quot;&gt;许诺&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;汪国真&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;i&gt;不要太相信许诺&lt;/i&gt;&lt;/p&gt;
&lt;p
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>当谈论爱情时，我们在谈论什么</title>
    <link href="https://mapan.tech/posts/12ed.html"/>
    <id>https://mapan.tech/posts/12ed.html</id>
    <published>2017-10-10T23:59:08.000Z</published>
    <updated>2017-10-14T01:23:18.999Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初相遇时的美好"><a href="#初相遇时的美好" class="headerlink" title="初相遇时的美好"></a>初相遇时的美好</h3><p>初相遇时你和ta的每一句话每一瞬间都希望截图保存下来，你会在意ta的每一句话，与ta交流时会小心的组织好语言再说出来，省怕哪句话说的不恰当。初相遇时你会珍惜在一起的每个瞬间，会展现出你最好的一面。初相遇的时光，仿佛能拧出甜蜜的汁水一样，浓郁香甜，你想起ta时，脸上永远挂着笑。这个时期你会发现，ta原来和你想象中不太一样，你们会互相了解，发现他会有优点也会有缺点，ta并不是完美的。虽然和自己想象中不同，但你仍内心接受ta。这样的时光大约会存在一个月到三个月左右，称为热恋。</p><h3 id="磨合期的苦涩"><a href="#磨合期的苦涩" class="headerlink" title="磨合期的苦涩"></a>磨合期的苦涩</h3><p>可能你们仍然处在热恋中，但由于某件小事，你和ta发生了一点点小摩擦，吵了一架。肯定是你或者ta做出让步，并承诺说以后不吵了，一定会注意的，并放在心上。你们会说吵架这是很正常的，情侣之间哪里有不吵架的，也会反思你们各自的原因，可是当局者迷，你们的反思往往是不真实的。时间久了，人都会慢慢的卸下最好的一面，表现出真实的你们，慢慢的摩擦会越来越多，你们每次都会反思，想找不吵架的原因，可每次的反思不一定都是真实的，因为那是夹杂着主观感受的反思，所以总是找不到根本原因，所以仍然会继续吵下去。也许你们热恋时的感情，正在由于每一次的吵架而一点一滴的消失殆尽，慢慢的都会发现你会对他发脾气了，当初ta皱一下眉头你都会安慰半天，现在ta哭了你也不担心了，而且你还在继续说出扎心的话。吵架的原因往往是ta说的话和做的事与你的预期不符，你不满意，慢慢的你们会越吵越凶，吵架不断升级。自己不开心时，他不开心时，观念不同时，都会大吵一架，也许你们的感情到了某个时刻已经消失不见，在某一个时刻有一方忍不了了，然后你和ta分手了。</p><h3 id="分手与复合"><a href="#分手与复合" class="headerlink" title="分手与复合"></a>分手与复合</h3><p>就这样各自过了一段时间，你会想起ta的种种好，你们心里觉得付出的一切还是有价值的，还想继续相处下去，于是有一方拉下脸面，去挽回这段感情。就这样顺水推舟顺理成章你们又和好了，你仿佛又回到了热恋，你们说以后不要再吵架，一定会让着对方，好好的走下去。可是或者几天，你们又回到了从前的状态，依然还是吵架，不断的发生摩擦。在某一次激烈的争吵过后，终于又有一个人不能忍受了，于是提出了分手。<br>你可能分手后还继续和ta联系，也可能互相冷眼相对，冷言相骂，可能互删拉黑，可能把ta送的东西全部扔掉，逼迫自己不去想ta，你会特别的难过。你和ta真的分手了，故事也剧终了。</p><h3 id="从编程的角度看待爱情"><a href="#从编程的角度看待爱情" class="headerlink" title="从编程的角度看待爱情"></a>从编程的角度看待爱情</h3><p>像程序一样，也许会中间多几个循环♻和函数，即使多几个for语句，但是有一定的条件(你们的感情大于0)，总会有超过条件的时候，这样就会retutn 0 (分手)了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">love</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> Feeling,SweetAffection,BadAffection;</span><br><span class="line"><span class="keyword">while</span>(StartLove)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(SweetAffection == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Feeling++;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(BadAffection == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Quarrel == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Feeling--;</span><br><span class="line">｝</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Feeling == <span class="number">0</span>)</span><br><span class="line">FlagLove=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">FlagLove=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> FlagLove;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然上面程序仅仅是一个非常非常简易的模型，实际还需要考虑各种因素，以及各项的权值，远比这复杂的多得多。如果爱情真像程序一样就太容易了，可以debug，总会调试处能正常运行下去的程式。爱情太过复杂，搞不懂也~~~ <br> 爱情这东西他没什么道理，不可以用理性和逻辑和阐述。如果仅仅是找对象，那完全可以去学PUA这门学问，或者有天赋的人自学成才。</p><hr><p>这里引用汪国真《热爱生命》中的一句</p><blockquote><p> 我不去想能否赢得爱情</p><p>既然钟情于玫瑰</p><p>就勇敢地吐露真诚</p></blockquote><object type="application/x-shockwave-flash" id="ximalaya_player" data="http://www.ximalaya.com/swf/sound/red.swf?id=40419732" width="260" height="36"></object><p>勇敢去爱，少一些功利主义的追求，多一些勇敢和坚持，既然选择了去爱就别怕受伤。何况所受的伤都是不可多得的宝贵财富，让你更清晰地认识自己，其实认识自己才是最难的。</p><p>(待更)</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;初相遇时的美好&quot;&gt;&lt;a href=&quot;#初相遇时的美好&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>鸡蛋煎饼</title>
    <link href="https://mapan.tech/posts/e032.html"/>
    <id>https://mapan.tech/posts/e032.html</id>
    <published>2017-10-10T14:23:17.000Z</published>
    <updated>2017-12-23T00:48:13.206Z</updated>
    
    <content type="html"><![CDATA[<p>室友在上海南站工作，每天中午吃腻了火车站附近的快餐。说要自己做饭带到公司去，然后前几天买好了锅具，准备开始做饭吃。室友今天说想吃小时候家里的摊鸡蛋馍，但又不会做。怎么难得倒从小在厨房混大的我，小学就开始摊鸡蛋馍炒菜做饭吃，鸡蛋煎饼还是很easy的。正好买的有鸡蛋、面粉等别的调料。<br>很享受做饭的感觉，从准备食材到加工烹饪，一个水到渠成的过程，在我眼里像一首惟妙惟肖的古典歌曲或者诗歌朗诵。先打面糊，水面比例自己把握，以粘稠液态状态为佳，然后打入鸡蛋打匀。面糊与鸡蛋的比例1：1为佳，也可根据个人喜好来调整，鸡蛋多了口感好、色泽金黄，但是饼脆容易翻烂。面粉多了色泽白皙完整，口感较嫩，但鲜味稍淡。在加入适当的盐鸡精等调料搅拌，如果有葱花，加入细碎葱花更好。</p><hr><p>准备工作做完，下面开始进入正题，煎鸡蛋饼。鸡蛋煎饼需要的小火慢煎，以平底锅为最佳，圆底炒锅也可，锅内刷很少量油，防止粘锅，便于翻面儿，油温不宜太热，倒入一勺鸡蛋面糊，晃动煎锅使其成型。越薄越好，越圆越好，饼在数十秒内迅速成型，冒出蒸汽，待成型后需晃动炒锅防止其粘锅，然后翻面，晃动锅体使其受热均匀，待其鼓起气泡，就可以出锅了。一个出锅然后刷油马上下一个下锅，手速要快，不然锅太热了下一个就会很厚形状难看。摊饼就像一环扣一环，一张接一张，熟练的人平均一分钟一张，非常娴熟。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCygy1fl41fvkrskj30zk0qodgt.jpg" alt="鸡蛋煎饼"><br>附一张图,煎好的饼</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;室友在上海南站工作，每天中午吃腻了火车站附近的快餐。说要自己做饭带到公司去，然后前几天买好了锅具，准备开始做饭吃。室友今天说想吃小时候家里的摊鸡蛋馍，但又不会做。怎么难得倒从小在厨房混大的我，小学就开始摊鸡蛋馍炒菜做饭吃，鸡蛋煎饼还是很easy的。正好买的有鸡蛋、面粉等别的
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>巧妙绕过加密PPT密码</title>
    <link href="https://mapan.tech/posts/ea01.html"/>
    <id>https://mapan.tech/posts/ea01.html</id>
    <published>2017-10-09T10:26:00.000Z</published>
    <updated>2017-10-12T23:12:49.886Z</updated>
    
    <content type="html"><![CDATA[<p>我们有时候会遇到加密的ppt文件，下面的方法可以绕过密码验证，直接删除密码。<br>和<code>.apk</code>文件一样，其实<code>.pptx</code>文件就是zip的压缩包,将其后缀改为zip就可以解压出源文件。</p><p>下面是破解步骤：</p><ul><li>1.将pptx文件重命名，比如现有一个加密文件名称为<code>123.pptx</code>，更名为<code>123.pptx.zip</code>，双扩展名可以有效说明文件的格式以及原始格式；</li><li>2.将改名后的文件<code>123.pptx.zip</code>解压缩，得到一个<code>123.pptx</code> 文件夹；</li><li>3.切换到<code>\ppt</code> 之下，用记事本开启 <code>presentation.xml</code> 文件；</li><li>4.把 <code>&lt;p:modifyVerifier ... /&gt;</code>整块选中并删除保存；</li><li>5.返回 <code>123.pptx</code> 文件夹第一层，注意，不要退出该文件夹之外；</li><li>6.选择所有文件，将其添加为 <code>zip</code> 压缩包格式，压缩方式为 标准；</li><li>7.将压缩包重命名为 <code>xxxx.pptx</code>，此时的pptx文件即为无密码保护的演示文稿，密码删除成功~</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;我们有时候会遇到加密的ppt文件，下面的方法可以绕过密码验证，直接删除密码。&lt;br&gt;和&lt;code&gt;.apk&lt;/code&gt;文件一样，其实&lt;code&gt;.pptx&lt;/code&gt;文件就是zip的压缩包,将其后缀改为zip就可以解压出源文件。&lt;/p&gt;
&lt;p&gt;下面是破解步骤：&lt;/p&gt;

        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法和MD编辑器</title>
    <link href="https://mapan.tech/posts/b33e.html"/>
    <id>https://mapan.tech/posts/b33e.html</id>
    <published>2017-10-03T07:23:32.000Z</published>
    <updated>2018-01-07T03:27:21.940Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种轻便简单快捷的排版语言，是<code>难用到极点的Word</code>的<code>非常优秀</code>的替代。以下内容引用自维基百科。</p><blockquote><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p><p>John Gruber 在 2004 年创造了 Markdown 语言，在语法上有很大一部分是跟亚伦·斯沃茨（Aaron Swartz）共同合作的。这个语言的目的是希望大家使用“易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的 XHTML (或是HTML)”。 其中最重要的设计是可读性，也就是说这个语言应该要能直接在字面上的被阅读，而不用被一些格式化指令标记 (像是 RTF 与 HTML)。 因此，它是现行电子邮件标记格式的惯例，虽然它也借鉴了很多早期的标记语言，如：setext、Texile、reStructuredText。 许多网站都使用 Markdown 或是其变种，例如：GitHub、reddit、Diaspora、Stack Exchange、OpenStreetMap 与 SourceForge 让用户更利于讨论。</p><p>Markdown同时还是一个由Gruber编写的Perl脚本：Markdown.pl。它把用markdown语法编写的内容转换成有效的、结构良好的XHTML或HTML内容，并将左尖括号(‘&lt;’)和&amp;号替换成它们各自的字符实体引用。它可以用作单独的脚本，Blosxom和Movable Type的插件又或者BBEdit的文本过滤器.</p><p>Markdown也已经被其他人用Perl和别的编程语言重新实现，其中一个Perl模块放在了CPAN(Text::Markdown)上。它基于一个BSD风格的许可证分发并可以作为几个内容管理系统的插件。</p></blockquote><p><a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin" target="_blank" rel="noopener">关于md文件</a>,后缀为md的文件是markdown语法的文章。非常简单的排版语法，可以很轻易的转HTML，转PDF等。我喜欢的原因很简单，Markdown看起来非常地极客。</p><p>举个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br></pre></td></tr></table></figure></p><p>渲染后</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><p>画表格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|A|B|N|H|</span><br><span class="line">|:--:|:--:|:--:|:--:|</span><br><span class="line">|1|2|3|4|</span><br><span class="line">|a|s|d|f|</span><br><span class="line">|t|2|2|G|</span><br></pre></td></tr></table></figure></p><div class="table-container"><table><thead><tr><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">N</th><th style="text-align:center">H</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">s</td><td style="text-align:center">d</td><td style="text-align:center">f</td></tr><tr><td style="text-align:center">t</td><td style="text-align:center">2</td><td style="text-align:center">2</td><td style="text-align:center">G</td></tr></tbody></table></div><p><a href="http://wowubuntu.com/markdown/#list" target="_blank" rel="noopener">更多语法</a></p><p>试用了无数个markdown编辑器，均是或丑或难用。</p><blockquote><p>MarkdownPad<br>Mahua<br>小书匠<br>Haroopad<br>Cmd Markdown上</p></blockquote><p>今天偶然发现了一款让我眼前一亮的编辑器[Yu-writter][1],界面友好，windows支持绿色化,一款能找到写作乐趣的 Markdown 文本编辑器，原生支持hexo和jeklly，Hugo三种静态博客。看样子作者还是更新中，正式版还没有发布，目前beta版本已经够日常使用，期待作者的更新。</p><hr><p>10.6更新 <br><br>Typora这个更厉害，直接把源码和预览结合到一起，有种所见即所得的感觉了。但是这样仿佛失去了markdown的乐趣，markdown的初衷是怎么在不使用鼠标仅仅用键盘的情况下，把文章和排版做好。Typora直接简化了这个过程，把源码和预览结合到一起，配合鼠标使用。<a href="https://Typora.io" target="_blank" rel="noopener">Typora</a>使用起来也很不错但个人觉得少了点极客的感觉。仁者见仁智者见智咯~</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Markdown是一种轻便简单快捷的排版语言，是&lt;code&gt;难用到极点的Word&lt;/code&gt;的&lt;code&gt;非常优秀&lt;/code&gt;的替代。以下内容引用自维基百科。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Q3季度总结</title>
    <link href="https://mapan.tech/posts/705f.html"/>
    <id>https://mapan.tech/posts/705f.html</id>
    <published>2017-09-28T12:37:01.000Z</published>
    <updated>2017-10-15T15:44:16.941Z</updated>
    
    <content type="html"><![CDATA[<p>3月份来到上海，已经有半年之久了。时间飞快，转瞬即逝。今天已9.28，Q3季度马上结尾。现在仍然廊坊出差，已经买了30号的回程票回魔都。近三个月过的不温不火，不精彩，不充实，不开心。原因不再赘述，经历了不少事情，我一直在认识自己。</p><h3 id="工作上"><a href="#工作上" class="headerlink" title="工作上"></a>工作上</h3><p>7月份正式工作，由实习进入试用期。9月份转正，工资不多，但不会向家里要钱了，勉强糊口解决温饱。7月份开始总是出差，南京、天津、廊坊，哪里有手机工厂就去哪里。虽然累和辛苦，但是感受得到公司对自己的信任，挺好的！(现在还在廊坊。。。)</p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>我是一个自控能力不强的人，拖延癌重度患者，但是没有放弃治疗。我在学者自律，我想自由，从容的生活。自律带给我自由，不停学习给我充实和心安，尝试战胜自己，爱上生活。学习学习学习，人的一生都在学习。</p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>Python跳坑中，还没入门的小白一个。每天学习半小时，积累基础。英语刚开始斩杀单词。每天俘获几个猎物就是收获！<br><em>词乏，写作能力急需提高。</em></p><hr><p>9.30夜更新<br>近几天听了林语堂的《人生像一首诗》其中两句听了一遍便深深的印在了心中<br><code>一天有上午、中午、日落之分，一年有四季之分，这办法是很好的。人生没有所谓好坏之分，只有“什么东西在那一季节是好的”的问题。</code><br>的确人生没有所谓好坏之分。<br><code>如果我们抱这种生物学的人生观，而循着季节去生活，那么，除夜郎自大的呆子和无可救药的理想主义者之外，没有人会否认人生不能像一首诗那样地度过去。</code><br>用季节为单位来生活，任何事情只留在一个季节，不管是好是坏。下一个季度仍是崭新的！</p><iframe height="36" width="260" src="http://www.ximalaya.com/swf/sound/red.swf?id=33414540" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;3月份来到上海，已经有半年之久了。时间飞快，转瞬即逝。今天已9.28，Q3季度马上结尾。现在仍然廊坊出差，已经买了30号的回程票回魔都。近三个月过的不温不火，不精彩，不充实，不开心。原因不再赘述，经历了不少事情，我一直在认识自己。&lt;/p&gt;
&lt;h3 id=&quot;工作上&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信公众号的看法</title>
    <link href="https://mapan.tech/posts/8a0e.html"/>
    <id>https://mapan.tech/posts/8a0e.html</id>
    <published>2017-09-26T09:25:00.000Z</published>
    <updated>2017-10-03T06:51:45.973Z</updated>
    
    <content type="html"><![CDATA[<p>自从微信帝国建国之日，附加功能扩张越来约快，现在俨然已占据互联网半壁江山，成为手机必装APP。只要是智能手，肯定装的有微信。人们对微信的以来也越来月严重。每天花在微信上面的时间也越来越多。<br>我是一个自控能力不强的人，某一天开始，猛然发现自己的时间正在被微信吞噬。那我用微信干什么呢？聊天吗？当然不是，我在看一篇又一篇吸引人眼球的公众号文章。有强迫症的我忍不得红点存在，必须点进去把红点去掉。然而点进去之后看到了许多吸引人眼球的文章，下意识就点进去看，一篇接一篇大把时间都浪费在了微信上面。<br>我喜欢分析自己的行为，反思自己我为什么会这么做，我为什么会把大把时间花在微信上？截止到现在并没有一个明确答案。这些文章有用吗？我看了有什么收获吗？我看了自己会更好吗？<br>除了各种老人深信不疑的各种居家技巧等谣言，还有鸡汤和广告软文。试问一句你回忆下昨天早晨上厕所时看的公众号文章是什么内容？不一定有人能想起来。这些过目就忘的文章我不想再让它偷走我的时间了，索性把无关痛痒的公众号全部取关，只留下一些有干货的和工具性刚需的公众号。干货的我就不说了，免得广告嫌疑。刚需性的如银行提醒类，验证提取码类，共享单车类，这种用完就关闭的公众号。不要高估自己的自控力，现在的弱人工智能已经遍布我们生活各个方面，比如网易云音乐会推荐越来越符合你口味的音乐，打开淘宝就禁不住刷啊刷，净是你喜欢的想买的东西，不知不觉中偷走了你的时间，让你多花钱。<br>手机只是工具，电脑只是工具，人类才是主宰。时间是最宝贵的财富！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;自从微信帝国建国之日，附加功能扩张越来约快，现在俨然已占据互联网半壁江山，成为手机必装APP。只要是智能手，肯定装的有微信。人们对微信的以来也越来月严重。每天花在微信上面的时间也越来越多。&lt;br&gt;我是一个自控能力不强的人，某一天开始，猛然发现自己的时间正在被微信吞噬。那我用
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo MathJax公式语法</title>
    <link href="https://mapan.tech/posts/5199.html"/>
    <id>https://mapan.tech/posts/5199.html</id>
    <published>2017-09-24T13:27:00.000Z</published>
    <updated>2017-12-22T23:15:56.920Z</updated>
    
    <content type="html"><![CDATA[<p>只捡重点的说：</p><h3 id="更换hexo的markdown渲染器"><a href="#更换hexo的markdown渲染器" class="headerlink" title="更换hexo的markdown渲染器"></a>更换hexo的markdown渲染器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><hr><h3 id="取消该渲染引擎对-的转义"><a href="#取消该渲染引擎对-的转义" class="headerlink" title="取消该渲染引擎对\,{,}的转义"></a>取消该渲染引擎对<code>\,{,}</code>的转义</h3><p>修改 <code>../node_modules/kramed/lib/rules/inline.js</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,      第11行，将其修改为</span><br><span class="line">escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,    第20行，将其修改为</span><br><span class="line">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure><hr><h3 id="MathJax公式语法"><a href="#MathJax公式语法" class="headerlink" title="MathJax公式语法"></a>MathJax公式语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x^&#123;y^z&#125;=(1+e^x)^&#123;-2xy^w&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">x^{y^z}=(1+e^x)^{-2xy^w}</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">CO_2</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">CO_2</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f(x,y,z)=3y^2z(3+\frac&#123;7x+5&#125;&#123;1+y^2&#125;)</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">f(x,y,z)=3y^2z(3+\frac{7x+5}{1+y^2})</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\sqrt&#123;2&#125;、\sqrt[3]&#123;9&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\sqrt{2}、\sqrt[3]{9}</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x_1x_2&#123;\ldots&#125;x_n</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">x_1x_2{\ldots}x_n</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x_1x_2&#123;\cdots&#125;x_n</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">x_1x_2{\cdots}x_n</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\int_1^n&#123;x^2&#125;dx</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\int_1^n{x^2}dx</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\sum_&#123;i=1&#125;^n \frac&#123;1&#125;&#123;i^2&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\sum_{i=1}^n \frac{1}{i^2}</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">a , b \mid a ; b \mid a \quad b \mid a \qquad b</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">a , b \mid a ; b \mid a \quad b \mid a \qquad b</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\color&#123;red&#125;&#123;你好&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\color{red}{你好}</script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\require&#123;enclose&#125;\begin&#123;array&#125;&#123;&#125;</span><br><span class="line">\enclose&#123;horizontalstrike&#125;&#123;x+y&#125;\\</span><br><span class="line">\enclose&#123;horizontalstrike&#125;&#123;x*y&#125;\\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\require{enclose}\begin{array}{}\enclose{horizontalstrike}{x+y}\\\enclose{horizontalstrike}{x*y}\\\end{array}</script><p>暂时就先说这么多吧，以后用的时候再多多练习和积累。</p><hr><p>17.11.02更新</p><h3 id="希腊字母和希伯来字母"><a href="#希腊字母和希伯来字母" class="headerlink" title="希腊字母和希伯来字母"></a>希腊字母和希伯来字母</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\alpha</td><td style="text-align:center"><script type="math/tex">\alpha</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\beta</td><td style="text-align:center"><script type="math/tex">\beta</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\gamma</td><td style="text-align:center">γ</td><td style="text-align:center">\Gamma</td><td style="text-align:center"><script type="math/tex">\Gamma</script></td></tr><tr><td style="text-align:center">\delta</td><td style="text-align:center">δ</td><td style="text-align:center">\Delta</td><td style="text-align:center"><script type="math/tex">\Delta</script></td></tr><tr><td style="text-align:center">\epsilon</td><td style="text-align:center"><script type="math/tex">\epsilon</script></td><td style="text-align:center">\varepsilon</td><td style="text-align:center"><script type="math/tex">\varepsilon</script></td></tr><tr><td style="text-align:center">\zeta</td><td style="text-align:center"><script type="math/tex">\zeta</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\eta</td><td style="text-align:center"><script type="math/tex">\eta</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\theta</td><td style="text-align:center"><script type="math/tex">\theta</script></td><td style="text-align:center">\Theta</td><td style="text-align:center"><script type="math/tex">\Theta</script></td></tr><tr><td style="text-align:center">\iota</td><td style="text-align:center"><script type="math/tex">\iota</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\kappa</td><td style="text-align:center"><script type="math/tex">\kappa</script></td><td style="text-align:center">\varkappa</td><td style="text-align:center"><script type="math/tex">\varkappa</script></td></tr><tr><td style="text-align:center">\lambda</td><td style="text-align:center"><script type="math/tex">\lambda</script></td><td style="text-align:center">\Lambda</td><td style="text-align:center"><script type="math/tex">\Lambda</script></td></tr><tr><td style="text-align:center">\mu</td><td style="text-align:center"><script type="math/tex">\mu</script></td><td style="text-align:center">\nu</td><td style="text-align:center"><script type="math/tex">\nu</script></td></tr><tr><td style="text-align:center">\xi</td><td style="text-align:center"><script type="math/tex">\xi</script></td><td style="text-align:center">\Xi</td><td style="text-align:center"><script type="math/tex">\Xi</script></td></tr><tr><td style="text-align:center">\pi</td><td style="text-align:center"><script type="math/tex">\pi</script></td><td style="text-align:center">\Pi</td><td style="text-align:center"><script type="math/tex">\Pi</script></td></tr><tr><td style="text-align:center">\rho</td><td style="text-align:center"><script type="math/tex">\rho</script></td><td style="text-align:center">\varrho</td><td style="text-align:center"><script type="math/tex">\varrho</script></td></tr><tr><td style="text-align:center">\sigma</td><td style="text-align:center"><script type="math/tex">\sigma</script></td><td style="text-align:center">\Sigma</td><td style="text-align:center"><script type="math/tex">\Sigma</script></td></tr><tr><td style="text-align:center">\varsigma</td><td style="text-align:center"><script type="math/tex">\varsigma</script></td><td style="text-align:center">\tau</td><td style="text-align:center"><script type="math/tex">\tau</script></td></tr><tr><td style="text-align:center">\upsilon</td><td style="text-align:center"><script type="math/tex">\upsilon</script></td><td style="text-align:center">\Upsilon</td><td style="text-align:center"><script type="math/tex">\Upsilon</script></td></tr><tr><td style="text-align:center">\phi</td><td style="text-align:center"><script type="math/tex">\phi</script></td><td style="text-align:center">\Phi</td><td style="text-align:center"><script type="math/tex">\Phi</script></td></tr><tr><td style="text-align:center">\chi</td><td style="text-align:center"><script type="math/tex">\chi</script></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">\psi</td><td style="text-align:center"><script type="math/tex">\psi</script></td><td style="text-align:center">\Psi</td><td style="text-align:center"><script type="math/tex">\Psi</script></td></tr><tr><td style="text-align:center">\omega</td><td style="text-align:center"><script type="math/tex">\omega</script></td><td style="text-align:center">\Omega</td><td style="text-align:center"><script type="math/tex">\Omega</script></td></tr></tbody></table></div><hr><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\because</td><td style="text-align:center"><script type="math/tex">\because</script></td></tr><tr><td style="text-align:center">\therefore</td><td style="text-align:center"><script type="math/tex">\therefore</script></td></tr><tr><td style="text-align:center">\forall</td><td style="text-align:center"><script type="math/tex">\forall</script></td></tr><tr><td style="text-align:center">\exists</td><td style="text-align:center"><script type="math/tex">\exists</script></td></tr><tr><td style="text-align:center">\not=</td><td style="text-align:center"><script type="math/tex">\not=</script></td></tr><tr><td style="text-align:center">\not&gt;</td><td style="text-align:center"><script type="math/tex">\not></script></td></tr><tr><td style="text-align:center">\not\subset</td><td style="text-align:center"><script type="math/tex">\not\subset</script></td></tr></tbody></table></div><hr><h3 id="集合运算符"><a href="#集合运算符" class="headerlink" title="集合运算符"></a>集合运算符</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\emptyset</td><td style="text-align:center"><script type="math/tex">\emptyset</script></td></tr><tr><td style="text-align:center">\in</td><td style="text-align:center"><script type="math/tex">\in</script></td></tr><tr><td style="text-align:center">\notin</td><td style="text-align:center"><script type="math/tex">\notin</script></td></tr><tr><td style="text-align:center">\subset</td><td style="text-align:center"><script type="math/tex">\subset</script></td></tr><tr><td style="text-align:center">\supset</td><td style="text-align:center"><script type="math/tex">\supset</script></td></tr><tr><td style="text-align:center">\subseteq</td><td style="text-align:center"><script type="math/tex">\subseteq</script></td></tr><tr><td style="text-align:center">\supseteq</td><td style="text-align:center"><script type="math/tex">\supseteq</script></td></tr><tr><td style="text-align:center">\bigcap</td><td style="text-align:center"><script type="math/tex">\bigcap</script></td></tr><tr><td style="text-align:center">\bigcup</td><td style="text-align:center"><script type="math/tex">\bigcup</script></td></tr><tr><td style="text-align:center">\bigvee</td><td style="text-align:center"><script type="math/tex">\bigvee</script></td></tr><tr><td style="text-align:center">\bigwedge</td><td style="text-align:center"><script type="math/tex">\bigwedge</script></td></tr><tr><td style="text-align:center">\biguplus</td><td style="text-align:center"><script type="math/tex">\biguplus</script></td></tr><tr><td style="text-align:center">\bigsqcup</td><td style="text-align:center"><script type="math/tex">\bigsqcup</script></td></tr></tbody></table></div><hr><h3 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\uparrow</td><td style="text-align:center"><script type="math/tex">\uparrow</script></td></tr><tr><td style="text-align:center">\downarrow</td><td style="text-align:center"><script type="math/tex">\downarrow</script></td></tr><tr><td style="text-align:center">\Uparrow</td><td style="text-align:center"><script type="math/tex">\Uparrow</script></td></tr><tr><td style="text-align:center">\Downarrow</td><td style="text-align:center"><script type="math/tex">\Downarrow</script></td></tr><tr><td style="text-align:center">\updownarrow</td><td style="text-align:center"><script type="math/tex">\updownarrow</script></td></tr><tr><td style="text-align:center">\Updownarrow</td><td style="text-align:center"><script type="math/tex">\Updownarrow</script></td></tr><tr><td style="text-align:center">\rightarrow</td><td style="text-align:center"><script type="math/tex">\rightarrow</script></td></tr><tr><td style="text-align:center">\leftarrow</td><td style="text-align:center"><script type="math/tex">\leftarrow</script></td></tr><tr><td style="text-align:center">\Rightarrow</td><td style="text-align:center"><script type="math/tex">\Rightarrow</script></td></tr><tr><td style="text-align:center">\Leftarrow</td><td style="text-align:center"><script type="math/tex">\Leftarrow</script></td></tr><tr><td style="text-align:center">\leftrightarrow</td><td style="text-align:center"><script type="math/tex">\leftrightarrow</script></td></tr><tr><td style="text-align:center">\Leftrightarrow</td><td style="text-align:center"><script type="math/tex">\Leftrightarrow</script></td></tr><tr><td style="text-align:center">\longrightarrow</td><td style="text-align:center"><script type="math/tex">\longrightarrow</script></td></tr><tr><td style="text-align:center">\longleftarrow</td><td style="text-align:center"><script type="math/tex">\longleftarrow</script></td></tr><tr><td style="text-align:center">\Longrightarrow</td><td style="text-align:center"><script type="math/tex">\Longrightarrow</script></td></tr><tr><td style="text-align:center">\Longleftarrow</td><td style="text-align:center"><script type="math/tex">\Longleftarrow</script></td></tr><tr><td style="text-align:center">\longleftrightarrow</td><td style="text-align:center"><script type="math/tex">\longleftrightarrow</script></td></tr><tr><td style="text-align:center">\Longleftrightarrow</td><td style="text-align:center"><script type="math/tex">\Longleftrightarrow</script></td></tr></tbody></table></div><hr><h3 id="更多的箭头符号"><a href="#更多的箭头符号" class="headerlink" title="更多的箭头符号"></a>更多的箭头符号</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\mapsto</td><td style="text-align:center"><script type="math/tex">\mapsto</script></td></tr><tr><td style="text-align:center">\longmapsto</td><td style="text-align:center"><script type="math/tex">\longmapsto</script></td></tr><tr><td style="text-align:center">\hookleftarrow</td><td style="text-align:center"><script type="math/tex">\hookleftarrow</script></td></tr><tr><td style="text-align:center">\hookrightarrow</td><td style="text-align:center"><script type="math/tex">\hookrightarrow</script></td></tr><tr><td style="text-align:center">\leftharpoonup</td><td style="text-align:center"><script type="math/tex">\leftharpoonup</script></td></tr><tr><td style="text-align:center">\rightharpoonup</td><td style="text-align:center"><script type="math/tex">\rightharpoonup</script></td></tr><tr><td style="text-align:center">\leftharpoondown</td><td style="text-align:center"><script type="math/tex">\leftharpoondown</script></td></tr><tr><td style="text-align:center">\rightharpoondown</td><td style="text-align:center"><script type="math/tex">\rightharpoondown</script></td></tr><tr><td style="text-align:center">\rightleftharpoons</td><td style="text-align:center"><script type="math/tex">\rightleftharpoons</script></td></tr><tr><td style="text-align:center">\leadsto</td><td style="text-align:center"><script type="math/tex">\leadsto</script></td></tr><tr><td style="text-align:center">\nearrow</td><td style="text-align:center"><script type="math/tex">\nearrow</script></td></tr><tr><td style="text-align:center">\searrow</td><td style="text-align:center"><script type="math/tex">\searrow</script></td></tr><tr><td style="text-align:center">\swarrow</td><td style="text-align:center"><script type="math/tex">\swarrow</script></td></tr><tr><td style="text-align:center">\nwarrow</td><td style="text-align:center"><script type="math/tex">\nwarrow</script></td></tr><tr><td style="text-align:center">\nleftarrow</td><td style="text-align:center"><script type="math/tex">\nleftarrow</script></td></tr><tr><td style="text-align:center">\nrightarrow</td><td style="text-align:center"><script type="math/tex">\nrightarrow</script></td></tr><tr><td style="text-align:center">\nLeftarrow</td><td style="text-align:center"><script type="math/tex">\nLeftarrow</script></td></tr><tr><td style="text-align:center">\nRightarrow</td><td style="text-align:center"><script type="math/tex">\nRightarrow</script></td></tr><tr><td style="text-align:center">\nleftrightarrow</td><td style="text-align:center"><script type="math/tex">\nleftrightarrow</script></td></tr><tr><td style="text-align:center">\nLeftrightarrow</td><td style="text-align:center"><script type="math/tex">\nLeftrightarrow</script></td></tr><tr><td style="text-align:center">\dashrightarrow</td><td style="text-align:center"><script type="math/tex">\dashrightarrow</script></td></tr><tr><td style="text-align:center">\dashleftarrow</td><td style="text-align:center"><script type="math/tex">\dashleftarrow</script></td></tr><tr><td style="text-align:center">\leftleftarrows</td><td style="text-align:center"><script type="math/tex">\leftleftarrows</script></td></tr><tr><td style="text-align:center">\leftrightarrows</td><td style="text-align:center"><script type="math/tex">\leftrightarrows</script></td></tr><tr><td style="text-align:center">\Lleftarrow</td><td style="text-align:center"><script type="math/tex">\Lleftarrow</script></td></tr><tr><td style="text-align:center">\twoheadleftarrow</td><td style="text-align:center"><script type="math/tex">\twoheadleftarrow</script></td></tr><tr><td style="text-align:center">\leftarrowtail</td><td style="text-align:center"><script type="math/tex">\leftarrowtail</script></td></tr><tr><td style="text-align:center">\looparrowleft</td><td style="text-align:center"><script type="math/tex">\looparrowleft</script></td></tr><tr><td style="text-align:center">\leftrightharpoons</td><td style="text-align:center"><script type="math/tex">\leftrightharpoons</script></td></tr><tr><td style="text-align:center">\curvearrowleft</td><td style="text-align:center"><script type="math/tex">\curvearrowleft</script></td></tr><tr><td style="text-align:center">\circlearrowleft</td><td style="text-align:center"><script type="math/tex">\circlearrowleft</script></td></tr><tr><td style="text-align:center">\Lsh</td><td style="text-align:center"><script type="math/tex">\Lsh</script></td></tr><tr><td style="text-align:center">\upuparrows</td><td style="text-align:center"><script type="math/tex">\upuparrows</script></td></tr><tr><td style="text-align:center">\upharpoonleft</td><td style="text-align:center"><script type="math/tex">\upharpoonleft</script></td></tr><tr><td style="text-align:center">\downharpoonleft</td><td style="text-align:center"><script type="math/tex">\downharpoonleft</script></td></tr><tr><td style="text-align:center">\multimap</td><td style="text-align:center"><script type="math/tex">\multimap</script></td></tr><tr><td style="text-align:center">\leftrightsquigarrow</td><td style="text-align:center"><script type="math/tex">\leftrightsquigarrow</script></td></tr><tr><td style="text-align:center">\rightrightarrows</td><td style="text-align:center"><script type="math/tex">\rightrightarrows</script></td></tr><tr><td style="text-align:center">\rightleftarrows</td><td style="text-align:center"><script type="math/tex">\rightleftarrows</script></td></tr><tr><td style="text-align:center">\rightrightarrows</td><td style="text-align:center"><script type="math/tex">\rightrightarrows</script></td></tr><tr><td style="text-align:center">\rightleftarrows</td><td style="text-align:center"><script type="math/tex">\rightleftarrows</script></td></tr><tr><td style="text-align:center">\twoheadrightarrow</td><td style="text-align:center"><script type="math/tex">\twoheadrightarrow</script></td></tr><tr><td style="text-align:center">\rightarrowtail</td><td style="text-align:center"><script type="math/tex">\rightarrowtail</script></td></tr><tr><td style="text-align:center">\looparrowright</td><td style="text-align:center"><script type="math/tex">\looparrowright</script></td></tr><tr><td style="text-align:center">\rightleftharpoons</td><td style="text-align:center"><script type="math/tex">\rightleftharpoons</script></td></tr><tr><td style="text-align:center">\curvearrowright</td><td style="text-align:center"><script type="math/tex">\curvearrowright</script></td></tr><tr><td style="text-align:center">\circlearrowright</td><td style="text-align:center"><script type="math/tex">\circlearrowright</script></td></tr><tr><td style="text-align:center">\Rsh</td><td style="text-align:center"><script type="math/tex">\Rsh</script></td></tr><tr><td style="text-align:center">\downdownarrows</td><td style="text-align:center"><script type="math/tex">\downdownarrows</script></td></tr><tr><td style="text-align:center">\upharpoonright</td><td style="text-align:center"><script type="math/tex">\upharpoonright</script></td></tr><tr><td style="text-align:center">\downharpoonright</td><td style="text-align:center"><script type="math/tex">\downharpoonright</script></td></tr><tr><td style="text-align:center">\rightsquigarrow</td><td style="text-align:center"><script type="math/tex">\rightsquigarrow</script></td></tr></tbody></table></div><hr><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\mid</td><td style="text-align:center"><script type="math/tex">\mid</script></td></tr><tr><td style="text-align:center">\nmid</td><td style="text-align:center"><script type="math/tex">\nmid</script></td></tr><tr><td style="text-align:center">\cdot</td><td style="text-align:center"><script type="math/tex">\cdot</script></td></tr><tr><td style="text-align:center">\leq</td><td style="text-align:center"><script type="math/tex">\leq</script></td></tr><tr><td style="text-align:center">\geq</td><td style="text-align:center"><script type="math/tex">\geq</script></td></tr><tr><td style="text-align:center">\neq</td><td style="text-align:center"><script type="math/tex">\neq</script></td></tr><tr><td style="text-align:center">\approx</td><td style="text-align:center"><script type="math/tex">\approx</script></td></tr><tr><td style="text-align:center">\equiv</td><td style="text-align:center"><script type="math/tex">\equiv</script></td></tr><tr><td style="text-align:center">\circ</td><td style="text-align:center"><script type="math/tex">\circ</script></td></tr><tr><td style="text-align:center">\ast</td><td style="text-align:center"><script type="math/tex">\ast</script></td></tr><tr><td style="text-align:center">\bigodot</td><td style="text-align:center"><script type="math/tex">\bigodot</script></td></tr><tr><td style="text-align:center">\bigotimes</td><td style="text-align:center"><script type="math/tex">\bigotimes</script></td></tr><tr><td style="text-align:center">\bigoplus</td><td style="text-align:center"><script type="math/tex">\bigoplus</script></td></tr></tbody></table></div><hr><h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><div class="table-container"><table><thead><tr><th style="text-align:center">latex</th><th style="text-align:center">显示效果</th></tr></thead><tbody><tr><td style="text-align:center">\pm</td><td style="text-align:center"><script type="math/tex">\pm</script></td></tr><tr><td style="text-align:center">\times</td><td style="text-align:center"><script type="math/tex">\times</script></td></tr><tr><td style="text-align:center">\div</td><td style="text-align:center"><script type="math/tex">\div</script></td></tr><tr><td style="text-align:center">\sum</td><td style="text-align:center"><script type="math/tex">\sum</script></td></tr><tr><td style="text-align:center">\prod</td><td style="text-align:center"><script type="math/tex">\prod</script></td></tr><tr><td style="text-align:center">\coprod</td><td style="text-align:center"><script type="math/tex">\coprod</script></td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;只捡重点的说：&lt;/p&gt;
&lt;h3 id=&quot;更换hexo的markdown渲染器&quot;&gt;&lt;a href=&quot;#更换hexo的markdown渲染器&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python彩蛋</title>
    <link href="https://mapan.tech/posts/6170.html"/>
    <id>https://mapan.tech/posts/6170.html</id>
    <published>2017-09-13T14:21:00.000Z</published>
    <updated>2017-10-15T15:39:01.165Z</updated>
    
    <content type="html"><![CDATA[<p>python命令行输入<code>import this</code>就会出现的python之禅</p><blockquote><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one— and preferably only one —obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea — let’s do more of those!</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;python命令行输入&lt;code&gt;import this&lt;/code&gt;就会出现的python之禅&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Beautiful is better than ugly.&lt;br&gt;Explicit is better than
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>闲言碎语</title>
    <link href="https://mapan.tech/posts/402.html"/>
    <id>https://mapan.tech/posts/402.html</id>
    <published>2017-08-23T12:41:00.000Z</published>
    <updated>2017-12-06T13:13:21.610Z</updated>
    
    <content type="html"><![CDATA[<p>几个月没有更新博客了。慢慢的自己的创造力正在被磨灭和消失殆尽。也许大学时候的自己是意一生中最爱折腾的时候吧，工作了，就没有那么多经历和时间来折腾捯饬各种新奇古怪的东西。<br>这个博客会一直存在，但可能不再是一个技术博客，而要转变为一个分享生活，学习、记录心得和读书笔记的博客。不求有多少人来访问，也不求百度谷歌收录，不看重SEO。仅仅作为一个自己记录生活的地方，督促自己没有枉费时间，虚度光阴。</p><hr><p>2017-09-26更新</p><p>也许以后还是一个技术博客，只不过方向会有些变化，没有那么多电子方面的了。人生应该多尝试，重在体验，人生没有彩排，做自己想去做的事情，每一天都是现场直播。最近一直在天津出差，有时间去整理折腾博客，更改了友链展示方式，实现Coding的全站点镜像，域名不再双解析，添加了Hexo MathJax插件，更换了头像，修改了网页的链接。购买了灯笼的科学上网，Github可以更流畅访问了，许多技术性网站也可以访问了。另外又购置了一个新域名mapan.ink,暂时还没想好要用来做什么。</p><hr><p>2017-09-10更新</p><p>最近经历了一些事情，心态发生了一些改变。不能很好的状态完成工作吧，需要自己调整，找点事情让自己忙碌起来，那就学习吧，没有什么比学习让我心里更踏实的事情了。计划学习python，学习编程，用程序和数学的智慧减少重复性动作。节省时间来做更重要的事情。<br>人不学习，也没有多少干货可以写得出来，加油吧自己。为自己而过，为自己而活！</p><hr><p>尽量提高干货文章产出，少一点点水文，学习写作。技术再好，表达不出来也不行不是么。人与人最根本的区别在于思想。怎么表现自己和别人不一样呢，就是靠表达，把自己的思想表达出来，别人才能看得到。</p><hr><p>2017-11-19更新<br>公司再次派我出差。这次目的地依然是南京，任务是X项目量产爬坡支持，心中的感受无以言表。调整心态，积极面对任何事情，希望任何事情都不能打破自己的心如止水的平静。另外新注册的域名mapan.tech和mapan.ink正在备案中，等备案成功以后就会启用新的域名,开启两个新的站点。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;几个月没有更新博客了。慢慢的自己的创造力正在被磨灭和消失殆尽。也许大学时候的自己是意一生中最爱折腾的时候吧，工作了，就没有那么多经历和时间来折腾捯饬各种新奇古怪的东西。&lt;br&gt;这个博客会一直存在，但可能不再是一个技术博客，而要转变为一个分享生活，学习、记录心得和读书笔记的博
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Next主题添加鼠标心形点击特效</title>
    <link href="https://mapan.tech/posts/76c9.html"/>
    <id>https://mapan.tech/posts/76c9.html</id>
    <published>2017-04-08T08:22:00.000Z</published>
    <updated>2017-10-03T06:51:48.664Z</updated>
    
    <content type="html"><![CDATA[<p>1、在<code>\Blog\themes\next\source\js\src\</code>目录下新建<code>love.js</code>,代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p><p>2、在<code>Blog\themes\next\layout\_layout.swig</code>文件的最下方，<code>&lt;/body&gt;</code>前面添加<code>&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;1、在&lt;code&gt;\Blog\themes\next\source\js\src\&lt;/code&gt;目录下新建&lt;code&gt;love.js&lt;/code&gt;,代码如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客实现后台管理</title>
    <link href="https://mapan.tech/posts/ab82.html"/>
    <id>https://mapan.tech/posts/ab82.html</id>
    <published>2017-03-26T04:58:00.000Z</published>
    <updated>2017-10-03T06:51:49.534Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo博客是是静态的方式，原理是通过本地.md文件生成静态的.html文件，通过git指令把.html文件上传到服务器(或者代码托管平台)。和Wordpress相比，缺少了许多动态博客能实现的功能，比如后台管理，评论，文章阅读数等等需要实时和服务器交互的动作。但是随着技术的发展，这些功能逐一被攻克。文章阅读计数，网站访问量可以通过<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>来实现。评论可以通过第三方评论（友言，网易云跟帖，畅言等等）来实现。后台管理可以通过插件<a href="http://jaredforsyth.com/hexo-admin/" target="_blank" rel="noopener">Hexo-Admin</a>来实现。<br>今天把这个Hexo-Admin插件的安装和使用方法记录下来。<br>由于官方插件对windows平台的有一些bug，所以我们安装升级版。<br>1、首先你已经搭建好了自己的hexo博客。<br>2、在命令行中依次输入下面三条<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin-yf</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></table></figure></p><p>第一条命令是安装Hexo-Admin插件，时间可能长一些。<br>第二条命令是打开本地服务器。<br>第三条是在浏览器中打开<a href="http://localhost:4000/admin" target="_blank" rel="noopener">http://localhost:4000/admin</a></p><p>3、修改Hexo根目录(以下统称<code>D:\Blog</code>)下<code>_config.yml</code>文件，在合适位置添加以下代码。这段代码的作用是设置用户名和密码，空着为无密码。详细内容可以在设置里面修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># hexo-admin authentification</span><br><span class="line">admin:</span><br><span class="line">  username: </span><br><span class="line">  password_hash:</span><br><span class="line">  secret:</span><br><span class="line">  deployCommand: &apos;deploy.cmd&apos;</span><br></pre></td></tr></table></figure></p><p>4、在<code>D:\Blog</code>目录下创建<code>deploy.cmd</code>并写入一下内容。这个脚本的作用是渲染html、压缩html，css和js、部署文件到服务器端。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">call hexo g</span><br><span class="line">call gulp</span><br><span class="line">call hexo d</span><br></pre></td></tr></table></figure></p><p>5、在<code>C:\Users\username\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>下创建<code>hexo_s.vbs</code>,写入以下内容。作用是开机自动运行<code>D:\Blog\Start.bat</code>脚本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.Run &quot;D:\\Blog\\Start.bat /start&quot;,0</span><br></pre></td></tr></table></figure></p><p>6、在<code>D:\Blog</code>目录下新建<code>Start.bat</code>并写入以下内容。作用是在<code>D:/Blog</code>运行<code>hexo s</code>命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line">cd D:/Blog</span><br><span class="line">hexo s -d</span><br></pre></td></tr></table></figure></p><p>7、在<code>D:\Blog</code>目录下新<code>browser.bat</code>并写入以下内容,这个脚本的作用是打开浏览器进入<a href="http://localhost:4000/admin" target="_blank" rel="noopener">http://localhost:4000/admin</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">start explorer http://localhost:4000/admin</span><br></pre></td></tr></table></figure></p><p>右键该脚本<code>发送到桌面</code>,下次开机直接双击该快捷方式即可。</p><hr><p>我对这个插件进行了汉化，汉化需要修改的文件是<code>D:\Blog\node_modules\hexo-admin-yf\www\bundle.js</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Hexo博客是是静态的方式，原理是通过本地.md文件生成静态的.html文件，通过git指令把.html文件上传到服务器(或者代码托管平台)。和Wordpress相比，缺少了许多动态博客能实现的功能，比如后台管理，评论，文章阅读数等等需要实时和服务器交互的动作。但是随着技术
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>求职历险记</title>
    <link href="https://mapan.tech/posts/35bb.html"/>
    <id>https://mapan.tech/posts/35bb.html</id>
    <published>2017-03-20T13:28:00.000Z</published>
    <updated>2017-12-06T12:31:22.443Z</updated>
    
    <content type="html"><![CDATA[<p>时隔许久，再次更新博客。这次写我的上海求职记录。<br>2017年2月24号火车来到上海。转眼间已经过了一个月，2.27-3.8这10天，在不停的跑招聘会，面试，筛选，网投。由于初来上海人生地不熟，比较着急，只面试了四家公司。拿到了3家公司的offer。</p><p>最终选择了Wingtech，一个我完全陌生的手机领域，还没有到入门的级别。</p><p>一步一个脚印的向前走，多思考，勤学习。</p><p>选择一行就要爱一行！没有兴趣要学会培养兴趣！</p><p>自己在上海闯荡要考虑衣食住行，这些成本每个月就要花掉至少3000。</p><p>要吐槽的是上海房租，真的贵！在上海生活成本很大，且行且珍惜，魔都上海自有魅力所在！</p><p>接下来的一段时间就完成论文，安心上班工作。学会学习，给自己充电，要学习的东西不比学校少</p><p>PPT要会做，EXCEL要会用，英语还要继续学，Python需要学，powerPCB要学…</p><p>投资自己，为知识付费，为时间付费,努力向前！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;时隔许久，再次更新博客。这次写我的上海求职记录。&lt;br&gt;2017年2月24号火车来到上海。转眼间已经过了一个月，2.27-3.8这10天，在不停的跑招聘会，面试，筛选，网投。由于初来上海人生地不熟，比较着急，只面试了四家公司。拿到了3家公司的offer。&lt;/p&gt;
&lt;p&gt;最终
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读书体会</title>
    <link href="https://mapan.tech/posts/f237.html"/>
    <id>https://mapan.tech/posts/f237.html</id>
    <published>2017-02-26T09:25:00.000Z</published>
    <updated>2017-11-05T12:16:58.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阅读改变生活"><a href="#阅读改变生活" class="headerlink" title="阅读改变生活"></a><center style="color: #008000; font-family: Microsoft YaHei;font-size: 24px; line-height: 50px;">阅读改变生活</center></h2><p>入手了一个Kindle Paperwrite 3，闲暇时间用来读书，关注了一个非常牛的微信公众号“Kindle电子书库”，使用这个公众号可以一键推送书籍到Kindle，非常之方便。</p><p>坚持读书是一件美好的事情，读书和看电影电视不同，正如莎士比亚所说：“<code>一千个人眼中有一千个哈姆雷特</code>”。读书是<code>输出</code>的行为，是需要我们主动思考和想象的一件事。</p><p>我把人看作一个系统，人所做的事情分为两种：一类是<code>输入</code>，一类是<code>输出</code>。正如信号与系统，外界给与系统一个信号，这叫做输入。系统给外界一个反馈，这叫输出。我把自己主动去完成的事情称为输出。把被动的接受、外界的刺激等叫输入。</p><p>举个例子：</p><blockquote><p>你看电影，被动接受声音和影像，是输入。<br>主动进行阅读、思考，是输出。<br>躺在床上按摩，被动接受运动，是输入。<br>自己去跑步，主动运动，是输出。<br>戴上耳机听歌，被动接受声音，是输入。<br>自己动口，唱一首歌，是输出。<br>喝两杯酒，靠外界刺激感官，是输入。<br>查资料做一道菜，自己动手，是输出。</p></blockquote><p>读什么书？<br>这个问题，曾困扰了我一些时间。每个人的三观都不会完全一致，所以没有什么书好，什么书更好之说。适合自己的书才是好书。那么问题来了，什么书才是适合自己的呢？一开始可以去读一些经典书目，诸如四大名著和国内外众受好评的书，如果自己能费脑子的看的下去，那么就不白读。书中肯定会有一些作者自己的观点和引用被别人的观点，比如<code>正如***所说：“balabalabala”、**在《***》中写到：“balabalabala”等等</code>如果作者所引述的观点你感兴趣，那么你此时可以记下来作者和书名，这有可能就是你下一本书将要读的书。</p><p>读书并不是一字不落的完全看下来，应该是有重点的去读书，如果独到自己很感兴趣的书，那么就认真的去读。如果看到自己很不感兴趣的书，那么安全可以跳出来去读下一本。</p><p>当然，书适不适合自己还和时间点有关系，据个显而易见的的例子，在儿时你会喜欢读童话故事，格林童话等等。在你30岁时候却喜欢读《经济学》、《资本论》等，一本书有可能眼前并不适合你读，但过几年时间甚至几个月时间后，你却如获珍宝。<br><blockquote class="blockquote-center"><p>读书是心的旅行。</p></blockquote><br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41giq73ej30jg0ec416.jpg" class="full-image"><br>我会把已经读过的书记录下来，如有时间会写出一些读书笔记，记录下自己的心得体会。</p><blockquote><p>已读书单：</p></blockquote><ul><li>《平凡的世界》 路遥</li><li>《乖，摸摸头》 大冰</li><li>《忽然七日》 [美]劳伦·奥利弗</li></ul><blockquote><p>在读书目</p></blockquote><ul><li>《巨婴国》武志红</li><li>《北京折叠》 郝景芳</li></ul><hr><p>朋友推荐了一本武志红的《巨婴国》，最近找到了这本书的电子版，开始看了起来。几天看了1/4，这本书描绘了作者探索中国人的无意识心理的过程，特别是个人与家庭的关系。尝试从心理学角度解释各种常见社会现象，如婆媳大战、不幸婚姻、恋爱分手等等。作者的观点很犀利 <code>中国多数人处在一个身体成年而心理却停留在婴儿期的一个状态，中国人的心理年龄平均不到六个月。</code> 通过许多的事例剖析解释各种社会现象，阐述这个观点。一开始读就被吸引了，书中的许多现象分析，联系到自己和身边发生过的一些事情，非常引人深思···</p><hr><p>2017年11月5日更新<br>为了督促自己看书，我搭建了一个读书笔记网站<a href="https://mapan.ink" target="_blank" rel="noopener">https://mapan.ink</a><br>以后的读书笔记就在这个上面写了，不得不说Hexo是一个建站好助手啊。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;阅读改变生活&quot;&gt;&lt;a href=&quot;#阅读改变生活&quot; class=&quot;headerlink&quot; title=&quot;阅读改变生活&quot;&gt;&lt;/a&gt;&lt;center style=&quot;color: #008000; font-family: Microsoft
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>语音交互式家居控制系统的设计</title>
    <link href="https://mapan.tech/posts/1aa0.html"/>
    <id>https://mapan.tech/posts/1aa0.html</id>
    <published>2017-01-05T09:05:00.000Z</published>
    <updated>2018-12-20T13:36:20.304Z</updated>
    
    <content type="html"><![CDATA[<p>我的毕业设计选题是『交互式语音家居控制系统的设计』，从16年12月20号着手开始设计制作以及调试，到了今天也算告一段落了。实现了语音识别、人机对话、无线控制、语音报时、时间温度显示，设置闹钟等功能。<br>现在还存在的bug有语音报时中间停歇的时间稍长。原因是MP3模块的指定文件播放需要反应时间，根据实际测试，大约需要800ms的延时才可以播放下一段录音，也就是说两段录音之间的间隔要800ms，目前还正在寻找解决的方案。</p><h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><ul><li>语音识别模块</li><li>MP3播放模块</li><li>蓝牙HC-05模块 x 2</li><li>继电器模块 x 1 </li><li><p>时钟模块   </p><blockquote><p>DS3231模块<br>DS1302</p></blockquote></li><li><p>电容</p><blockquote><p>100uF x 1<br>10uF x 1<br>104 x 1</p></blockquote></li><li><p>功放模块 x 1</p></li><li>STC12C5A60S2  x 2</li><li>0.5w 8ohm扬声器 x 2   </li><li><p>晶振</p><blockquote><p>32.768KHz晶振 x 1<br>22.1184MHz晶振 x 2</p></blockquote></li><li><p>LCD1602液晶屏</p></li><li>2000mA锂电池充放电模块</li><li><p>按键 </p><blockquote><p>点动按键 X 4<br>长按键 x 2 </p></blockquote></li><li><p>3mm铜柱 x 15</p></li><li>3mm螺母 x 8</li><li>3mm螺丝 x 12</li><li>覆铜板 x 2</li><li>杜邦线 若干</li><li>纸盒 x 1</li><li>贴纸 若干</li><li><p>开关</p><blockquote><p>船型开关 x 1<br>自锁开关 x 1</p></blockquote></li><li><p>5V 200mA 电源适配器 x 1</p></li><li>SDcard x 1</li><li>纽扣电池 x 1</li><li>温度传感器 DS18B20 X 1 </li><li>10kohm电位器</li><li>共阴极雾状RGB全彩灯珠 x 1</li><li>排母 若干</li><li>排针 若干</li><li>10kohm排阻 x 1</li></ul><h1 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h1><p>通过语音识别模块来识别我们说出的话（普通话最好，河南话也可），识别结果通过串口返回单片机，单片机控制MP3模块播放相应语音 、进行相应的蓝牙数据传送。<br>其中主要涉及到的是串口通信协议，IIC协议等<br>——————————-割—————————————</p><p>下面是手工制作的步骤</p><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><p>主控制板<br>!()[]<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c02.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c02.jpg" width="640" height="340"></p><p>从控制板<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c03.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c03.jpg" width="640" height="267"></p><h1 id="PCB图"><a href="#PCB图" class="headerlink" title="PCB图"></a>PCB图</h1><p>主控制板<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c01.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c01.jpg" width="640" height="317"></p><p>从控制板<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c04.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c04.jpg" width="640" height="712"></p><h1 id="手工制作步骤"><a href="#手工制作步骤" class="headerlink" title="手工制作步骤"></a>手工制作步骤</h1><p>打印到转印纸<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c05.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c05.jpg" width="640" height="473"></p><p>使用熨斗熨烫到覆铜板<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c06.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c06.jpg" width="640" height="864"></p><p>冷却后 揭下转印纸，墨完全转印到覆铜板上<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c07.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c07.jpg" width="640" height="864"></p><p>切割成合适的大小<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c08.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c08.jpg" width="640" height="473"></p><p>准备腐蚀<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c09.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c09.jpg" width="640" height="864"></p><p>正在腐蚀<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c10.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c10.jpg" width="640" height="864"></p><p>多余的铜已经基本腐蚀掉了<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c11.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c11.jpg" width="640" height="864"></p><p>打捞出来洗净晾干<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c13.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c13.jpg" width="640" height="473"></p><p>准备打孔，用自己DIY的手钻<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c12.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c12.jpg" width="640" height="473"></p><p>焊接上贴片单片机<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c14.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c14.jpg" width="640" height="473"></p><p>成品图<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c15.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c15.jpg" width="640" height="473"></p><p>从控制板过程也是这样<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c16.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c16.jpg" width="640" height="473"></p><p>过程省略，效果图如下<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c18.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c18.jpg" width="640" height="864"></p><p><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c17.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c17.jpg" width="640" height="864"></p><p>程序流程图</p><p>主程序<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c22.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c22.jpg" width="460" height="704"></p><p>循环模式<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c21.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c21.jpg" width="447" height="657"></p><p>口令模式<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c20.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c20.jpg" width="538" height="865"></p><p>报时模式<br><img class="lazy" src="http://ofasa9w0p.bkt.clouddn.com/047/c19.jpg" data-original="http://ofasa9w0p.bkt.clouddn.com/047/c19.jpg" width="197" height="342"></p><hr><p><a href="/Graduate/index.html">项目主页</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;我的毕业设计选题是『交互式语音家居控制系统的设计』，从16年12月20号着手开始设计制作以及调试，到了今天也算告一段落了。实现了语音识别、人机对话、无线控制、语音报时、时间温度显示，设置闹钟等功能。&lt;br&gt;现在还存在的bug有语音报时中间停歇的时间稍长。原因是MP3模块的指
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>单片机IO口模拟I2C时序驱动AT24C32</title>
    <link href="https://mapan.tech/posts/e12d.html"/>
    <id>https://mapan.tech/posts/e12d.html</id>
    <published>2016-12-24T09:05:00.000Z</published>
    <updated>2017-10-03T06:55:12.492Z</updated>
    
    <content type="html"><![CDATA[<p>AT24C32和驱动和AT24C02基本一致。由于容量增加了，数据地址的地址由原来的8位也相应的增加到16位。</p><div class="table-container"><table><thead><tr><th style="text-align:center">芯片</th><th style="text-align:center">容量</th></tr></thead><tbody><tr><td style="text-align:center">AT24C01</td><td style="text-align:center">128字节</td></tr><tr><td style="text-align:center">AT24C02</td><td style="text-align:center">256字节</td></tr><tr><td style="text-align:center">AT24C04</td><td style="text-align:center">512字节</td></tr><tr><td style="text-align:center">AT24C08</td><td style="text-align:center">1K字节</td></tr><tr><td style="text-align:center">AT24C016</td><td style="text-align:center">2K字节</td></tr><tr><td style="text-align:center">AT24C0132</td><td style="text-align:center">4K字节</td></tr><tr><td style="text-align:center">AT24C064</td><td style="text-align:center">8K字节</td></tr><tr><td style="text-align:center">AT24C0128</td><td style="text-align:center">16K字节</td></tr><tr><td style="text-align:center">AT24C0256</td><td style="text-align:center">32K字节</td></tr><tr><td style="text-align:center">AT24C0512</td><td style="text-align:center">64K字节</td></tr></tbody></table></div><p>1字节 = 1 Byte</p><p>以下程序适用于上面型号的EEPROM芯片<br>使用22.1184MHz晶振、读出的数据送P0口显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;reg52.h&quot; </span><br><span class="line">#include &quot;intrins.h&quot;  </span><br><span class="line"></span><br><span class="line">#define uchar unsigned char </span><br><span class="line">#define uint unsigned int </span><br><span class="line"></span><br><span class="line">sbit sda=P3^7;//;模拟I2C 数据 </span><br><span class="line">sbit scl=P3^6;//;模拟I2C 时钟 </span><br><span class="line"></span><br><span class="line">void delay1(uint z)//延时为 1ms </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    unsigned char a,b,i;</span><br><span class="line">for(i=0;i&lt;z;i++)</span><br><span class="line">for(b=80;b&gt;0;b--)</span><br><span class="line">for(a=10;a&gt;0;a--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void delay()//5us延时 </span><br><span class="line">  //22.1184误差 -0.1171875us</span><br><span class="line">&#123;</span><br><span class="line">    unsigned char a;</span><br><span class="line">    for(a=3;a&gt;0;a--);</span><br><span class="line">&#125;</span><br><span class="line">void star()//开始 </span><br><span class="line">&#123; </span><br><span class="line">sda=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">sda=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void stop()//停止 </span><br><span class="line">&#123; </span><br><span class="line">sda=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">sda=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void ack()//应答 </span><br><span class="line">&#123; </span><br><span class="line">uchar z=0; </span><br><span class="line">while((sda==1)&amp;&amp;(z&lt;50))z++;//条件判断， sda=1，则没有应答。如果没有应答则延时：z&lt;50，z++;后返回 </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void write(uchar slave_write_address,uchar byte_High_address,uchar byte_Low_address,uchar data_data)//写一个数据 </span><br><span class="line">&#123; </span><br><span class="line">uchar temp,temp1,i,ii; </span><br><span class="line"></span><br><span class="line">star();//开始 </span><br><span class="line"></span><br><span class="line">for(ii=0;ii&lt;4;ii++)//根据 24CXX文档资料，和时序图，按顺序送：器件写地址，字节地址，数据 </span><br><span class="line">&#123;  </span><br><span class="line">if(ii==0) </span><br><span class="line">&#123; </span><br><span class="line">temp=slave_write_address;//送 器件写地址 </span><br><span class="line">temp1=slave_write_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==1) </span><br><span class="line">&#123; </span><br><span class="line">temp=byte_High_address;//送 字节高地址 </span><br><span class="line">temp1=byte_High_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==2) </span><br><span class="line">&#123; </span><br><span class="line">temp=byte_Low_address;//送 字节低地址 </span><br><span class="line">temp1=byte_Low_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==3) </span><br><span class="line">&#123; </span><br><span class="line">temp=data_data;//送 数据 </span><br><span class="line">temp1=data_data; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(i=0;i&lt;8;i++) </span><br><span class="line">&#123; </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">temp=temp1; </span><br><span class="line">temp=temp&amp;0x80;// 相 与 后，把不相关的位清零 </span><br><span class="line"></span><br><span class="line">if(temp==0x80)//根据前面 相 与 后，判断 temp是否等于0x80，是则该位为 1 </span><br><span class="line"></span><br><span class="line">sda=1;  </span><br><span class="line">else </span><br><span class="line">sda=0; </span><br><span class="line"></span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">temp1=temp1&lt;&lt;1;//向左移出1位 </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line">sda=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">ack(); </span><br><span class="line">&#125; </span><br><span class="line">stop();//停止 </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">read(uchar slave_write_address,byte_High_address,byte_Low_address,uchar slave_read_address)//读一个数据 </span><br><span class="line">&#123; </span><br><span class="line">uchar temp,temp1,i,ii,x,data_data; </span><br><span class="line"></span><br><span class="line">star();//开始 </span><br><span class="line"></span><br><span class="line">for(ii=0;ii&lt;4;ii++)//根据 24CXX文档资料，和时序图，按顺序送：器件写地址，字节地址，器件读地址 </span><br><span class="line">&#123;  </span><br><span class="line">if(ii==0) </span><br><span class="line">&#123; </span><br><span class="line">temp=slave_write_address;//送 器件写地址 </span><br><span class="line">temp1=slave_write_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==1) </span><br><span class="line">&#123; </span><br><span class="line">temp=byte_High_address;//送 字节高地址 </span><br><span class="line">temp1=byte_High_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==2) </span><br><span class="line">&#123; </span><br><span class="line">temp=byte_Low_address;//送 字节低地址 </span><br><span class="line">temp1=byte_Low_address; </span><br><span class="line">&#125; </span><br><span class="line">else if(ii==3) </span><br><span class="line">&#123;  </span><br><span class="line">star();//开始 </span><br><span class="line"></span><br><span class="line">temp=slave_read_address;//送 器件读地址 </span><br><span class="line">temp1=slave_read_address; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">for(i=0;i&lt;8;i++)//开始读数据 </span><br><span class="line">&#123; </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">temp=temp1; </span><br><span class="line">temp=temp&amp;0x80;// 相 与 后，把不相关的位清零 </span><br><span class="line"></span><br><span class="line">if(temp==0x80)//根据前面 相 与 后，判断 temp是否等于0x80，是则该位为 1 </span><br><span class="line"></span><br><span class="line">sda=1;  </span><br><span class="line">else </span><br><span class="line">sda=0; </span><br><span class="line"></span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">temp1=temp1&lt;&lt;1;//向左移出1位 </span><br><span class="line">&#125; </span><br><span class="line">sda=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">ack();//应答 </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">for(x=0;x&lt;8;x++) </span><br><span class="line">&#123; </span><br><span class="line">data_data=data_data&lt;&lt;1;//向左移入1位 </span><br><span class="line"></span><br><span class="line">sda=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=0; </span><br><span class="line">delay();//5us延时 </span><br><span class="line">scl=1; </span><br><span class="line">delay();//5us延时 </span><br><span class="line"></span><br><span class="line">if(sda==1)//判断 数据线是否是高电平 </span><br><span class="line">data_data|=0x01;//把读到的数据 或 0X01  </span><br><span class="line">//else  </span><br><span class="line">//data_data|=0x00; </span><br><span class="line">&#125; </span><br><span class="line">ack();//应答 </span><br><span class="line">stop();//停止 </span><br><span class="line">return data_data;//返回读到的数据 </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">void main() </span><br><span class="line">&#123;  </span><br><span class="line"></span><br><span class="line">write(0xa0,0x00,0x01,0xaa);//向器件写一个数据: </span><br><span class="line">//（0xa0 是器件写地址；0x00 是字节高地址；0x01 是字节低地址；0x66 是待写入的数据） </span><br><span class="line"></span><br><span class="line">delay1(5);//写与读的时间间隔应大于5ms,取决于器件 24C02的响应速度 </span><br><span class="line"></span><br><span class="line">//向器件读一个数据 </span><br><span class="line">//把读出的数据送 P1口显示 </span><br><span class="line">P0=read(0xa0,0x00,0x01,0xa1);//向器件读一个数据： </span><br><span class="line">//（0xa0 是器件写地址；0x00 是字节高地址；0x01 是字节低地址；0xa1 是器件读地址） </span><br><span class="line"></span><br><span class="line">while(1);//跳转，相当于汇编指令 JUMP $ </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;AT24C32和驱动和AT24C02基本一致。由于容量增加了，数据地址的地址由原来的8位也相应的增加到16位。&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEX和BCD互转</title>
    <link href="https://mapan.tech/posts/2817.html"/>
    <id>https://mapan.tech/posts/2817.html</id>
    <published>2016-12-24T09:05:00.000Z</published>
    <updated>2017-10-03T06:55:11.962Z</updated>
    
    <content type="html"><![CDATA[<p>在一些时钟芯片当中，常常使用BCD码来存储年月日时分秒的数据<br>这个时候为了方便操作，我们就需要进行BCD⇔HEX相互的转换</p><p>BCD→HEX的子程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unsigned char BCD2HEX(uchar val)</span><br><span class="line">&#123;</span><br><span class="line">return((val&gt;&gt;4)*10)+(val&amp;0x0f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>HEX→BCD的子程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unsigned char HEX2BCD(uchar val)</span><br><span class="line">&#123;</span><br><span class="line">return(((val%100)/10)&lt;&lt;4)|(val%10);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用C语言编写，可以直接移植到想要使用的地方。<br>使用方法不再赘述。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在一些时钟芯片当中，常常使用BCD码来存储年月日时分秒的数据&lt;br&gt;这个时候为了方便操作，我们就需要进行BCD⇔HEX相互的转换&lt;/p&gt;
&lt;p&gt;BCD→HEX的子程序&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>旋转星空作为网页背景</title>
    <link href="https://mapan.tech/posts/a414.html"/>
    <id>https://mapan.tech/posts/a414.html</id>
    <published>2016-12-03T03:05:00.000Z</published>
    <updated>2017-10-03T06:55:11.434Z</updated>
    
    <content type="html"><![CDATA[<p>最近看到一个网站首页网址是cpasem点com，背景动画特别炫，旋转星空的背景。经过分析，完全是使用js代码实现。有点厉害了！</p><p>所以决定爬下来，一探究竟。页面做的保护措施很好，鼠标不能右键单击，F12看源码，许多代码也隐藏的很深。不过，有句话叫做：没有爬不到的网站。</p><p>我的做法是直接CTRL+s保存全部网页内容，在本地一点点的分析查看。可无奈有些内容根本下载不了好伐！（看来防护措施做的还挺好，站主还是有一些水平的）比如一些特效的图片，这样的话，一个鼠标经过的特效就没有了。不过怎么能难的倒我，方法总是有的。F12继续查看图片的绝对地址，复制后浏览器新窗口打开，然后右键保存。这样图片问题就解决了。</p><p>然后就是删除一堆无用的Js，诸如CNZZ统计，BGM，还有别的一些不知道干嘛使的JS。最后修改网站的内容，大致结构保持不变，按照本博客的首页排版，做了一个页面，预览<a href="/night/index.html">demo</a>。代码很简洁，在github可以查看爬下来的<a href="https://github.com/mapan2020/night" target="_blank" rel="noopener">源码</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近看到一个网站首页网址是cpasem点com，背景动画特别炫，旋转星空的背景。经过分析，完全是使用js代码实现。有点厉害了！&lt;/p&gt;
&lt;p&gt;所以决定爬下来，一探究竟。页面做的保护措施很好，鼠标不能右键单击，F12看源码，许多代码也隐藏的很深。不过，有句话叫做：没有爬不到的
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>语音合成</title>
    <link href="https://mapan.tech/posts/2fd4.html"/>
    <id>https://mapan.tech/posts/2fd4.html</id>
    <published>2016-11-20T02:05:00.000Z</published>
    <updated>2017-11-02T13:02:55.908Z</updated>
    
    <content type="html"><![CDATA[<p>毕设题目这几天就要确定了，我要做的是 <strong>交互式语音家居控制系统的设计</strong><br>由于需要<em>文字</em>—-&gt;<em>语音</em>的转换，刚开始想用自己的声音用手机录，后来感觉自己的声音不太好听，也没有一个标准。所以就打算使用合成语音。</p><p>在网上搜索了下，找到的是 <a href="http://www.xfyun.cn/default/online_demo/" target="_blank" rel="noopener">科大讯飞</a> 和 <a href="http://yuyin.baidu.com/#try" target="_blank" rel="noopener">百度语音</a>两家提供语音转文字的服务商，两个网站均只能在网站上试用，不能生成MP3等音频文件。</p><p>改变关键词再次搜索后找到了一个比较好用的软件<a href="http://www.443w.com/tts/" target="_blank" rel="noopener"><strong>朗读女</strong></a> ，下载安装后，可以使用本地发音人(离线使用)，或者科大讯飞的在线语音合成服务(必须联网)，其中<code>童声楠楠</code>这个声音比较好听，所以决定使用这个作为我的毕业设计制作的发音人。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41j7y8cfj30j20fk0u2.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;毕设题目这几天就要确定了，我要做的是
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于论文查重</title>
    <link href="https://mapan.tech/posts/d8ea.html"/>
    <id>https://mapan.tech/posts/d8ea.html</id>
    <published>2016-11-07T02:39:00.000Z</published>
    <updated>2017-10-03T06:55:09.588Z</updated>
    
    <content type="html"><![CDATA[<p>跟着老师做的项目已经到了最后上交研究报告的时间，需要提前查重复率。<br>于是就在百度上搜关键词“论文查重”，在屏蔽了百度推广的广告后，点开了一个“万方数据知识平台”的网站,简单看了下网站结构，看上去比较正规，就直接点了“论文相似性检测”的超链接，然后体检了本次所写的研究报告，并以10元/万字的价格，在线支付了10元。检测立即出结果，很出乎我的意料——-重复率0%。我在怀疑是不是没有提交上去。所以又看了分析报告。<br>分析报告上左侧是我论文的正文，右侧是相似性文章。但是右侧空白一字没有。感觉像被骗了，论文检测怎么可能相似性为0。除非数据库为0。<br>打客服咨询，客服表示我论文写的好，查不到重复。我说我在别处查的人家都详细到那一句话涉嫌抄袭，还给出了原文的题名作者和链接。<br>客服表示：由于我们数据库和别网站数据库不同，<br>所以查询到的结果是不一样的，客服有表示退到账户10元重新再检测一遍，如果还是零的话，就没办法了，只能说你论文写的很好查不到重复的。<br>我说可不可以退款（其实这就如同肉包子打狗，一去无回了），客服表示不能。</p><p>不管这个网站是不是正规，但在这里贴出这个网站 www.wanfangdata.com.cn<br>同时希望看到这篇文章的人，能少踩一些坑。</p><p>说完了上面的经历 再来谈一些，被骗时候的心理。</p><ul><li>1.急</li><li>2.贪小便宜</li></ul><p>首先我认为我是被骗了，由于付钱但没有得到想要的数据。<br>由于急着交论文，首先要查重复率才可以给老师看。就在百度上搜索，这个时候由于心里急，根据多年网购经验被骗的很少，怎么这么巧就被骗了。所以就放松了警惕，然后一路注册，上传论文，付钱。有句古话说得好“病急乱投医”，这和病急乱投医的心里是一样的，一个字 “急”。</p><p>被骗的另一种心里就是“贪小便宜”，受金钱利益驱使，结果往往吃了大亏。最近各种骗人新闻，诸如小玉玉事件…太多太多，这里不做分析。</p><p>这次被骗的钱不多，所以就当买了一份经验和教训，下次遇到类似的情况，不能大意。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;跟着老师做的项目已经到了最后上交研究报告的时间，需要提前查重复率。&lt;br&gt;于是就在百度上搜关键词“论文查重”，在屏蔽了百度推广的广告后，点开了一个“万方数据知识平台”的网站,简单看了下网站结构，看上去比较正规，就直接点了“论文相似性检测”的超链接，然后体检了本次所写的研究报
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>希腊字母读音</title>
    <link href="https://mapan.tech/posts/b1d1.html"/>
    <id>https://mapan.tech/posts/b1d1.html</id>
    <published>2016-10-27T11:40:00.000Z</published>
    <updated>2017-10-03T06:55:09.038Z</updated>
    
    <content type="html"><![CDATA[<p>希腊字母是希腊语所使用的字母，是世界上最早的有元音的字母。古罗马人引进希腊字母，略微改变变为拉丁字母，在世界广为流行<br>现在许多数学公式中仍常见一些希腊字母<br>现整理了一下希腊字母大小写和读音<br>以备不时之需：</p><div class="table-container"><table><thead><tr><th style="text-align:center">大写</th><th style="text-align:center">小写</th><th style="text-align:center">英文注音</th><th style="text-align:center">国际音标注音</th><th style="text-align:center">中文注音</th></tr></thead><tbody><tr><td style="text-align:center">Α</td><td style="text-align:center">α</td><td style="text-align:center">alph</td><td style="text-align:center">a:lf</td><td style="text-align:center">阿尔法</td></tr><tr><td style="text-align:center">Β</td><td style="text-align:center">β</td><td style="text-align:center">beta</td><td style="text-align:center">bet</td><td style="text-align:center">贝塔</td></tr><tr><td style="text-align:center">Γ</td><td style="text-align:center">γ</td><td style="text-align:center">gamma</td><td style="text-align:center">ga:m</td><td style="text-align:center">伽马</td></tr><tr><td style="text-align:center">Δ</td><td style="text-align:center">δ</td><td style="text-align:center">delta</td><td style="text-align:center">delt</td><td style="text-align:center">德尔塔</td></tr><tr><td style="text-align:center">Ε</td><td style="text-align:center">ε</td><td style="text-align:center">epsilon</td><td style="text-align:center">ep`silon</td><td style="text-align:center">伊普西龙</td></tr><tr><td style="text-align:center">Ζ</td><td style="text-align:center">ζ</td><td style="text-align:center">zeta</td><td style="text-align:center">zat</td><td style="text-align:center">截塔</td></tr><tr><td style="text-align:center">Η</td><td style="text-align:center">η</td><td style="text-align:center">eta</td><td style="text-align:center">eit</td><td style="text-align:center">艾塔</td></tr><tr><td style="text-align:center">Θ</td><td style="text-align:center">θ</td><td style="text-align:center">thet</td><td style="text-align:center">θit</td><td style="text-align:center">西塔</td></tr><tr><td style="text-align:center">Ι</td><td style="text-align:center">ι</td><td style="text-align:center">iot</td><td style="text-align:center">aiot</td><td style="text-align:center">约塔</td></tr><tr><td style="text-align:center">Κ</td><td style="text-align:center">κ</td><td style="text-align:center">kappa</td><td style="text-align:center">kap</td><td style="text-align:center">卡帕</td></tr><tr><td style="text-align:center">∧</td><td style="text-align:center">λ</td><td style="text-align:center">lambda</td><td style="text-align:center">lambd</td><td style="text-align:center">兰布达</td></tr><tr><td style="text-align:center">Μ</td><td style="text-align:center">μ</td><td style="text-align:center">mu</td><td style="text-align:center">mju</td><td style="text-align:center">缪</td></tr><tr><td style="text-align:center">Ν</td><td style="text-align:center">ν</td><td style="text-align:center">nu</td><td style="text-align:center">nju</td><td style="text-align:center">纽</td></tr><tr><td style="text-align:center">Ξ</td><td style="text-align:center">ξ</td><td style="text-align:center">xi</td><td style="text-align:center">ksi</td><td style="text-align:center">克西</td></tr><tr><td style="text-align:center">Ο</td><td style="text-align:center">ο</td><td style="text-align:center">omicron</td><td style="text-align:center">omik`ron</td><td style="text-align:center">奥密克戎</td></tr><tr><td style="text-align:center">∏</td><td style="text-align:center">π</td><td style="text-align:center">pi</td><td style="text-align:center">pai</td><td style="text-align:center">派</td></tr><tr><td style="text-align:center">Ρ</td><td style="text-align:center">ρ</td><td style="text-align:center">rho</td><td style="text-align:center">rou</td><td style="text-align:center">肉</td></tr><tr><td style="text-align:center">∑</td><td style="text-align:center">σ</td><td style="text-align:center">sigma</td><td style="text-align:center">`sigma</td><td style="text-align:center">西格玛</td></tr><tr><td style="text-align:center">Τ</td><td style="text-align:center">τ</td><td style="text-align:center">tau</td><td style="text-align:center">tau</td><td style="text-align:center">套</td></tr><tr><td style="text-align:center">Υ</td><td style="text-align:center">υ</td><td style="text-align:center">upsilon</td><td style="text-align:center">jup`silon</td><td style="text-align:center">宇普西龙</td></tr><tr><td style="text-align:center">Φ</td><td style="text-align:center">φ</td><td style="text-align:center">phi</td><td style="text-align:center">fai</td><td style="text-align:center">佛爱</td></tr><tr><td style="text-align:center">Χ</td><td style="text-align:center">χ</td><td style="text-align:center">chi</td><td style="text-align:center">phai</td><td style="text-align:center">西</td></tr><tr><td style="text-align:center">Ψ</td><td style="text-align:center">ψ</td><td style="text-align:center">psi</td><td style="text-align:center">psai</td><td style="text-align:center">普西</td></tr><tr><td style="text-align:center">Ω</td><td style="text-align:center">ω</td><td style="text-align:center">omega</td><td style="text-align:center">o`miga</td><td style="text-align:center">欧米伽</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;希腊字母是希腊语所使用的字母，是世界上最早的有元音的字母。古罗马人引进希腊字母，略微改变变为拉丁字母，在世界广为流行&lt;br&gt;现在许多数学公式中仍常见一些希腊字母&lt;br&gt;现整理了一下希腊字母大小写和读音&lt;br&gt;以备不时之需：&lt;/p&gt;
&lt;div
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于Arduino的蓝牙控制小车</title>
    <link href="https://mapan.tech/posts/ae14.html"/>
    <id>https://mapan.tech/posts/ae14.html</id>
    <published>2016-10-26T15:21:00.000Z</published>
    <updated>2017-10-03T06:55:08.818Z</updated>
    
    <content type="html"><![CDATA[<p>上学期买的小车套件和Arduino板子都还在吃灰，昨天兴致来了就准备一步步的整一个<br>首先找资料把ADXL345三轴加速度传感器调通了<br>然后把Arduino UNO板子和L293D电机驱动扩展板程序调通了<br>最后把蓝牙模块HC-05程序调通了。<br>三轴加速度传感器暂时还没想好怎么使用，so暂时来个蓝牙控制的小车好了。</p><p>手机下载蓝牙串口助手，设置串口发送 1 2 3 4 四个数字分别代表前进、后退、右拐、左拐</p><p>关于Arduino的编程语言<br>我想说和C语言对比，爽太多。<br>你根本不需要了解硬件怎么连接的，内部协议是什么。<br>因为有很多集成库，只需要会调用其中的API接口即可。<br>在8位单片机上搞面向对象开发，适合DIYer，适合初学者。</p><h1 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;AFMotor.h&quot;</span><br><span class="line"></span><br><span class="line">AF_DCMotor motor1(1);  //设置一号电机</span><br><span class="line">AF_DCMotor motor2(2);  //设置二号电机</span><br><span class="line">AF_DCMotor motor3(3);  //设置三号电机</span><br><span class="line">AF_DCMotor motor4(4);  //设置四号电机</span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">Serial.begin(9600);  //串口设置波特率9600</span><br><span class="line">&#125;</span><br><span class="line">void Goahead(unsigned char i)  //前进</span><br><span class="line">&#123;</span><br><span class="line">motor1.run(FORWARD);</span><br><span class="line">motor1.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor2.run(FORWARD);</span><br><span class="line">motor2.setSpeed(i);            </span><br><span class="line"></span><br><span class="line">motor3.run(FORWARD);</span><br><span class="line">motor3.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor4.run(FORWARD);</span><br><span class="line">motor4.setSpeed(i);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Back(unsigned char i)  //后退</span><br><span class="line">&#123;</span><br><span class="line">motor1.run(BACKWARD);</span><br><span class="line">motor1.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor2.run(BACKWARD);</span><br><span class="line">motor2.setSpeed(i);            </span><br><span class="line"></span><br><span class="line">motor3.run(BACKWARD);</span><br><span class="line">motor3.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor4.run(BACKWARD);</span><br><span class="line">motor4.setSpeed(i);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Turn_Left(unsigned char i)  //左拐</span><br><span class="line">&#123;</span><br><span class="line">motor1.run(BACKWARD);</span><br><span class="line">motor1.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor2.run(FORWARD);</span><br><span class="line">motor2.setSpeed(i);            </span><br><span class="line"></span><br><span class="line">motor3.run(FORWARD);</span><br><span class="line">motor3.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor4.run(BACKWARD);</span><br><span class="line">motor4.setSpeed(i);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Turn_Right(unsigned char i)  //右拐</span><br><span class="line">&#123;</span><br><span class="line">motor1.run(FORWARD);</span><br><span class="line">motor1.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor2.run(BACKWARD);</span><br><span class="line">motor2.setSpeed(i);            </span><br><span class="line"></span><br><span class="line">motor3.run(BACKWARD);</span><br><span class="line">motor3.setSpeed(i);  </span><br><span class="line"></span><br><span class="line">motor4.run(FORWARD);</span><br><span class="line">motor4.setSpeed(i);  </span><br><span class="line">&#125;</span><br><span class="line">void stop()  //停止</span><br><span class="line">&#123;</span><br><span class="line">motor1.run(RELEASE);</span><br><span class="line">motor2.run(RELEASE);</span><br><span class="line">motor3.run(RELEASE);</span><br><span class="line">motor4.run(RELEASE);</span><br><span class="line">&#125;</span><br><span class="line">void loop()</span><br><span class="line">&#123;</span><br><span class="line">while (Serial.available() &gt; 0) </span><br><span class="line">&#123;</span><br><span class="line">int inChar = Serial.read();</span><br><span class="line">inChar=inChar-0x30;</span><br><span class="line">if(inChar == 1)  //前进</span><br><span class="line">&#123;</span><br><span class="line">Goahead(250);</span><br><span class="line">delay(300);</span><br><span class="line">stop();</span><br><span class="line">&#125;</span><br><span class="line">else if(inChar == 2)  //后退</span><br><span class="line">&#123;</span><br><span class="line">Back(250);</span><br><span class="line">delay(300);</span><br><span class="line">stop();</span><br><span class="line">&#125;</span><br><span class="line">else if(inChar == 3)  //右转</span><br><span class="line">&#123;</span><br><span class="line">Turn_Right(250);</span><br><span class="line">delay(300);</span><br><span class="line">stop();</span><br><span class="line">&#125; </span><br><span class="line">else if(inChar == 4)  //左转</span><br><span class="line">&#123;</span><br><span class="line">Turn_Left(250);</span><br><span class="line">delay(300);</span><br><span class="line">stop();</span><br><span class="line">&#125; </span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">stop();  //停止</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">inChar=0; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><ul><li>Arduino Uno</li><li>L293D模块</li><li>小车底盘模块</li><li>18650电池 x 2</li><li>HC-05 蓝牙模块</li></ul><p>视频暂时还没录制，等哪天有心情了录一个。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;上学期买的小车套件和Arduino板子都还在吃灰，昨天兴致来了就准备一步步的整一个&lt;br&gt;首先找资料把ADXL345三轴加速度传感器调通了&lt;br&gt;然后把Arduino
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>电子系毕业论文格式</title>
    <link href="https://mapan.tech/posts/6b0b.html"/>
    <id>https://mapan.tech/posts/6b0b.html</id>
    <published>2016-10-20T10:19:22.000Z</published>
    <updated>2017-10-03T06:55:08.616Z</updated>
    
    <content type="html"><![CDATA[<p>最近跟着张老师在做一个创新实践项目，现在到了收尾阶段，正处于撰写研究报告阶段。</p><p>通过老师的指导，了解到研究报告的<strong>格式</strong>和<strong>要求</strong>和毕业论文一样。</p><p>在这里总结一下电子系论文的写作模板。</p><hr><h1 id="封面"><a href="#封面" class="headerlink" title="封面"></a>封面</h1><blockquote><p>XXXX学校<br>题目XXXX<br>姓名：XXX<br>指导老师：XXX</p></blockquote><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><blockquote><ul><li>中文摘要</li><li>ABSTRACT(英文摘要)</li></ul></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><hr><h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><blockquote><h2 id="1-1引言"><a href="#1-1引言" class="headerlink" title="1.1引言"></a>1.1引言</h2><h2 id="1-2研究背景"><a href="#1-2研究背景" class="headerlink" title="1.2研究背景"></a>1.2研究背景</h2><h2 id="1-3等等…"><a href="#1-3等等…" class="headerlink" title="1.3等等…."></a>1.3等等….</h2><p>（最多3个,引言200-300字）</p></blockquote><hr><h1 id="第二章-设计方案和总体方案"><a href="#第二章-设计方案和总体方案" class="headerlink" title="第二章 设计方案和总体方案"></a>第二章 设计方案和总体方案</h1><blockquote><h2 id="2-1设计要求（设计思路）"><a href="#2-1设计要求（设计思路）" class="headerlink" title="2.1设计要求（设计思路）"></a>2.1设计要求（设计思路）</h2><h2 id="2-2方案分析（简单介绍2-3个方案）"><a href="#2-2方案分析（简单介绍2-3个方案）" class="headerlink" title="2.2方案分析（简单介绍2-3个方案）"></a>2.2方案分析（简单介绍2-3个方案）</h2><blockquote><ul><li>方案一 </li><li>方案二</li><li>方案三</li></ul></blockquote><h2 id="2-3最终方案"><a href="#2-3最终方案" class="headerlink" title="2.3最终方案"></a>2.3最终方案</h2><p>通过balabala的权衡，我们选择方案X 作为我们本次设计的最终方案<br>（PS：前两章3-4页，重点放在3-4章）</p></blockquote><hr><h1 id="第三章-硬件设计"><a href="#第三章-硬件设计" class="headerlink" title="第三章 硬件设计"></a>第三章 硬件设计</h1><blockquote><h2 id="3-1-XX部分"><a href="#3-1-XX部分" class="headerlink" title="3.1 XX部分"></a>3.1 XX部分</h2><blockquote><h3 id="3-1-1-XXX主控模块"><a href="#3-1-1-XXX主控模块" class="headerlink" title="3.1.1 XXX主控模块"></a>3.1.1 XXX主控模块</h3><p>（贴每一部分原理图分析）</p><ul><li>1)主控芯片<blockquote><p>介绍芯片功能</p></blockquote></li><li>2)XX电路<blockquote><p>原理图、介绍电路工作原理</p></blockquote></li><li>3)XX电路<br>同上</li><li>4）….</li></ul><h3 id="3-1-2-XX模块"><a href="#3-1-2-XX模块" class="headerlink" title="3.1.2 XX模块"></a>3.1.2 XX模块</h3><p>(模块介绍部分可以用表格的尽量用表格&lt;图片&gt;，减少重复率，表格标题在表格上方)<br>….</p><h3 id="3-1-3-XX模块"><a href="#3-1-3-XX模块" class="headerlink" title="3.1.3 XX模块"></a>3.1.3 XX模块</h3><p>同上<br>balabalabala</p><h3 id="3-1-4-电源"><a href="#3-1-4-电源" class="headerlink" title="3.1.4 电源"></a>3.1.4 电源</h3><p>1&gt;稳压芯片<br>2&gt;电池<br>3&gt;….</p></blockquote><h2 id="3-2-XX部分"><a href="#3-2-XX部分" class="headerlink" title="3.2 XX部分"></a>3.2 XX部分</h2><blockquote><h3 id="3-2-1-XXX模块"><a href="#3-2-1-XXX模块" class="headerlink" title="3.2.1 XXX模块"></a>3.2.1 XXX模块</h3><p>balabalabal<br>…</p><h3 id="3-2-2-xxx模块"><a href="#3-2-2-xxx模块" class="headerlink" title="3.2.2 xxx模块"></a>3.2.2 xxx模块</h3><p>balabalabal<br>…</p></blockquote><p>此部分可适当增减章节</p></blockquote><hr><h1 id="第四章-软件设计"><a href="#第四章-软件设计" class="headerlink" title="第四章 软件设计"></a>第四章 软件设计</h1><blockquote><h2 id="4-1-软件介绍"><a href="#4-1-软件介绍" class="headerlink" title="4.1 软件介绍"></a>4.1 软件介绍</h2><p>（可贴一张软件界面图）<br>字数不够了可以稍微介绍用到的软件</p><h2 id="4-2-XX部分程序介绍"><a href="#4-2-XX部分程序介绍" class="headerlink" title="4.2 XX部分程序介绍"></a>4.2 XX部分程序介绍</h2><p>分析程序<br>（可贴程序流程图）<br>(尽量不贴程序，可数行核心代码，下同）</p><h2 id="4-3-XX部分"><a href="#4-3-XX部分" class="headerlink" title="4.3 XX部分"></a>4.3 XX部分</h2><p> 分析程序<br>（贴程序流程图）</p><p>此部分可适当增减章节</p></blockquote><hr><h1 id="第五章-调试过程"><a href="#第五章-调试过程" class="headerlink" title="第五章 调试过程"></a>第五章 调试过程</h1><blockquote><h2 id="5-1-完成作品"><a href="#5-1-完成作品" class="headerlink" title="5.1 完成作品"></a>5.1 完成作品</h2><p>贴出成品照片</p><h2 id="5-2-调试过程"><a href="#5-2-调试过程" class="headerlink" title="5.2 调试过程"></a>5.2 调试过程</h2><p>贴1-2张制作重要部分的照片（制作半成品图）<br>分析该制作过程进行到哪一步</p><h2 id="5-3-遇到的困难以及如何解决的"><a href="#5-3-遇到的困难以及如何解决的" class="headerlink" title="5.3 遇到的困难以及如何解决的"></a>5.3 遇到的困难以及如何解决的</h2><p>在制作XX模块的过程中，我们遇到了XXX问题，通过查阅大量资料，请教指导老师，XXXX解决了这个问题balabala</p><h2 id="5-4-PCB图和总体原理图"><a href="#5-4-PCB图和总体原理图" class="headerlink" title="5.4 PCB图和总体原理图"></a>5.4 PCB图和总体原理图</h2><p>贴出总原理图和PCB图，简单介绍</p></blockquote><hr><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>通过这个创新项目balabalabala</p><hr><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>…感谢….老师………<br>通过这个项目（设计）我学到了….</p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><ul><li>[1]……</li><li>[2]……</li><li>[3]……</li><li>[4]……</li></ul></blockquote><hr><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><ul><li>程序<br>(检测重复率时候需要去掉程序)</li><li>BOM(元件清单)</li></ul><hr><p>PS：论文要求 字数8k+ ，30↓%重复率。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近跟着张老师在做一个创新实践项目，现在到了收尾阶段，正处于撰写研究报告阶段。&lt;/p&gt;
&lt;p&gt;通过老师的指导，了解到研究报告的&lt;strong&gt;格式&lt;/strong&gt;和&lt;strong&gt;要求&lt;/strong&gt;和毕业论文一样。&lt;/p&gt;
&lt;p&gt;在这里总结一下电子系论文的写作模板。&lt;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github二级域名的设置</title>
    <link href="https://mapan.tech/posts/b1fb.html"/>
    <id>https://mapan.tech/posts/b1fb.html</id>
    <published>2016-10-16T13:57:00.000Z</published>
    <updated>2017-10-03T06:55:08.392Z</updated>
    
    <content type="html"><![CDATA[<p>见到有的博主用二级目录或者二级域名做了博客中英文双版本<br>自己想弄一个二级域名把主页和博客分开。这样主页可以写个人介绍，自己喜欢的话，博客的链接···<br>whatever you want！</p><p> 双语言、子目录方法</p><blockquote><ul><li>中文在<code>domain.com/cn</code> </li><li>英文在<code>domain.com/en</code> </li></ul></blockquote><p> 子域名方法</p><blockquote><ul><li>首页页在<code>www.domain.com</code></li><li>博客在<code>blog.doami.com</code></li></ul></blockquote><p>当然不限于 <code>首页和博客</code> 、<code>中文和英文</code>  anything you want！</p><p>在百度找教程然后自己摸索，总结一下我设置子域名的方法<br>假设你注册了domain.com域名，来建立hexo博客。并且想在github和coding双部署实现国内海外分流</p><p>我在在万网注册的域名。设置如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">记录类型</th><th style="text-align:center">主机记录</th><th style="text-align:center">解析线路</th><th style="text-align:center">记录值</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">CNAME</td><td style="text-align:center">@</td><td style="text-align:center">默认</td><td style="text-align:center">pages.coding.me.</td><td style="text-align:center">(国内线路)<br>domain.com<br>解析到coding</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">blog</td><td style="text-align:center">默认</td><td style="text-align:center">pages.coding.me.</td><td style="text-align:center">(国内线路)<br>blog.domain.com<br>解析到coding</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">@</td><td style="text-align:center"><strong>海外</strong></td><td style="text-align:center">xxx.github.io.</td><td style="text-align:center">(海外线路)<br>domain.com<br>解析到github</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">blog</td><td style="text-align:center"><strong>海外</strong></td><td style="text-align:center">xxx.github.io.</td><td style="text-align:center">(海外线路)<br>blog.domain.com<br>解析到github</td></tr></tbody></table></div><p>（其中<em>xxx为你的github用户名</em>）</p><p>如果只需要设置coding，只需要前两项记录就可以了，github是后两项。<br>双部署的就是4项全设置。</p><p>双部署的话，coding和github都需要设置，coding和github方法大致一样，我只介绍github的部署<br>在github分别建立两个repository</p><blockquote><ul><li><code>博客repo</code></li><li><code>首页repo</code></li></ul></blockquote><p>姑且先这样称呼这两个repository。</p><p>其中</p><blockquote><p><code>博客repo</code>的名字为 yourusername.github.io<br><code>首页ropo</code> 的名字随意起， 我写的是home</p></blockquote><p>.</p><blockquote><p><code>博客ropo</code>中在master分支来建立博客内容，CNAME文件中写入  <code>blog.domain.com</code><br><code>博客ropo</code>中的CNAME的作用是把 blog.domain.com —-&gt;  user.github.io  </p></blockquote><p>.</p><blockquote><p><code>首页ropo</code>在<code>gh-page</code>分支（master分支也可以）建立index.html文件(自定义),CNAME文件中写入<code>domain.com</code></p><p><code>首页ropo</code>中是一定要有index.html文件的，我是直接找到一份自己喜欢的静态html然后fork。可以直接upload上去，或者代码粘贴到github，此时可以通过域名username.github.io/home 直接当问该静态网页。 (<code>home</code>是<code>首页ropo</code>的名称)</p><p><code>首页ropo</code>中的CNAME文件作用是把 domain.com —-&gt; username.github.io/home </p></blockquote><p>然后设置coding，过程和github基本一样，不再赘述，只说下不同点：</p><p>当然这是我目前的方法，如果你有更简单方便的方法，欢迎分享。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;见到有的博主用二级目录或者二级域名做了博客中英文双版本&lt;br&gt;自己想弄一个二级域名把主页和博客分开。这样主页可以写个人介绍，自己喜欢的话，博客的链接···&lt;br&gt;whatever you want！&lt;/p&gt;
&lt;p&gt;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>编码方式的探讨</title>
    <link href="https://mapan.tech/posts/270.html"/>
    <id>https://mapan.tech/posts/270.html</id>
    <published>2016-10-13T13:33:00.000Z</published>
    <updated>2017-10-03T06:55:08.186Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是<code>255</code>（二进制11111111=十进制<code>255</code>），如果要表示更大的整数，就必须用更多的字节。比如两个字节可以表示的最大整数是<code>65535</code>，4个字节可以表示的最大整数是<code>4294967295</code>。</p><p>由于计算机是美国人发明的，因此，最早只有127个字母被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是<code>65</code>，小写字母z的编码是<code>122</code>。</p><p>但是要处理中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。</p><p>你可以想得到的是，全世界有上百种语言，日本把日文编到Shift_JIS里，韩国把韩文编到Euc-kr里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码。</p><p>因此，Unicode应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。</p><p>Unicode标准也在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。现代操作系统和大多数编程语言都直接支持Unicode。</p><p>现在，捋一捋ASCII编码和Unicode编码的区别：ASCII编码是1个字节，而Unicode编码通常是2个字节。</p><p>字母A用ASCII编码是十进制的<code>65</code>，二进制的<code>01000001</code>；</p><p>字符0用ASCII编码是十进制的<code>48</code>，二进制的<code>00110000</code>，注意字符’0’和整数0是不同的；</p><p>汉字中已经超出了ASCII编码的范围，用Unicode编码是十进制的<code>20013</code>，二进制的<code>01001110 00101101</code>。</p><p>你可以猜测，如果把ASCII编码的A用Unicode编码，只需要在前面补0就可以，因此，A的Unicode编码是<code>00000000 01000001</code>。</p><p>新的问题又出现了：如果统一成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编码需要多一倍的存储空间，在存储和传输上就十分不划算。</p><p>所以，本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。</p><div class="table-container"><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">ASCII</th><th style="text-align:center">Unicode</th><th style="text-align:center">UTF-8</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">01000001</td><td style="text-align:center">00000000 01000001</td><td style="text-align:center">01000001</td></tr><tr><td style="text-align:center">中</td><td style="text-align:center">X</td><td style="text-align:center">01001110 00101101</td><td style="text-align:center">11100100 10111000 10101101</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;字符编码&quot;&gt;&lt;a href=&quot;#字符编码&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对简历的一点看法</title>
    <link href="https://mapan.tech/posts/458.html"/>
    <id>https://mapan.tech/posts/458.html</id>
    <published>2016-09-30T15:04:00.000Z</published>
    <updated>2017-10-03T06:55:05.654Z</updated>
    
    <content type="html"><![CDATA[<p>一份简历，到底应该提供哪些信息给用人单位？HR到底想看到哪些内容？如何让HR能尽快判断要不要你来面试？HR都很忙的，你稍微一含蓄或者一啰嗦，就被Pass了，这就是为什么你的很多简历会石沉大海的原因。我结合自己的招募经验，总结了这么一个适合有工作经验的人的简历模板，仅供参考，后果自负：</p><p>姓名</p><p>联系方式：电话  邮件 </p><p>目标工作：行业  岗位  薪酬期望</p><p>基本信息：年龄  工作年限  现住地</p><p>培训经历：培训课程  教育背景</p><p>技能证书：学位证  资格证  技能证  …</p><p>工作简历：时间  单位  岗位  主要工作内容  主要业绩</p><p>生涯总结：性格特点  职业技能  对所在行业及岗位的个人观点</p><p>作品展示：网站  博客  设计  PPT  …</p><p>对没有职场经验的应届学生，可对上面的大体纲要作些调整，替换为相应的专业学习情况、论文答辩情况、在校所获奖项、担任的校内职务、对职场和岗位的理解并表达充分的自信。</p><p>一份直观高效的简历，仅仅能让你获得一张面试的门票，要想成功得到Offer，必须在面试时努力表达自己的能力和意愿，同时注重着装形象、口腔清洁和商务礼仪，如果这几点都做到了，即使最终没有成功，也会给人留下很好的印象。</p><p>认真书写自己的简历，自信对待每一次的面试，持续给人留下好的印象，一定会得到不错的Offer，对此要深信不疑。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一份简历，到底应该提供哪些信息给用人单位？HR到底想看到哪些内容？如何让HR能尽快判断要不要你来面试？HR都很忙的，你稍微一含蓄或者一啰嗦，就被Pass了，这就是为什么你的很多简历会石沉大海的原因。我结合自己的招募经验，总结了这么一个适合有工作经验的人的简历模板，仅供参考，
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于博客的探讨</title>
    <link href="https://mapan.tech/posts/1fe.html"/>
    <id>https://mapan.tech/posts/1fe.html</id>
    <published>2016-09-29T15:37:00.000Z</published>
    <updated>2017-10-03T06:55:05.276Z</updated>
    
    <content type="html"><![CDATA[<p>好久没有更新博客了，最近在看一个与<a href="http://www.crazepony.com/" target="_blank" rel="noopener">四轴飞行器</a>的有关网站时候，发现了一个好玩的<a href="http://beiyuu.com/" target="_blank" rel="noopener">博客</a>。进一步了解后，知道github可以建立一个博客并绑定自己的域名。</p><p>百度关键词<code>hexo+github</code>，按照教程，终于自己也建立了一个<a href="http://mapan.win" target="_blank" rel="noopener">静态博客</a>，感觉清爽简洁许多。之前自己用的是wordpress博客，但是越用越感觉臃肿，再三思索后埔决定把Wordpress博客的内容全部转移过来。然后就弄成了现在的样子。</p><p><strong>按照网上流行的说法：</strong></p><blockquote><ul><li><p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。</p></li><li><p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。</p></li><li><p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p></li></ul></blockquote><p> 相信大多数博主都处于前两个阶段，现在github提供了一个page的服务，你可以随意用它做你想做的任何事情，当然包括搭建一个静态博客。国内的gitcaft是一个和github相仿的网站，想在被coding收购后，提供的服务更稳定了。由于是中文的，所以添加了许多个性化的设定和内容。相信国内的朋友选择conding也是一个很不错的选择。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;好久没有更新博客了，最近在看一个与&lt;a href=&quot;http://www.crazepony.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;四轴飞行器&lt;/a&gt;的有关网站时候，发现了一个好玩的&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅释热释电人体感应模块</title>
    <link href="https://mapan.tech/posts/ad08.html"/>
    <id>https://mapan.tech/posts/ad08.html</id>
    <published>2016-05-14T00:25:00.000Z</published>
    <updated>2017-10-03T06:55:06.245Z</updated>
    
    <content type="html"><![CDATA[<p>提到热释电传感器，相信很多D友第一反应想到的是热释电模块，那你有没有想过自己DIY一套热释电模块呢？或者你想直接在你的PCB板上设计热释电功能，那么今天你来对了，今天PCB哥给大家的，就是完整的热释电模块电路的资料了，你可以把这部分功能电路直接集成到你的PCB上，就不用像搭积木一样地组建你的电路了。</p><p>那么，什么是热释电人体感应？</p><p>热释电红外传感器是一种能检测人或动物发射的红外线而输出电信号的传感器。早在1938年，有人提出过利用热释电效应探测红外辐射，但并未受到重视，直到六十年代，随着激光、红外技术的迅速发展，才又推动了对热释电效应的研究和对热释电晶体的应用。热释电晶体已广泛用于红外光谱仪、红外遥感以及热辐射探测器，它可以作为红外光的一种较理想的探测器，正在被广泛的应用到各种自动化控制装置中。除了在我们熟知的楼道自动开关、防盗报警上得到应用外，在更多的领域应用前景也不错。比如：在房间无人时会自动停机的空调机、饮水机；电视机能判断无人观看或观众已经睡觉后自动关机的装置；自动开启监视器或自动门铃；结合摄影机或数码照相机自动记录动物或人的活动等等应用。当然，如果你有别的创意，你也可以根据自己的奇思妙想，结合其它电路开发出更加优秀的新作品。</p><p>在详细了解了热释电人体感应模块后，我们开始今天的主题：热释电人体感应模块应该怎样调试和使用？<br><img src="http://ofasa9w0p.bkt.clouddn.com/009/1.jpg" alt title="外观图"><br>下面是这款热释电人体感应电路的电路图和PCB图，看不清不要紧，你可以获取在线的开源文件，当然你也可以把这部分电路灵活的集成到你的电路里。<br>电路原理图：<br><img src="http://ofasa9w0p.bkt.clouddn.com/009/2.jpg" alt title="原理图"></p><p><img src="http://ofasa9w0p.bkt.clouddn.com/009/3.jpg" alt title="PCB图"></p><p>下面我们对热释电感应电路做一下更加详细的介绍：</p><p>1、热释电感应电路的应用范围：<br>这款热释电红外开关是BISS0001配以热释电红外传感器和少量外接元器件构成的被动式红外开关。它能自动快速开启各类白炽灯、荧光灯、蜂鸣器、自动门、电风扇、烘干机和自动洗衣机等装置。特别适用于企业，宾馆、商场、库房及家庭的过道、走廊等敏感区域，或用于安全区域的自动灯光、照明和报警系统。<br>■ 安防产品<br>■ 人体感应玩具<br>■人体感应灯具<br>■ 工业自动化控制等</p><p>当然，用它完成你的防入侵系统，再合适不过了！</p><p>2、热释电感应电路使用技巧：</p><p>任何事情，要想成功，除了付出必要的努力，技巧也很重要！</p><p>下面我们要说的，正是热释电人体感应模块的使用和调试技巧了~~</p><p>1).感应模块通电后有一分钟左右的初始化时间，在此期间模块会间隔地输出0-3 次，一分钟后进入待机状态。<br>2). 应尽量避免灯光等干扰源近距离直射模块表面的透镜，以免引进干扰信号产生误动作；使用环境尽量避免流动的风，风也会对感应器造成干扰。<br>3). 感应模块采用双元探头，探头的窗口为长方形，双元（A元B元）位于较长方向的两端，当人体从左到右或从右到左走过时,红外光谱到达双元的时间、距离有差值，差值越大，感应越灵敏，当人体从正面走向探头或从上到下或从下到上方向走过时，双元检测不到红外光谱距离的变化，无差值，因此感应不灵敏或不工作；所以安装感应器时应使探头双元的方向与人体活动最多的方向尽量相平行，保证人体经过时先后被探头双元所感应。为了增加感应角度范围，一般采用圆形透镜，也使得探头四面都感应，但左右两侧仍然比上下两个方向感应范围大、灵敏度强，安装时仍需尽量按以上要求进行。</p><p>3、热释电传感器基本知识</p><p>热释电效应同压电效应类似，是指由于温度的变化而引起晶体表面荷电的现象。热释电传感器是对温度敏感的传感器。它由陶瓷氧化物或压电晶体元件组成，在元件两个表面做成电极，在传感器监测范围内温度有ΔT的变化时，热释电效应会在两个电极上会产生电荷ΔQ，即在两电极之间产生一微弱的电压ΔV。由于它的输出阻抗极高，在传感器中有一个场效应管进行阻抗变换。热释电效应所产生的电荷ΔQ会被空气中的离子所结合而消失，即当环境温度稳定不变时，ΔT=0，则传感器无输出。当人体进入检测区，因人体温度与环境温度有差别，产生ΔT，则有ΔT输出；若人体进入检测区后不动，则温度没有变化，传感器也没有输出了。所以这种传感器检测人体或者动物的活动传感。 由实验证明，传感器不加光学透镜(也称菲涅尔透镜)，其检测距离小于2m，而加上光学透镜后，其检测距离可大于7m。</p><p>4、使用中应注意以下几点：</p><p>第一、直流工作电压必须符合要求的数值，过高和过低都会影响模块性能，而且要求电源必须经过良好的稳压滤波，例如电脑USB电源、手机充电器电源、比较旧的9V的层叠电池都无法满足模块工作要求，建议用变压器的电源并经过三端稳压芯片稳压后再通过220UF和0.1UF的电容滤波后供电。</p><p>第二、调试时人体尽量远离感应区域，有时虽然人体不在模块的正前方，但是人体离模块太近时模块也能感应到造成一直有输出，还有调试时人体不要触摸电路部分也会影响模块工作，比较科学的办法是将输出端接一个LED或者是万用表，把模块用报纸盖住，人离开这个房间，等2分钟后看看模块是否还是一直有输出？</p><p>第三、模块不接负载时能正常工作，接上负载后工作紊乱，一种原因是因为电源容量很小负载比较耗电，负载工作时引起的电压波动导致模块误动作，另一种原因是负载得电工作时会产生干扰，例如继电器或者电磁铁等感性负载会产生反向电动势，315M发射板工作时会有电磁辐射等都会影响模块。解决办法如下：A、电源部分加电感滤波。B、采用负载和模块使用不同的电压的方法，例如：负载使用24V工作电压，模块使用12V工作电压，其间用三端稳压器隔离。C: 使用更大容量的电源。</p><p>第四、人体感应模块只能工作在室内并且工作环境应该避免阳光、强烈灯光直接照射，如果工作环境有强大的射频干扰，可以采用屏蔽措施。若遇有强烈气流干扰，关闭门窗或阻止对流。感应区尽量避免正对着发热电器和物体以及容易被风吹动的杂物和衣物。</p><p>第五、人体感应模块建议安装在密封的盒里，否则可能一直会有输出信号。</p><p>第六、如果要求人体感应模块的探测角度小于90度时，可以用不透明胶纸遮挡镜片或裁剪缩小镜片来实现。</p><p>第七、人体感应模块采用双元探头，人体的手脚和头部运动方向与感应灵敏度有着密切的联系，而且红外模块的特性决定了无法精确控制感应距离。</p><p>第八、模块中的探头（PIR）可以装焊在电路板的另一面。也可将探头用双芯屏蔽线延长，长度应在20厘米以内为好。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;提到热释电传感器，相信很多D友第一反应想到的是热释电模块，那你有没有想过自己DIY一套热释电模块呢？或者你想直接在你的PCB板上设计热释电功能，那么今天你来对了，今天PCB哥给大家的，就是完整的热释电模块电路的资料了，你可以把这部分功能电路直接集成到你的PCB上，就不用像搭
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PT2262/2272遥控芯片的应用</title>
    <link href="https://mapan.tech/posts/2eb9.html"/>
    <id>https://mapan.tech/posts/2eb9.html</id>
    <published>2016-04-29T00:33:00.000Z</published>
    <updated>2017-10-03T06:55:06.741Z</updated>
    
    <content type="html"><![CDATA[<p>PT2262/2272是一对带地址、数据编码功能的红外遥控发射/接收芯片。其中发射芯片PT2262-IR将载波振荡器、编码器和发射单元集成于一身，使发射电路变得非常简洁。</p><p><img src="http://ofasa9w0p.bkt.clouddn.com/001/1.jpg" alt title="PT2262"><br><img src="http://ofasa9w0p.bkt.clouddn.com/001/2.jpg" alt title="PT2272"><br>接收芯片PT2272的数据输出位根据其后缀不同而不同，数据输出具有“暂存”和“锁存”两种方式，方便用户使用。后缀为“M”为“暂存型”，后缀为“L”为“锁存型”，其数据输出又分为0、2、4、6不同的输出，例如：PT2272-M4则表示数据输出为4位的暂存型红外遥控接收芯片。<br><a href="http://ofasa9w0p.bkt.clouddn.com/001/3.jpg" title="引脚图" target="_blank" rel="noopener"></a><br>PT2262-IR引脚功能说明：<br>Pin1-Pin6（A0-A5）: 地址输入端，可编成“1”、“0”和“开路”三种状态。<br>Pin7、Pin8、pin10-Pin13（A6/D0-A11/D5）: 地址或数据输入端，地址输入时用Pin1-Pin6，做数据输入时只可编成“1”、“0”两种状态。<br>Pin14（TE）: 发射使能端，低电平有效。<br>Pin15、Pin16（OSC1、OSC2）: 外接振荡电阻，决定振荡的时钟频率。<br>Pin17（Dout）: 数据输出端，编码由此脚串行输出。<br>Pin9、Pin18（VDD，Vss）: 电源+，-输入端。<br>PT2272引脚功能说明：<br>Pin1-Pin6（A0-A5）: 地址输入端，可编成“1”、“0”和“开路”三种状态。要求与PT2262设定的状态一致。<br>Pin7、Pin8、pin10-Pin13（D0-D5）: 数据输出端，分暂存和锁存两种状态。<br>Pin14（DI）: 脉冲编码信号输入端。<br>Pin15、Pin16（OSC1、OSC2）: 外接振荡电阻，决定振荡的时钟频率。<br>Pin17（VT）: 输出端，接收有效信号时，VT端由低电平变为高电平。<br>Pin9、Pin18（VDD，Vss）: 电源+，-输入端。<br><img src="http://ofasa9w0p.bkt.clouddn.com/001/4.jpg" alt title="电气参数"><br><img src="http://ofasa9w0p.bkt.clouddn.com/001/5.jpg" alt title="极限参数"></p><p>PT2262/PT2272工作原理：<br>PT2262-IR发射芯片地址编码输入有“1”、“0”和“开路”三种状态，数据输入有“1”和“0”两种状态。由各地址、数据的不同接脚状态决定，编码从输出端Dout输出，通过红外发射管发射出去。其编码时序波形如图2所示。<br>Dout输出的编码信号是调制在38kHz载波上的，OSC1、OSC2外接的电阻决定载频频率，一般电阻可在430k—470k之间选择即可。<br><img src="http://ofasa9w0p.bkt.clouddn.com/001/6.jpg" alt title="编码时序图"></p><p>PT2272的暂存功能是指当发射信号消失时，PT2272的对应数据输出位即变为低电平。而锁存功能是指，当发射信号消失时，PT2272的数据输出端仍保持原来的状态，直到下次接收到新的信号输入。图3是红外发射和接收的典型应用原理图，为了能正确解调出调制的编码信号，接收端需加一级前置放大级，保证输入PT2272的信号幅度足够大。PT2272各输出端通过各种接口即可控制相应的负载。<br><img src="http://ofasa9w0p.bkt.clouddn.com/001/7.jpg" alt title="典型应用"></p><p>图4是PT2262构成6路发射电路，图中PT2262-IR的VDD是通过按键接通后向芯片供电，这样静态时，PT2262-IR并不耗电，特别适合是电池供电的场合。如果使用电源电压较低（如3V），二极管应选用低压差的型号（如1N60等），工作原理与图3相近，这里不再赘述。<br><img src="http://ofasa9w0p.bkt.clouddn.com/001/8.jpg" alt title="发射应用电路"><br>而红外与RF射频电路对比的话，各有优点：红外电路简单，无需调试（厂家有专业仪器调整频率与灵敏度）。RF射频电路则能隔墙遥控，操作方便，距离也相对较远。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;PT2262/2272是一对带地址、数据编码功能的红外遥控发射/接收芯片。其中发射芯片PT2262-IR将载波振荡器、编码器和发射单元集成于一身，使发射电路变得非常简洁。&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>两个IO端口连接一个矩阵键盘</title>
    <link href="https://mapan.tech/posts/565a.html"/>
    <id>https://mapan.tech/posts/565a.html</id>
    <published>2016-04-26T11:21:00.000Z</published>
    <updated>2017-11-02T13:03:51.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用两个I-O端口连接4×3的矩阵键盘"><a href="#使用两个I-O端口连接4×3的矩阵键盘" class="headerlink" title="使用两个I/O端口连接4×3的矩阵键盘"></a>使用两个I/O端口连接4×3的矩阵键盘</h1><p>矩阵键盘是微处理器基本的输入设备，搭建一个矩阵键盘最常规的方法需要使用多个微处理器I/O端口，然后往MCU中编写一个扫描算法程序来识别是哪一个键被按下。这种方法的一个缺点是它需要大量的I/O端口。例如，要连接一个4×3的矩阵键盘需要7个数字I/O引脚。当MCU的端口少或者不够用时就出问题了。<br>针对这个问题有两种可行的解决方案：很容易想到使用I/O扩展芯片或者用电阻网络分配一个唯一的电压值给每一个按键，然后使用一个模拟引脚来读取电压值来确定是哪一个按键被按下。每个解决方法都有自己的缺点。<br>因多数I/O扩展需要一个特殊的通讯协议（例如：I2C或SPI）来完成读写数据的操作，MCU得有相关的通信模型来支持，或者用户必须编写实现相关的通讯协议程序，这明显会增加处理器的系统开销。另外，使用电阻网络给每一个按键分配唯一的电压的缺点是当需要很多按键时，电压之间分布紧凑，一旦温度发生变化将会导致误读。再者开关的抖动在其中也起很大的作用，这种方法的另一个最主要的不足是：我们使用的MCU必须有模拟输入引脚。<br>下面介绍的这种方法可以克服以上所有的问题并且还有很多优点：无论连接多大规模的键盘只需要2个I/O端口；不需要特殊的通讯协议；也无需模拟输入端口。这个设计思路基于两片非常通用且便宜的CD4017计数器。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ju0decj30gg0f5aby.jpg" alt><br>图1展示4×3矩阵键盘的电路原理图。<br>R1，R4，R5和R6用于限流，R7，D4，D5，D6组成一个或门。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ju3113j30gg08njsk.jpg" alt><br>图2描述了如何读取4×3矩阵键盘的键值。<br>一个计数器用于控制键盘的行，另一个用于控制键盘的列。<br>MCU产生一个时钟脉冲信号作为计数器的脉冲输入来控制键盘的列。开始时，行计数器和列计数器的0号输出端口都是高电平，由于不断接受到脉冲信号列计数器的计数值增加。当接受到第四个时钟脉冲时，列计数器复位同时以此作为一个脉冲来控制行计数器。每次列计数器复位，行计数器的计数值增加直到接收到第五个脉冲时复位。在产生脉冲信号的同时MCU应该设置一个计数变量给脉冲计数。键盘的输出端接到MCU的一个外部中断引脚。<br>只有当一个按键被按下，这时按键所对应的行列都处在低电平，才会触发中断。如果行列中只有一个处在低电平不会触发中断。<br>当中断发生时，这时MCU读取计数值，根据计数值来判断是哪一个位置的按键被按下。<br>MCU中的时钟计数变量，随脉冲的产生而递增，它的数值与按键的次序对应，流程图见图2。<br>注意，尽管这个示例展示了一个4×3的矩阵键盘，通过利用4017其他的输出端口，你可以最多读取一个10×10的键盘。另外你也可以根据需要，级联更多的4017来扩展更大的规模的矩阵键盘。<br><span style="font-size: 8pt; font-family: 宋体;">本文来自果壳网</span></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;使用两个I-O端口连接4×3的矩阵键盘&quot;&gt;&lt;a href=&quot;#使用两个I-O端口连接4×3的矩阵键盘&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>按键的研究</title>
    <link href="https://mapan.tech/posts/694e.html"/>
    <id>https://mapan.tech/posts/694e.html</id>
    <published>2016-04-26T10:23:00.000Z</published>
    <updated>2017-10-03T06:55:07.247Z</updated>
    
    <content type="html"><![CDATA[<p>利用一个IO口，接一个按键，实现3功能操作：单击 + 双击 + 长按<br>用户基本操作定义： </p><ul><li>短按操作：按键按下，按下时间&lt;1s，属于一次短按操作 </li><li>长按操作：按键按下，按下时间&gt;1s，属于一次长按操作</li></ul><p>在正常0.5s内无按键操作为启始按键扫描条件下，扫描按键将产生以下3种按键事件： </p><ul><li>长按事件：任何1次出现的长按操作都属于长按事件 </li><li>单击事件：1次短按操作后，间隔0.5内没有短按操作 </li><li>双击事件：2次短按操作间隔时间&lt;0.5s，则2次短按操作为1次双击事件，且2次短按都取消</li></ul><p>特别操作情况定义： </p><ul><li>短按操作和长按操作间隔&lt;0.5s，以及，长按操作和短按操作间隔&lt;0.5s，均不产生双击事件 </li><li>连续n次（n为奇数）短按操作，且间隔均&lt;0.5s，产生(n-1)/2次双击事件+1次单击事件 </li><li>连续n次（n为偶数）短按操作，且间隔均&lt;0.5s，产生n/2次双击事件</li></ul><p>对按键操作者的建议： </p><p>由于按键的多功能性质，建议操作者每次在单击/长按/双击按键事件发生后，隔0.5s后再进行下一次的按键操作。因为在特别操作情况下，程序是保证按定义进行判断和处理的，主要是怕操作者自己记不清楚导致操作失误。</p><p>对软件设计者的要求： </p><ul><li>应该全面进行分析，给出严格定义和判断条件，如上所示。如果自己都不清楚，你的设计出的系统就不稳定，不可靠。 </li><li>在1的基础上，编写出符合要求的程序，并进行全面测试。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">/*================================================================================</span><br><span class="line">低层按键（I/0）扫描函数，即低层按键设备驱动，只返回无键、短按和长按。具体双击不在此处判断。</span><br><span class="line">=================================================================================*/ </span><br><span class="line"></span><br><span class="line">#define key_input    PIND.7    // 按键输入口 </span><br><span class="line"></span><br><span class="line">#define N_key    0             //无键</span><br><span class="line">#define S_key    1             //单键</span><br><span class="line">#define D_key    2             //双键</span><br><span class="line">#define L_key    3             //长键 </span><br><span class="line"></span><br><span class="line">#define key_state_0 0</span><br><span class="line">#define key_state_1 1</span><br><span class="line">#define key_state_2 2 </span><br><span class="line"></span><br><span class="line">unsigned char key_driver(void)</span><br><span class="line">&#123;</span><br><span class="line">    static unsigned char key_state = key_state_0, key_time = 0;</span><br><span class="line">    unsigned char key_press, key_return = N_key; </span><br><span class="line"></span><br><span class="line">    key_press = key_input;                    // 读按键I/O电平 </span><br><span class="line"></span><br><span class="line">    switch (key_state)</span><br><span class="line">    &#123;</span><br><span class="line">      case key_state_0:                               // 按键初始态</span><br><span class="line">        if (!key_press) key_state = key_state_1;      // 键被按下，</span><br><span class="line">        break;                                        //状态转换到按键消抖和确认状态 </span><br><span class="line"></span><br><span class="line">      case key_state_1:                      // 按键消抖与确认态</span><br><span class="line">        if (!key_press)</span><br><span class="line">        &#123;</span><br><span class="line">             key_time = 0;</span><br><span class="line">             key_state = key_state_2;       // 按键仍然处于按下，消抖完成，状态转换到按</span><br><span class="line">                                            //下键时间的计时状态，但返回的还是无键事件</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">             key_state = key_state_0;   // 按键已抬起，转换到按键初始态。此处完成和实现</span><br><span class="line">                                        //软件消抖，其实按键的按下和释放都在此消抖的。</span><br><span class="line">        break; </span><br><span class="line"></span><br><span class="line">      case key_state_2:</span><br><span class="line">        if(key_press)</span><br><span class="line">        &#123;</span><br><span class="line">             key_return = S_key;      // 此时按键释放，说明是产生一次短操作，回送S_key</span><br><span class="line">             key_state = key_state_0; // 转换到按键初始态</span><br><span class="line">        &#125;</span><br><span class="line">        else if (++key_time &amp;gt;= 100)   // 继续按下，计时加10ms（10ms为本函数循环执行间隔）</span><br><span class="line">        &#123;</span><br><span class="line">             key_return = L_key;      // 按下时间&amp;gt;1000ms，此按键为长按操作，返回长键事件</span><br><span class="line">             key_state = key_state_3; // 转换到等待按键释放状态</span><br><span class="line">        &#125;</span><br><span class="line">        break; </span><br><span class="line"></span><br><span class="line">      case key_state_3:               //等待按键释放状态，此状态只返回无按键事件</span><br><span class="line">        if (key_press) key_state = key_state_0; //按键已释放，转换到按键初始态</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    return key_return;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">/*=============================================================</span><br><span class="line">中间层按键处理函数，调用低层函数一次，处理双击事件的判断，返回上层正确的</span><br><span class="line">无键、单键、双键、长键4个按键事件。 本函数由上层循环调用，间隔10ms</span><br><span class="line">==============================================================*/ </span><br><span class="line"></span><br><span class="line">unsigned char key_read(void)</span><br><span class="line">&#123;</span><br><span class="line">    static unsigned char key_m = key_state_0, key_time_1 = 0;</span><br><span class="line">    unsigned char key_return = N_key,key_temp; </span><br><span class="line"></span><br><span class="line">    key_temp = key_driver(); </span><br><span class="line"></span><br><span class="line">    switch(key_m)</span><br><span class="line">    &#123;</span><br><span class="line">        case key_state_0:</span><br><span class="line">            if (key_temp == S_key )</span><br><span class="line">            &#123;</span><br><span class="line">                 key_time_1 = 0;               // 第1次单击，不返回，</span><br><span class="line">                 key_m = key_state_1;          //到下个状态判断后面是否出现双击</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">                 key_return = key_temp;        // 对于无键、长键，返回原事件</span><br><span class="line">            break; </span><br><span class="line"></span><br><span class="line">        case key_state_1:</span><br><span class="line">            if (key_temp == S_key)             // 又一次单击（间隔肯定&amp;lt;500ms）</span><br><span class="line">            &#123;</span><br><span class="line">                key_return = D_key;            // 返回双击键事件，回初始状态</span><br><span class="line">                key_m = key_state_0;</span><br><span class="line">            &#125;</span><br><span class="line">            else               // 这里500ms内肯定读到的都是无键事件，因为长键&amp;gt;1000ms</span><br><span class="line">            &#123;                  //在1s前低层返回的都是无键</span><br><span class="line">                if(++key_time_1 &amp;gt;= 50)</span><br><span class="line">                &#123;</span><br><span class="line">                     key_return = S_key;//0.5s内没再次出现单键事件，返回上次单键事件</span><br><span class="line">                     key_m = key_state_0; // 返回初始状态</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">    return key_return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面，根据程序分析按键事件的反映时间：</p><ul><li><p>对于长键，按下超过1s马上响应，反映最快。</p></li><li><p>对于双键，第2次按键释放后马上得到反映。</p></li><li><p>对于单键，释放后延时拖后500ms才能响应，反映最慢。</p></li></ul><p>反应的速度与需要判断后面是否有双击操作有关，只能这样。实际应用中，可以调整两次单击间隔时间定义，比如为300ms，这样单击的响应回快一点，单按键操作人员需要加快按键的操作过程。如果产品是针对老年人的，这个时间不易太短，因为年纪大的人，反映和动作都比较慢。</p><p>当然，上面两段可以合在一起。我这样做的目的，是为了可以方便的扩展为N击（当然，需要做修改）。可是最底层的就是最基本的操作处理短按和长按，不用改动的。至于双击，还是N击，在中间层处理。这就是程序设计中分层结构的优点。<br>测试代码环境如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">interrupt [TIM0_COMP] void timer0_comp_isr(void)       // 定时器10ms中断服务</span><br><span class="line">&#123;</span><br><span class="line">       time_10ms_ok = 1;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">main(viod)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    while</span><br><span class="line">    &#123;</span><br><span class="line">        if (time_10ms_ok)            //每10ms执行一次，</span><br><span class="line">        &#123;</span><br><span class="line">             time_10ms_ok =0;</span><br><span class="line">             key = key_read();       //《====== 10ms一次调用按键中间层函数，根据返回键值，</span><br><span class="line">                                     //点亮不同的LED灯，全面测试按键操作是否正常</span><br><span class="line">             if (key == L_key)</span><br><span class="line">                 ........//点亮A_LED，关闭B_LED和C_LED</span><br><span class="line">             else if(key == D_key)</span><br><span class="line">                 ........//点亮B_LED，关闭A_LED和C_LED</span><br><span class="line">             else if(key == S_key)</span><br><span class="line">                 ........//点亮C_LED，关闭A_LED和B_LED</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;利用一个IO口，接一个按键，实现3功能操作：单击 + 双击 + 长按&lt;br&gt;用户基本操作定义： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短按操作：按键按下，按下时间&amp;lt;1s，属于一次短按操作
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>傅里叶变换通俗易懂的分析</title>
    <link href="https://mapan.tech/posts/1c4e.html"/>
    <id>https://mapan.tech/posts/1c4e.html</id>
    <published>2016-04-24T07:05:00.000Z</published>
    <updated>2017-12-22T23:42:08.317Z</updated>
    
    <content type="html"><![CDATA[<p>近日在知乎看到一篇神作，将傅里叶变换讲解的如此易懂。不禁想让更多的人了解下这个伟大的定理公式</p><hr><p>这篇文章的核心思想就是：</p><p>要让读者在不看任何数学公式的情况下理解傅里叶分析。<br>傅里叶分析不仅仅是一个数学工具，更是一种可以彻底颠覆一个人以前世界观的思维模式。但不幸的是，傅里叶分析的公式看起来太复杂了，所以很多大一新生上来就懵圈并从此对它深恶痛绝。老实说，这么有意思的东西居然成了大学里的杀手课程，不得不归咎于编教材的人实在是太严肃了。（您把教材写得好玩一点会死吗？会死吗？）所以我一直想写一个有意思的文章来解释傅里叶分析，有可能的话高中生都能看懂的那种。所以，不管读到这里的您从事何种工作，我保证您都能看懂，并且一定将体会到通过傅里叶分析看到世界另一个样子时的快感。至于对于已经有一定基础的朋友，也希望不要看到会的地方就急忙往后翻，仔细读一定会有新的发现。</p><hr><p>以上是定场诗</p><p>下面进入正题：</p><p>抱歉，还是要啰嗦一句：其实学习本来就不是易事，我写这篇文章的初衷也是希望大家学习起来更加轻松，充满乐趣。但是千万！千万不要把这篇文章收藏起来，或是存下地址，心里想着：以后有时间再看。这样的例子太多了，也许几年后你都没有再打开这个页面。无论如何，耐下心，读下去。这篇文章要比读课本要轻松、开心得多……<br>p.s.本文无论是cos还是sin，都统一用“正弦波”<em>(Sine Wave)</em>一词来代表简谐波。</p><h1 id="一、什么是频域"><a href="#一、什么是频域" class="headerlink" title="一、什么是频域"></a>一、什么是频域</h1><p>从我们出生，我们看到的世界都以时间贯穿，股票的走势、人的身高、汽车的轨迹都会随着时间发生改变。这种以时间作为参照来观察动态世界的方法我们称其为时域分析。而我们也想当然的认为，世间万物都在随着时间不停的改变，并且永远不会静止下来。但如果我告诉你，用另一种方法来观察世界的话，你会发现世界是永恒不变的，你会不会觉得我疯了？我没有疯，这个静止的世界就叫做频域。</p><p>先举一个公式上并非很恰当，但意义上再贴切不过的例子：</p><p>在你的理解中，一段音乐是什么呢？<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktcso0j30go05m74s.jpg" alt></p><p>这是我们对音乐最普遍的理解，一个随着时间变化的震动。但我相信对于乐器小能手们来说，音乐更直观的理解是这样的：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktad4bj30fh03mgm8.jpg" alt></p><p>好的！下课，同学们再见。</p><p>是的，其实这一段写到这里已经可以结束了。上图是音乐在时域的样子，而下图则是音乐在频域的样子。所以频域这一概念对大家都从不陌生，只是从来没意识到而已。</p><p>现在我们可以回过头来重新看看一开始那句痴人说梦般的话：世界是永恒的。</p><p>将以上两图简化：</p><p>时域：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kt93idj305k032dfs.jpg" alt></p><p>频域：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktagl5j303t05jdfo.jpg" alt></p><p> 在时域，我们观察到钢琴的琴弦一会上一会下的摆动，就如同一支股票的走势；而在频域，只有那一个永恒的音符。</p><p>所以</p><p>你眼中看似落叶纷飞变化无常的世界，实际只是躺在上帝怀中一份早已谱好的乐章。</p><p>抱歉，这不是一句鸡汤文，而是黑板上确凿的公式：傅里叶同学告诉我们，任何周期函数，都可以看作是不同振幅，不同相位正弦波的叠加。在第一个例子里我们可以理解为，利用对不同琴键不同力度，不同时间点的敲击，可以组合出任何一首乐曲。</p><p>而贯穿时域与频域的方法之一，就是传中说的傅里叶分析。傅里叶分析可分为傅里叶级数<em>（Fourier Serie）</em>和傅里叶变换<em>(Fourier Transformation)</em>，我们从简单的开始谈起。</p><h1 id="二、傅里叶级数-Fourier-Series-的频谱"><a href="#二、傅里叶级数-Fourier-Series-的频谱" class="headerlink" title="二、傅里叶级数(Fourier Series)的频谱"></a>二、傅里叶级数<em>(Fourier Series)</em>的频谱</h1><p>还是举个栗子并且有图有真相才好理解。如果我说我能用前面说的正弦曲线波叠加出一个带90度角的矩形波来，你会相信吗？你不会，就像当年的我一样。但是看看下图： </p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kvu5r1j30go0cu40u.jpg" alt></p><p>第一幅图是一个郁闷的正弦波<script type="math/tex">cos(x)</script></p><p>第二幅图是2个卖萌的正弦波的叠加<script type="math/tex">cos(x)+a \cdot cos(3x)</script></p><p>第三幅图是4个发春的正弦波的叠加</p><p>第四幅图是10个便秘的正弦波的叠加</p><p>随着正弦波数量逐渐的增长，他们最终会叠加成一个标准的矩形，大家从中体会到了什么道理？（只要努力，弯的都能掰直！）</p><p>随着叠加的递增，所有正弦波中上升的部分逐渐让原本缓慢增加的曲线不断变陡，而所有正弦波中下降的部分又抵消了上升到最高处时继续上升的部分使其变为水平线。一个矩形就这么叠加而成了。但是要多少个正弦波叠加起来才能形成一个标准90度角的矩形波呢？不幸的告诉大家，答案是无穷多个。（上帝：我能让你们猜着我？）</p><p>不仅仅是矩形，你能想到的任何波形都是可以如此方法用正弦波叠加起来的。这是没 有接触过傅里叶分析的人在直觉上的第一个难点，但是一旦接受了这样的设定，游戏就开始有意思起来了。</p><p>还是上图的正弦波累加成矩形波，我们换一个角度来看看：</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kvldckj30fk0p2adk.jpg" alt></p><p>在这几幅图中，最前面黑色的线就是所有正弦波叠加而成的总和，也就是越来越接近矩形波的那个图形。而后面依不同颜色排列而成的正弦波就是组合为矩形波的各个分量。这些正弦波按照频率从低到高从前向后排列开来，而每一个波的振幅都是不同的。一定有细心的读者发现了，每两个正弦波之间都还有一条直线，那并不是分割线，而是振幅为0的正弦波！也就是说，为了组成特殊的曲线，有些正弦波成分是不需要的。</p><p>这里，不同频率的正弦波我们称为频率分量。好了，关键的地方来了！！</p><p>如果我们把第一个频率最低的频率分量看作“1”，我们就有了构建频域的最基本单元。对于我们最常见的有理数轴，数字“1”就是有理数轴的基本单元。</p><p>时域的基本单元就是“1秒”，如果我们将一个角频率为的正弦波<script type="math/tex">cos(ωt)</script>看作基础，那么频域的基本单元就是<script type="math/tex">ω0</script>。</p><p>有了“1”，还要有“0”才能构成世界，那么频域的“0”是什么呢？<script type="math/tex">cos(0t)</script>就是一个周期无限长的正弦波，也就是一条直线！所以在频域，0频率也被称为直流分量，在傅里叶级数的叠加中，它仅仅影响全部波形相对于数轴整体向上或是向下而不改变波的形状。</p><p>接下来，让我们回到初中，回忆一下已经死去的八戒，啊不，已经死去的老师是怎么定义正弦波的吧。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kti06ag30fk05lmxo.gif" alt><br>正弦波就是一个圆周运动在一条直线上的投影。所以频域的基本单元也可以理解为一个始终在旋转的圆<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kxgmrlg3074074tha.gif" alt><br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kx7a41g3074074ahb.gif" alt></p><p>介绍完了频域的基本组成单元，我们就可以看一看一个矩形波，在频域里的另一个模样了：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kt9yf8j30go0btweq.jpg" alt><br>这是什么奇怪的东西？</p><p>这就是矩形波在频域的样子，是不是完全认不出来了？教科书一般就给到这里然后留给了读者无穷的遐想，以及无穷的吐槽，其实教科书只要补一张图就足够了：频域图像，也就是俗称的频谱，就是——<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktr5gsj30go07iwfz.jpg" alt></p><p>再清楚一点：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kvar89j30go0a1dhq.jpg" alt><br>可以发现，在频谱中，偶数项的振幅都是0，也就对应了图中的彩色直线。振幅为0的正弦波。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kx1y19g308c06ogsv.gif" alt></p><p>老实说，在我学傅里叶变换时，维基的这个图还没有出现，那时我就想到了这种表达方法，而且，后面还会加入维基没有表示出来的另一个谱——相位谱。但是在讲相位谱之前，我们先回顾一下刚刚的这个例子究竟意味着什么。记得前面说过的那句“世界是静止的”吗？估计好多人对这句话都已经吐槽半天了。想象一下，世界上每一个看似混乱的表象，实际都是一条时间轴上不规则的曲线，但实际这些曲线都是由这些无穷无尽的正弦波组成。我们看似不规律的事情反而是规律的正弦波在时域上的投影，而正弦波又是一个旋转的圆在直线上的投影。那么你的脑海中会产生一个什么画面呢？我们眼中的世界就像皮影戏的大幕布，幕布的后面有无数的齿轮，大齿轮带动小齿轮，小齿轮再带动更小的。在最外面的小齿轮上有一个小人——那就是我们自己。我们只看到这个小人毫无规律的在幕布前表演，却无法预测他下一步会去哪。而幕布后面的齿轮却永远一直那样不停的旋转，永不停歇。这样说来有些宿命论的感觉。说实话，这种对人生的描绘是我一个朋友在我们都是高中生的时候感叹的，当时想想似懂非懂，直到有一天我学到了傅里叶级数……</p><h1 id="三、傅里叶级数-Fourier-Series-的相位谱"><a href="#三、傅里叶级数-Fourier-Series-的相位谱" class="headerlink" title="三、傅里叶级数(Fourier Series)的相位谱"></a>三、傅里叶级数<em>(Fourier Series)</em>的相位谱</h1><p>上一章的关键词是：从侧面看。这一章的关键词是：从下面看。</p><p>在这一章最开始，我想先回答很多人的一个问题：傅里叶分析究竟是干什么用的？这段相对比较枯燥，已经知道了的同学可以直接跳到下一个分割线。</p><p>先说一个最直接的用途。无论听广播还是看电视，我们一定对一个词不陌生——频道。频道频道，就是频率的通道，不同的频道就是将不同的频率作为一个通道来进行信息传输。下面大家尝试一件事：</p><p>先在纸上画一个<script type="math/tex">sin(x)</script>，不一定标准，意思差不多就行。不是很难吧。</p><p>好，接下去画一个<script type="math/tex">sin(3x)+sin(5x)</script>的图形。</p><p>别说标准不标准了，曲线什么时候上升什么时候下降你都不一定画的对吧？</p><p>好，画不出来不要紧，我把 <script type="math/tex">sin(3x)+sin(5x)</script>的曲线给你，但是前提是你不知道这个曲线的方程式，现在需要你把<script type="math/tex">sin(5x)</script> 给我从图里拿出去，看看剩下的是什么。这基本是不可能做到的。</p><p>但是在频域呢？则简单的很，无非就是几条竖线而已。</p><p>所以很多在时域看似不可能做到的数学操作，在频域相反很容易。这就是需要傅里叶变换的地方。尤其是从某条曲线中去除一些特定的频率成分，这在工程上称为滤波，是信号处理最重要的概念之一，只有在频域才能轻松的做到。</p><p>再说一个更重要，但是稍微复杂一点的用途——求解微分方程。(这段有点难度，看不懂的可以直接跳过这段)微分方程的重要性不用我过多介绍了。各行各业都用的到。但是求解微分方程却是一件相当麻烦的事情。因为除了要计算加减乘除，还要计算微分积分。而傅里叶变换则可以让微分和积分在频域中变为乘法和除法，大学数学瞬间变小学算术有没有。</p><p>傅里叶分析当然还有其他更重要的用途，我们随着讲随着提。</p><p>下面我们继续说相位谱：</p><p>通过时域到频域的变换，我们得到了一个从侧面看的频谱，但是这个频谱并没有包含时域中全部的信息。因为频谱只代表每一个对应的正弦波的振幅是多少，而没有提到相位。基础的正弦波<script type="math/tex">A·sin(ωt+θ)</script>中，振幅，频率，相位缺一不可，不同相位决定了波的位置，所以对于频域分析，仅仅有频谱（振幅谱）是不够的，我们还需要一个相位谱。那么这个相位谱在哪呢？我们看下图，这次为了避免图片太混乱，我们用7个波叠加的图。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kw2a66j30go0huq60.jpg" alt><br>鉴于正弦波是周期的，我们需要设定一个用来标记正弦波位置的东西。在图中就是那些小红点。小红点是距离频率轴最近的波峰，而这个波峰所处的位置离频率轴有多远呢？为了看的更清楚，我们将红色的点投影到下平面，投影点我们用粉色点来表示。当然，这些粉色的点只标注了波峰距离频率轴的距离，并不是相位。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kvektqj30go0fs40y.jpg" alt><br>这里需要纠正一个概念：时间差并不是相位差。如果将全部周期看作2π或者360度的话，相位差则是时间差在一个周期中所占的比例。我们将时间差除周期再乘2π，就得到了相位差。</p><p>在完整的立体图中，我们将投影得到的时间差依次除以所在频率的周期，就得到了最下面的相位谱。所以，频谱是从侧面看，相位谱是从下面看。下次偷看女生裙底被发现的话，可以告诉她：“对不起，我只是想看看你的相位谱。”</p><p>注意到，相位谱中的相位除了0，就是π。因为<script type="math/tex">cos(t+π)=-cos(t)</script>，所以实际上相位为π的波只是上下翻转了而已。对于周期方波的傅里叶级数，这样的相位谱已经是很简单的了。另外值得注意的是，由于<script type="math/tex">cos(t+2π)=cos(t)</script>，所以相位差是周期的，π和3π，5π，7π都是相同的相位。人为定义相位谱的值域为<script type="math/tex">(-π，π]</script>，所以图中的相位差均为π。</p><p>最后来一张大集合：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kv2b83j30go0dtjuh.jpg" alt></p><h1 id="四、傅里叶变换-Fourier-Transformation"><a href="#四、傅里叶变换-Fourier-Transformation" class="headerlink" title="四、傅里叶变换(Fourier Transformation)"></a>四、傅里叶变换<em>(Fourier Transformation)</em></h1><p>相信通过前面三章，大家对频域以及傅里叶级数都有了一个全新的认识。但是文章在一开始关于钢琴琴谱的例子我曾说过，这个栗子是一个公式错误，但是概念典型的例子。所谓的公式错误在哪里呢？</p><p>傅里叶级数的本质是将一个周期的信号分解成无限多分开的（离散的）正弦波，但是宇宙似乎并不是周期的。曾经在学数字信号处理的时候写过一首打油诗：</p><p>往昔连续非周期，</p><p>回忆周期不连续，</p><p>任你ZT、DFT，</p><p>还原不回去。</p><p>（请无视我渣一样的文学水平……）</p><p>在这个世界上，有的事情一期一会，永不再来，并且时间始终不曾停息地将那些刻骨铭心的往昔连续的标记在时间点上。但是这些事情往往又成为了我们格外宝贵的回忆，在我们大脑里隔一段时间就会周期性的蹦出来一下，可惜这些回忆都是零散的片段，往往只有最幸福的回忆，而平淡的回忆则逐渐被我们忘却。因为，往昔是一个连续的非周期信号，而回忆是一个周期离散信号。</p><p>是否有一种数学工具将连续非周期信号变换为周期离散信号呢？抱歉，真没有。</p><p>比如傅里叶级数，在时域是一个周期且连续的函数，而在频域是一个非周期离散的函数。这句话比较绕嘴，实在看着费事可以干脆回忆第一章的图片。</p><p>而在我们接下去要讲的傅里叶变换，则是将一个时域非周期的连续信号，转换为一个在频域非周期的连续信号。</p><p>算了，还是上一张图方便大家理解吧：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktrcltj30go08bglz.jpg" alt><br>或者我们也可以换一个角度理解：傅里叶变换实际上是对一个周期无限大的函数进行傅里叶变换。</p><p>所以说，钢琴谱其实并非一个连续的频谱，而是很多在时间上离散的频率，但是这样的一个贴切的比喻真的是很难找出第二个来了。</p><p>因此在傅里叶变换在频域上就从离散谱变成了连续谱。那么连续谱是什么样子呢？</p><p>你见过大海么？<br>为了方便大家对比，我们这次从另一个角度来看频谱，还是傅里叶级数中用到最多的那幅图，我们从频率较高的方向看。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kuk2pej30go07zwg3.jpg" alt><br>以上是离散谱，那么连续谱是什么样子呢？</p><p>尽情的发挥你的想象，想象这些离散的正弦波离得越来越近，逐渐变得连续……</p><p>直到变得像波涛起伏的大海：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kvqnnvj30go08sdih.jpg" alt><br>很抱歉，为了能让这些波浪更清晰的看到，我没有选用正确的计算参数，而是选择了一些让图片更美观的参数，不然这图看起来就像屎一样了。</p><p>不过通过这样两幅图去比较，大家应该可以理解如何从离散谱变成了连续谱的了吧？原来离散谱的叠加，变成了连续谱的累积。所以在计算上也从求和符号变成了积分符号。</p><p>不过，这个故事还没有讲完，接下去，我保证让你看到一幅比上图更美丽壮观的图片，但是这里需要介绍到一个数学工具才能然故事继续，这个工具就是——</p><h1 id="五、宇宙耍帅第一公式：欧拉公式"><a href="#五、宇宙耍帅第一公式：欧拉公式" class="headerlink" title="五、宇宙耍帅第一公式：欧拉公式"></a>五、宇宙耍帅第一公式：欧拉公式</h1><p>虚数i这个概念大家在高中就接触过，但那时我们只知道它是-1的平方根，可是它真正的意义是什么呢?<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktp9yrj30go03c74b.jpg" alt></p><p>这里有一条数轴，在数轴上有一个红色的线段，它的长度是1。当它乘以3的时候，它的长度发生了变化，变成了蓝色的线段，而当它乘以-1的时候，就变成了绿色的线段，或者说线段在数轴上围绕原点旋转了180度。</p><p>我们知道乘-1其实就是乘了两次 i使线段旋转了180度，那么乘一次 i 呢——答案很简单——旋转了90度。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktso31j30go09i3yz.jpg" alt><br>同时，我们获得了一个垂直的虚数轴。实数轴与虚数轴共同构成了一个复数的平面，也称复平面。这样我们就了解到，乘虚数i的一个功能——旋转。</p><p>现在，就有请宇宙第一耍帅公式欧拉公式隆重登场——</p><script type="math/tex; mode=display">e^{ix}=cosx+i sinx</script><p>这个公式在数学领域的意义要远大于傅里叶分析，但是乘它为宇宙第一耍帅公式是因为它的特殊形式——当x等于π的时候。</p><script type="math/tex; mode=display">e^{i\pi}+1=0</script><p>经常有理工科的学生为了跟妹子表现自己的学术功底，用这个公式来给妹子解释数学之美：”石榴姐你看，这个公式里既有自然底数e，自然数1和0，虚数i还有圆周率π，它是这么简洁，这么美丽啊！“但是姑娘们心里往往只有一句话：”臭屌丝……”</p><p>这个公式关键的作用，是将正弦波统一成了简单的指数形式。我们来看看图像上的涵义：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kuskyhj30go08bmz7.jpg" alt><br>欧拉公式所描绘的，是一个随着时间变化，在复平面上做圆周运动的点，随着时间的改变，在时间轴上就成了一条螺旋线。如果只看它的实数部分，也就是螺旋线在左侧的投影，就是一个最基础的余弦函数。而右侧的投影则是一个正弦函数。</p><h1 id="六、指数形式的傅里叶变换"><a href="#六、指数形式的傅里叶变换" class="headerlink" title="六、指数形式的傅里叶变换"></a>六、指数形式的傅里叶变换</h1><p>有了欧拉公式的帮助，我们便知道：正弦波的叠加，也可以理解为螺旋线的叠加在实数空间的投影。而螺旋线的叠加如果用一个形象的栗子来理解是什么呢？</p><p>光波</p><p>高中时我们就学过，自然光是由不同颜色的光叠加而成的，而最著名的实验就是牛顿师傅的三棱镜实验：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktp1knj307p04uwef.jpg" alt><br> 所以其实我们在很早就接触到了光的频谱，只是并没有了解频谱更重要的意义。</p><p>但不同的是，傅里叶变换出来的频谱不仅仅是可见光这样频率范围有限的叠加，而是频率从0到无穷所有频率的组合。</p><p>这里，我们可以用两种方法来理解正弦波：</p><p>第一种前面已经讲过了，就是螺旋线在实轴的投影。</p><p>另一种需要借助欧拉公式的另一种形式去理解：</p><script type="math/tex; mode=display">e^{it}=cos(t)+i\cdot sin(t)</script><script type="math/tex; mode=display">e^{-it}=cos(t)-i\cdot sin(t)</script><p>   将以上两式相加再除2，得到：</p><script type="math/tex; mode=display">cos(t)=\frac{e^{it}+e^{-it}}{2}</script><p> 这个式子可以怎么理解呢？</p><p>我们刚才讲过，<script type="math/tex">e^{it}</script>可以理解为一条逆时针旋转的螺旋线，那么<script type="math/tex">e^{-it}</script>则可以理解为一条顺时针旋转的螺旋线。而<script type="math/tex">cos(t)</script>则是这两条旋转方向不同的螺旋线叠加的一半，因为这两条螺旋线的虚数部分相互抵消掉了！</p><p>举个例子的话，就是极化方向不同的两束光波，磁场抵消，电场加倍。</p><p>这里，逆时针旋转的我们称为正频率，而顺时针旋转的我们称为负频率（注意不是复频率）。</p><p>好了，刚才我们已经看到了大海——连续的傅里叶变换频谱，现在想一想，连续的螺旋线会是什么样子：</p><p>想象一下再往下翻：</p><p>|</p><p>|</p><p>|</p><p>|</p><p>|</p><p>|</p><p>|</p><p>|</p><p>|<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41kw8rq0j30j60ev0ws.jpg" alt><br>是不是很漂亮？</p><p>你猜猜，这个图形在时域是什么样子？<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ktm26sj30go0d3t8t.jpg" alt><br>哈哈，是不是觉得被狠狠扇了一个耳光。数学就是这么一个把简单的问题搞得很复杂的东西。</p><p>顺便说一句，那个像大海螺一样的图，为了方便观看，我仅仅展示了其中正频率的部分，负频率的部分没有显示出来。</p><p>如果你认真去看，海螺图上的每一条螺旋线都是可以清楚的看到的，每一条螺旋线都有着不同的振幅（旋转半径），频率（旋转周期）以及相位。而将所有螺旋线连成平面，就是这幅海螺图了。</p><p>好了，讲到这里，相信大家对傅里叶变换以及傅里叶级数都有了一个形象的理解了，我们最后用一张图来总结一下：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl41ku7nwrj30go0r80ul.jpg" alt></p><blockquote><p>原文链接：<a href="https://zhuanlan.zhihu.com/p/19763358" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/19763358</a><br>作者：<a href="https://www.zhihu.com/people/Erdnussoelbearbeiter/activities" target="_blank" rel="noopener">韩 昊</a><br>微 博：<a href="http://weibo.com/u/1828977560" target="_blank" rel="noopener">@花生油工人</a><br>知乎专栏：<a href="https://zhuanlan.zhihu.com/wille" target="_blank" rel="noopener">与时间无关的故事</a><br>谨以此文献给大连海事大学的吴楠老师，柳晓鸣老师，王新年老师以及张晶泊老师。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;近日在知乎看到一篇神作，将傅里叶变换讲解的如此易懂。不禁想让更多的人了解下这个伟大的定理公式&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这篇文章的核心思想就是：&lt;/p&gt;
&lt;p&gt;要让读者在不看任何数学公式的情况下理解傅里叶分析。&lt;br&gt;傅里叶分析不仅仅是一个数学工具，更是一种可以彻底颠覆一个人
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>支撑起世界的十大算法</title>
    <link href="https://mapan.tech/posts/28b5.html"/>
    <id>https://mapan.tech/posts/28b5.html</id>
    <published>2016-04-06T14:08:00.000Z</published>
    <updated>2017-10-03T06:55:07.745Z</updated>
    
    <content type="html"><![CDATA[<p>如果对算法有所了解，读这篇文章时你可能会问“作者知道算法为何物吗？”，或是“Facebook的‘信息流’(News Feed)算是一种算法吗？”，如果“信息流”是算法，那就可以把所有事物都归结为一种算法。</p><p>接下来我试着解释一下算法是什么，又是哪些算法正在主导我们的世界。</p><p>什么是算法？</p><p>简而言之，任何定义明确的计算步骤都可称为算法，接受一个或一组值为输入，输出一个或一组值。(来源：homas H. Cormen, Chales E. Leiserson 《算法导论第3版》)</p><p>可以这样理解，算法是用来解决特定问题的一系列步骤（不仅计算机需要算法，我们在日常生活中也在使用算法）。算法必须具备如下3个重要特性：</p><ul><li><p>1.有穷性，执行有限步骤后，算法必须中止。</p></li><li><p>2.确切性，算法的每个步骤都必须确切定义。</p></li><li><p>3.可行性，特定算法须可以在特定的时间内解决特定问题，</p></li></ul><p>其实，算法虽然广泛应用在计算机领域，但却完全源自数学。实际上，最早的数学算法可追溯到公元前1600年-Babylonians有关求因式分解和平方根的算法。那么又是哪10个计算机算法造就了我们今天的生活呢？请看下面的表单，排名不分先后：</p><h1 id="1-归并排序-MERGE-SORT-快速排序-QUICK-SORT-和堆积排序-HEAP-SORT"><a href="#1-归并排序-MERGE-SORT-快速排序-QUICK-SORT-和堆积排序-HEAP-SORT" class="headerlink" title="1.归并排序(MERGE SORT)快速排序(QUICK SORT)和堆积排序(HEAP SORT)"></a>1.归并排序(MERGE SORT)快速排序(QUICK SORT)和堆积排序(HEAP SORT)</h1><p>哪个排序算法效率最高？这要看情况。这也就是我把3种算法放在一起讲的原因，可能你更常用其中一种，不过它们各有千秋。</p><h4 id="归并排序算法，是目前为止最重要的算法之一，是分治法的一个典型应用，由数学家John-von-Neumann于1945年发明。"><a href="#归并排序算法，是目前为止最重要的算法之一，是分治法的一个典型应用，由数学家John-von-Neumann于1945年发明。" class="headerlink" title="归并排序算法，是目前为止最重要的算法之一，是分治法的一个典型应用，由数学家John von Neumann于1945年发明。"></a>归并排序算法，是目前为止最重要的算法之一，是分治法的一个典型应用，由数学家John von Neumann于1945年发明。</h4><h4 id="快速排序算法，结合了集合划分算法和分治算法，不是很稳定，但在处理随机列阵-AM-based-arrays-时效率相当高。"><a href="#快速排序算法，结合了集合划分算法和分治算法，不是很稳定，但在处理随机列阵-AM-based-arrays-时效率相当高。" class="headerlink" title="快速排序算法，结合了集合划分算法和分治算法，不是很稳定，但在处理随机列阵(AM-based arrays)时效率相当高。"></a>快速排序算法，结合了集合划分算法和分治算法，不是很稳定，但在处理随机列阵(AM-based arrays)时效率相当高。</h4><h4 id="堆积排序，采用优先伫列机制，减少排序时的搜索时间，同样不是很稳定。"><a href="#堆积排序，采用优先伫列机制，减少排序时的搜索时间，同样不是很稳定。" class="headerlink" title="堆积排序，采用优先伫列机制，减少排序时的搜索时间，同样不是很稳定。"></a>堆积排序，采用优先伫列机制，减少排序时的搜索时间，同样不是很稳定。</h4><p>与早期的排序算法相比(如冒泡算法)，这些算法将排序算法提上了一个大台阶。也多亏了这些算法，才有今天的数据发掘，人工智能，链接分析，以及大部分网页计算工具。</p><h1 id="2-傅立叶变换和快速傅立叶变换"><a href="#2-傅立叶变换和快速傅立叶变换" class="headerlink" title="2.傅立叶变换和快速傅立叶变换"></a>2.傅立叶变换和快速傅立叶变换</h1><p>这两种算法简单，但却相当强大，整个数字世界都离不开它们，其功能是实现时间域函数与频率域函数之间的相互转化。能看到这篇文章，也是托这些算法的福。因特网，WIFI，智能机，座机，电脑，路由器，卫星等几乎所有与计算机相关的设备都或多或少与它们有关。不会这两种算法，你根本不可能拿到电子，计算机或者通信工程学位。什么是傅里叶变换？</p><h1 id="3-迪杰斯特拉算法-Dijkstra’s-algorithm"><a href="#3-迪杰斯特拉算法-Dijkstra’s-algorithm" class="headerlink" title="3.迪杰斯特拉算法 (Dijkstra’s algorithm)"></a>3.迪杰斯特拉算法 (Dijkstra’s algorithm)</h1><p>可以这样说，如果没有这种算法，因特网肯定没有现在的高效率。只要能以“图”模型表示的问题，都能用这个算法找到“图”中两个节点间的最短距离。虽然如今有很多更好的方法来解决最短路径问题，但代克思托演算法的稳定性仍无法取代。</p><h1 id="4-RSA非对称加密算法"><a href="#4-RSA非对称加密算法" class="headerlink" title="4.RSA非对称加密算法"></a>4.RSA非对称加密算法</h1><p>毫不夸张地说，如果没有这个算法对密钥学和网络安全的贡献，如今因特网的地位可能就不会如此之高。现在的网络毫无安全感，但遇到钱相关的问题时我们必需要 保证有足够的安全感，如果你觉得网络不安全，肯定不会傻乎乎地在网页上输入自己的银行卡信息。RSA算法，密钥学领域最牛叉的算法之一，由RSA公司的三位创始人提出，奠定了当今的密钥研究领域。用这个算法解决的问题简单又复杂：保证安全的情况下，如何在独立平台和用户之间分享密钥。</p><h1 id="5-哈希安全算法-Secure-Hash-Algorithm"><a href="#5-哈希安全算法-Secure-Hash-Algorithm" class="headerlink" title="5.哈希安全算法(Secure Hash Algorithm)"></a>5.哈希安全算法(Secure Hash Algorithm)</h1><p>确切地说，这不是一种算法，而是一组加密哈希函数，由美国国家标准技术研究所首先提出。无论是你的应用商店，电子邮件和杀毒软件，还是浏览器等等，都使用 这种算法来保证你正常下载，以及是否被“中间人攻击”，或者“网络钓鱼”。</p><h1 id="6-整数质因子分解算法-Integer-factorization"><a href="#6-整数质因子分解算法-Integer-factorization" class="headerlink" title="6.整数质因子分解算法(Integer factorization)"></a>6.整数质因子分解算法(Integer factorization)</h1><p>这其实是一个数学算法，不过已经广泛应用与计算机领域。如果没有这个算法，加密信息也不会如此安全。通过一系列步骤将，它可以将一个合成数分解成不可再分的数因子。很多加密协议都采用了这个算法，就比如刚提到的RSA算法。</p><h1 id="7-链接分析算法-Link-Analysis"><a href="#7-链接分析算法-Link-Analysis" class="headerlink" title="7.链接分析算法(Link Analysis)"></a>7.链接分析算法(Link Analysis)</h1><p>在因特网时代，不同入口间关系的分析至关重要。从搜索引擎和社交网站，到市场分析工具，都在不遗余力地寻找因特网的正真构造。链接分析算法一直是这个领域最让人费解的算法之一，实现方式不一，而且其本身的特性让每个实现方式的算法发生异化，不过基本原理却很相似。链接分析算法的机制其实很简单：你可以用矩阵表示一幅“图“，形成本征值问题。本征值问题可以帮助你分析这个“图”的结构，以及每个节点的权重。这个算法于1976年由Gabriel Pinski和Francis Narin提出。谁会用这个算法呢？Google的网页排名，Facebook向你发送信息流时(所以信息流不是算法，而是算法的结果)，Google+和Facebook的好友推荐功能，LinkedIn的工作推荐，Youtube的视频推荐，等等。</p><p>普遍认为Google是首先使用这类算法的机构，不过其实早在1996年(Google 问世2年前)李彦宏就创建的“RankDex”小型搜索引擎就使用了这个思路。而Hyper Search搜索算法建立者马西莫·马奇奥里也曾使用过类似的算法。这两个人都后来都成为了Google历史上的传奇人物。</p><h1 id="8-比例微积分算法-Proportional-Integral-Derivative-Algorithm"><a href="#8-比例微积分算法-Proportional-Integral-Derivative-Algorithm" class="headerlink" title="8.比例微积分算法(Proportional Integral Derivative Algorithm)"></a>8.比例微积分算法(Proportional Integral Derivative Algorithm)</h1><p>飞机，汽车，电视，手机，卫星，工厂和机器人等等事物中都有这个算法的身影。简单来讲，这个算法主要是通过“控制回路反馈机制”，减小预设输出信号与真实输出信号间的误差。只要需要信号处理，或电子系统来控制自动化机械，液压和加热系统，都需要用到这个算个法。没有它，就没有现代文明。<a href="http://blog.mapan.win/2016/01/26/003/" target="_blank">什么是PID算法</a></p><h1 id="9-数据压缩算法"><a href="#9-数据压缩算法" class="headerlink" title="9.数据压缩算法"></a>9.数据压缩算法</h1><p>数据压缩算法有很多种，哪种最好？这要取决于应用方向，压缩mp3，JPEG和MPEG-2文件都不一样。哪里能见到它们？不仅仅是文件夹中的压缩文件。你正在看的这个网页就是使用数据压缩算法将信息下载到你的电脑上。除文字外，游戏，视频，音乐，数据储存，云计算等等都是。它让各种系统更轻松，效率更高。</p><h1 id="10-随机数生成算法"><a href="#10-随机数生成算法" class="headerlink" title="10.随机数生成算法"></a>10.随机数生成算法</h1><p>到如今，计算机还没有办法生成“正真的”随机数，但伪随机数生成算法就足够了。这些算法在许多领域都有应用，如网络连接，加密技术，安全哈希算法，网络游戏，人工智能，以及问题分析中的条件初始化。<br>(本文转自网络)</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;如果对算法有所了解，读这篇文章时你可能会问“作者知道算法为何物吗？”，或是“Facebook的‘信息流’(News
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>51单片机与PC通信方法总结</title>
    <link href="https://mapan.tech/posts/d48d.html"/>
    <id>https://mapan.tech/posts/d48d.html</id>
    <published>2016-02-02T02:44:00.000Z</published>
    <updated>2017-10-03T06:55:07.939Z</updated>
    
    <content type="html"><![CDATA[<p>51单片机的串口，是个全双工的串口，发送数据的同时，还可以接收数据。<br>当串行发送完毕后，将在标志位 TI 置 1，同样，当收到了数据后，也会在 RI 置 1。</p><p> 无论 RI 或 TI 出现了 1，只要串口中断处于开放状态，单片机都会进入串口中断处理程序。<br>在中断程序中，要区分出来究竟是发送引起的中断，还是接收引起的中断，然后分别进行处理。</p><p>常用的方法有：<br>    接收数据时，使用“中断方式”，清除 RI 后，用一个变量通知主函数，收到新数据。<br>    发送数据时，也用“中断方式”，清除 TI 后，用另一个变量通知主函数，数据发送完毕。<br>    这样一来，收、发两者基本一致，编写程序也很规范、易懂。<br>    更重要的是，主函数中，不用在那儿死等发送完毕，可以有更多的时间查看其它的标志。<br>PC与单片机串口通信的程序，要求如下：<br>    1、如果在电脑上发送以$开始的字符串，则将整个字符串原样返回（字符串长度不是固定的）。<br>    2、如果接收到1，则将P00置高电平，接收到0，P10置低电平。（用来控制一个LED）<br>单片机是STC89C52RC/晶振11.0592/波特率要求是9600或4800。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#include &amp;amp;lt;reg52.h&amp;amp;gt;</span><br><span class="line">sbit LED = P0^0;</span><br><span class="line">unsigned char UART_buff;</span><br><span class="line">bit New_rec = 0, Send_ed = 1, Money = 0;</span><br><span class="line">void main ()</span><br><span class="line">&#123;</span><br><span class="line">    SCON = 0x50; //串口方式1, 10位UART（一个起始位“0”八个数据位一个停止位“1”）, 允许接收.</span><br><span class="line">    TMOD = 0x20; //T1方式2</span><br><span class="line">    TH1 = 0xFD; //装入自动重加载的处置，9600bps@11.0592MHz</span><br><span class="line">    TL1 = 0xFD; //装入初值</span><br><span class="line">    TR1 = 1; //启动定时器</span><br><span class="line">    T1ES = 1; //开串口中断，但不开定时器中断，不允许定时器中断</span><br><span class="line">    EA = 1;</span><br><span class="line">    while(Money == 0); //等着交费，呵呵，等着接收$.</span><br><span class="line">    while(1)</span><br><span class="line">    &#123;</span><br><span class="line">    if ((New_rec == 1) &amp;amp;amp;&amp;amp;amp; (Send_ed == 1))</span><br><span class="line">        &#123;               </span><br><span class="line">            SBUF = UART_buff; //那就发送.</span><br><span class="line">            New_rec = 0;</span><br><span class="line">            Send_ed = 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//----------------------------------------------</span><br><span class="line">void ser_int() interrupt 4</span><br><span class="line">&#123;</span><br><span class="line">    if(RI == 1) //如果收到.</span><br><span class="line">    &#123;</span><br><span class="line">        RI = 0; //清除标志.</span><br><span class="line">        New_rec = 1;</span><br><span class="line">        UART_buff = SBUF; //接收.</span><br><span class="line">        if(UART_buff == &apos;1&apos;)</span><br><span class="line">            LED = 1;</span><br><span class="line">        if(UART_buff == &apos;0&apos;)</span><br><span class="line">            LED = 0;</span><br><span class="line">        if(UART_buff == &apos;$&apos;)</span><br><span class="line">            Money = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else //如果送毕.</span><br><span class="line">    &#123;</span><br><span class="line">        TI = 0; //清除标志.</span><br><span class="line">        Send_ed = 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;51单片机的串口，是个全双工的串口，发送数据的同时，还可以接收数据。&lt;br&gt;当串行发送完毕后，将在标志位 TI 置 1，同样，当收到了数据后，也会在 RI 置 1。&lt;/p&gt;
&lt;p&gt; 无论 RI 或 TI 出现了
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于51单片机的万年历『2』</title>
    <link href="https://mapan.tech/posts/d091.html"/>
    <id>https://mapan.tech/posts/d091.html</id>
    <published>2015-12-04T03:20:00.000Z</published>
    <updated>2017-11-04T13:06:00.349Z</updated>
    
    <content type="html"><![CDATA[<p>相比<a href="http://localhost:4000/2015/08/06/038/" target="_blank" rel="noopener">第一版</a>，升级了屏幕和功能。使用LCD12864屏幕。某宝有卖，下面的电路板是手工制作的，为了能与LCD匹配，大小我特意制作的和LCD屏幕一样大。安装好显得刚刚好<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40txyo1rj30hs0axdi0.jpg" alt></p><p>从中间角度看</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tzg0k4j30c00sqdjj.jpg" alt></p><p>前面留有micro-USB供电接口和下载程序排针接口。普通安卓数据线就可以供电了。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40u0rc5yj30t30endlf.jpg" alt></p><p>首先用电脑画出印刷电路板的样图，花了一个下午的时间。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tztp3qj30hs0dh426.jpg" alt></p><p>转印到覆铜板，准备腐蚀，用了一个饭盒，是透明的。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40ty080uj30qo0k0di8.jpg" alt></p><p>加入沸水，只需要三五分钟 即可腐蚀完成。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40ty9nhvj30hs0dcgod.jpg" alt></p><p>腐蚀完毕，捞出来擦干，打磨掉走线上的墨粉<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40u1rojuj30hs0cr0us.jpg" alt></p><p>下面打孔，由于用了贴片元件，因此减少了很多过孔。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tycybsj30hs0hzgnn.jpg" alt></p><p>手工焊接贴片元件是比较困难的。所以首先焊接贴片芯片，焊接前要在焊盘上镀一层焊锡，这样容易焊接<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tz15rkj30hs0dcdih.jpg" alt></p><p>焊接完成，使用万用表蜂鸣档测试，没有虚焊和连锡。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40u0cpf9j30hs0dc77f.jpg" alt></p><p>焊接基本完成，为了防止走线氧化，我把铜线上镀了一层锡。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tyz0wsj30dc0hsq5s.jpg" alt></p><p>然后就是很长很长的代码要写，</p><hr><p>省略三千行代码先</p><p>在坛友提供的资料和程序中调试良久，程序终于适配了我的硬件</p><p>欣赏<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40txli5dj30f409gq44.jpg" alt></p><p>这个兔斯基是我在百度上搜索的图片，然后用PS修出细致轮廓。再用软件转成代码，写到程序里面。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40ty9066j30c80hsgn1.jpg" alt></p><p>同样 ，这个也是。只是感觉挺可爱的，正好大小也合适，所以就选择了这个图<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40txk2p6j30d00hsmyf.jpg" alt></p><p>下图为节日提醒功能。支持节日自定义（农历阳历均可）。<br>方法：在程序相应代码段添加相应代码即可<br>其中农历是完全靠算法实现的，没有使用专业芯片<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40ty4hy3j30hs09pq4b.jpg" alt></p><p>开机启动界面<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tym453j30ak0hsq48.jpg" alt></p><p>大字体模式一<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tzduhfj30hs0cbjss.jpg" alt></p><p>大字体模式二<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tzsf36j30hs0ceac0.jpg" alt></p><p>正常模式<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tzsdsxj30hs0butak.jpg" alt><br>设置界面<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40u0709fj30hs0bq0uf.jpg" alt></p><p>闹钟设置界面<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40tzwta8j30hs0aqdgn.jpg" alt></p><h2 id="视频效果"><a href="#视频效果" class="headerlink" title="视频效果"></a>视频效果</h2><p><div id="dplayer6" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer6"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/43564226_42e1c00d198b33894ea7295fd41af0b4_5237259cc634_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>``</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;相比&lt;a href=&quot;http://localhost:4000/2015/08/06/038/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>立体旋转显示LED屏</title>
    <link href="https://mapan.tech/posts/8258.html"/>
    <id>https://mapan.tech/posts/8258.html</id>
    <published>2015-11-23T04:16:00.000Z</published>
    <updated>2017-11-04T08:55:40.740Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个旋转的屏幕。黄色的电路板上有32个贴片LED灯。</p><p>侧面有16个贴片LED灯。</p><p>当电路板转起来的时候，通过MCU控制不同灯的亮灭来显示不同的字体或图案。</p><p>利用了我们人眼的视觉暂留效应，才能让我们看起来是一个平面。<br>由于是早期制作的（14年），制作期间还没有本博客，所以制作时候并记录制作过程</p><h3 id="成品图"><a href="#成品图" class="headerlink" title="成品图"></a>成品图</h3><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40spin61j310a0r8jyk.jpg" alt></p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40sq15dbj310a0r8gub.jpg" alt></p><h3 id="静态图"><a href="#静态图" class="headerlink" title="静态图"></a>静态图</h3><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40sq0dmcj310a0r8n7r.jpg" alt></p><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><div id="dplayer5" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer5"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/68890277_152004b39729cb8a804ef60a645cbdeb_4dd4c3b7eb93_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>上面的字都可以修改的，大约可以显示120个字左右。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是一个旋转的屏幕。黄色的电路板上有32个贴片LED灯。&lt;/p&gt;
&lt;p&gt;侧面有16个贴片LED灯。&lt;/p&gt;
&lt;p&gt;当电路板转起来的时候，通过MCU控制不同灯的亮灭来显示不同的字体或图案。&lt;/p&gt;
&lt;p&gt;利用了我们人眼的视觉暂留效应，才能让我们看起来是一个平面。&lt;br&gt;由于是
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CUBE 8 光立方制作</title>
    <link href="https://mapan.tech/posts/4dd6.html"/>
    <id>https://mapan.tech/posts/4dd6.html</id>
    <published>2015-10-28T05:27:00.000Z</published>
    <updated>2017-11-04T08:55:01.917Z</updated>
    
    <content type="html"><![CDATA[<p>千呼万唤始出来,计划了良久而又一拖再拖的光立方终于在今天完工了。前前后后花了大概一周的时间。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qaexqxj30hs0dcadw.jpg" alt></p><p>下面是驱动板。纯手工制作，单面板。看起来挺美的。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qa6qp7j30hs0dcdjj.jpg" alt></p><p>刚腐蚀出来的板子，还没有打孔。是不是很精致呢</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40q9ozrlj30dc0hstc1.jpg" alt></p><p>灯的折法:</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qadcrdj30dc0hsq5a.jpg" alt></p><p>一共8层这样的。每层64个，合计512个LED</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qai3gbj30dc0hswh2.jpg" alt></p><p>还有惨不忍睹的飞线（表示做过第一个绝不会再想做第二个）</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qam33rj30dc0hrae1.jpg" alt></p><p>还有，驱动层之间的飞线</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qb016mj30hs0dc0w1.jpg" alt></p><p>看完虐心的飞线，来欣赏两张效果图平复一下心情。相信一切的付出都是值得的。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40qavh46j30dc0hsgmc.jpg" alt></p><p>是不是很唯美？</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40q9ahobj30dc0hsaan.jpg" alt></p><p>看图不过瘾？</p><p>我们欣赏视频</p><div id="dplayer4" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer4"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/50118194_304933fd445bed77c0dd0dac523a74e1_a91170b5d59b_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;千呼万唤始出来,计划了良久而又一拖再拖的光立方终于在今天完工了。前前后后花了大概一周的时间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005vwoCygy1fl40qaexqxj30hs0dcadw.jpg&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>指针万用表的使用技巧</title>
    <link href="https://mapan.tech/posts/9a17.html"/>
    <id>https://mapan.tech/posts/9a17.html</id>
    <published>2015-10-06T00:00:00.000Z</published>
    <updated>2017-11-02T12:34:19.615Z</updated>
    
    <content type="html"><![CDATA[<p>1、指针表内的电池：</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40p768osj30sg0hz77f.jpg" alt title="使用万用表的技巧"></p><p>一般有两块电池，一块低电压的1.5V，一块是高电压的9V或15V，其黑表笔相对红表笔来说是正端。数字表则常用一块6V或9V的电池。在电阻档，指针 表的表笔输出电流相对数字表来说要大很多，用R×1Ω档可以使扬声器发出响亮的“哒”声，用R×10kΩ档甚至可以点亮发光二极管（LED）。</p><p>2、指针表读取精度较差，但指针摆动的过程比较直观，其摆动速度幅度有时也能比较客观地反映了被测量的大小（比如测电视机数据总线（SDL）在传送数据时的轻微抖动）；数字表读数直观，但数字变化的过程看起来很杂乱，不太容易观看。</p><p>3、测量精度较差：</p><p>在电压档，指针表内阻相对数字表来说比较小，测量精度相比较差。某些高电压微电流的场合甚至无法测准，因为其内阻会对被测电路造成影响（比如在测电视机显 像管的加速级电压时测量值会比实际值低很多）。数字表电压档的内阻很大，至少在兆欧级，对被测电路影响很小。但极高的输出阻抗使其易受感应电压的影响，在 一些电磁干扰比较强的场合测出的数据可能是虚的。 　　总之，在相对来说大电流高电压的模拟电路测量中适用指针表，比如电视机、音响功放。在低电压小电流的数字电路测量中适用数字表，比如BP机、手机等。 不是绝对的，可根据情况选用指针表和数字表。</p><p>二、测量技巧（如不作说明，则指用的是指针表）：</p><p>1、测电容：</p><p>用电阻档，根据电容容量选择适当的量程，并注意测量时对于电解电容黑表笔要接电容正极。</p><p>①、 估测微波法级电容容量的大小：可凭经验或参照相同容量的标准电容，根据指针摆动的最大幅度来判定。所参照的电容不必耐压值也一样，只要容量相同即可，例如 估测一个100μF/250V的电容可用一个100μF/25V的电容来参照，只要它们指针摆动最大幅度一样，即可断定容量一样。</p><p>②、估测皮法级电容容量大小：要用R×10kΩ档，但只能测到1000pF以上的电容。对1000pF或稍大一点的电容，只要表针稍有摆动，即可认为容量够了。</p><p>③、 测电容是否漏电：对一千微法以上的电容，可先用R×10Ω档将其快速充电，并初步估测电容容量，然后改到R×1kΩ档继续测一会儿，这时指针不应回返，而 应停在或十分接近∞处，否则就是有漏电现象。对一些几十微法以下的定时或振荡电容（比如彩电开关电源的振荡电容），对其漏电特性要求非常高，只要稍有漏电 就不能用，这时可在R×1kΩ档充完电后再改用R×10kΩ档继续测量，同样表针应停在∞处而不应回返。</p><p>2、测喇叭、耳机、动圈式话筒：</p><p>用R×1Ω档，任一表笔接一端，另一表笔点触另一端，正常时会发出清脆响量的“哒”声。如果不响，则是线圈断了，如果响声小而尖，则是有擦圈问题，也不能用。</p><p>3、在路测二极管、三极管、稳压管好坏：</p><p>因为在实际电路中，三极管的偏置电阻或二极管、稳压管的周边电阻一般都比较大，大都在几百几千欧姆以上，这样，我们就可以用万用表的R×10Ω或R×1Ω 档来在路测量PN结的好坏。在路测量时，用R×10Ω档测PN结应有较明显的正反向特性（如果正反向电阻相差不太明显，可改用R×1Ω档来测），一般正向 电阻在R×10Ω档测时表针应指示在200Ω左右，在R×1Ω档测时表针应指示在30Ω左右（根据不同表型可能略有出入）。如果测量结果正向阻值太大或反 向阻值太小，都说明这个PN结有问题，这个管子也就有问题了。这种方法对于维修时特别有效，可以非常快速地找出坏管，甚至可以测出尚未完全坏掉但特性变坏 的管子。比如当你用小阻值档测量某个PN结正向电阻过大，如果你把它焊下来用常用的R×1kΩ档再测，可能还是正常的，其实这个管子的特性已经变坏了，不 能正常工作或不稳定了。</p><p>4、测电阻：</p><p>重要的是要选好量程，当指针指示于1/3～2/3满量程时测量精度最高，读数最准确。要注意的是，在用R×10k电阻档测兆欧级的大阻值电阻时，不可将手指捏在电阻两端，这样人体电阻会使测量结果偏小。</p><p>5 、测三极管：</p><p>通常我们要用R×1kΩ档，不管是NPN管还是PNP管，不管是小功率、中功率、大功率管，测其be结cb结都应呈现与二极管完全相同的单向导电性，反向 电阻无穷大，其正向电阻大约在10K左右。为进一步估测管子特性的好坏，必要时还应变换电阻档位进行多次测量，方法是：置R×10Ω档测PN结正向导通电 阻都在大约200Ω左右；置R×1Ω档测PN结正向导通电阻都在大约30Ω左右，（以上为47型表测得数据，其它型号表大概略有不同，可多试测几个好管总 结一下，做到心中有数）如果读数偏大太多，可以断定管子的特性不好。还可将表置于 R×10kΩ再测，耐压再低的管子（基本上三极管的耐压都在30V以上），其cb结反向电阻也应在∞，但其be结的反向电阻可能会有些，表针会稍有偏转 （一般不会超过满量程的1/3，根据管子的耐压不同而不同）。同样，在用R×10kΩ档测ec间(对NPN管）或ce间（对PNP管）的电阻时，表针可能 略有偏转，但这不表示管子是坏的。但在用R×1kΩ以下档测ce或ec间电阻时，表头指示应为无穷大，否则管子就是有问题。应该说明一点的是，以上测量是 针对硅管而言的，对锗管不适用。不过现在锗管也很少见了。另外，所说的“反向”是针对PN结而言，对NPN管和PNP管方向实际上是不同的。</p><p>现在常见的三极管大部分是塑封的，如何准确判断三极管的三只引脚哪个是b、c、e？三极管的b极很容易测出来，但怎么断定哪个是c哪个是e？这里推荐三种 方法：第一种方法：对于有测三极管hFE插孔的指针表，先测出b极后，将三极管随意插到插孔中去（当然b极是可以插准确的），测一下hFE值，然后再将管 子倒过来再测一遍，测得hFE值比较大的一次，各管脚插入的位置是正确的。第二种方法：对无hFE测量插孔的表，或管子太大不方便插入插孔的，可以用这种 方法：对NPN管，先测出b极（管子是NPN还是PNP以及其b脚都很容易测出，是吧？），将表置于R×1kΩ档，将红表笔接假设的e极（注意拿红表笔的 手不要碰到表笔尖或管脚），黑表笔接假设的c极，同时用手指捏住表笔尖及这个管脚，将管子拿起来，用你的舌尖舔一下b极，看表头指针应有一定的偏转，如果 你各表笔接得正确，指针偏转会大些，如果接得不对，指针偏转会小些，差别是很明显的。由此就可判定管子的c、e极。对PNP管，要将黑表笔接假设的e极 （手不要碰到笔尖或管脚），红表笔接假设的c极，同时用手指捏住表笔尖及这个管脚，然后用舌尖舔一下b极，如果各表笔接得正确，表头指针会偏转得比较大。 当然测量时表笔要交换一下测两次，比较读数后才能最后判定。这个方法适用于所有外形的三极管，方便实用。根据表针的偏转幅度，还可以估计出管子的放大能 力，当然这是凭经验的。第三种方法：先判定管子的NPN或PNP类型及其b极后，将表置于R×10kΩ档，对NPN管，黑表笔接e极，红表笔接c极时，表 针可能会有一定偏转，对PNP管，黑表笔接c极，红表笔接e极时，表针可能会有一定的偏转，反过来都不会有偏转。由此也可以判定三极管的c、e极。不过对 于高耐压的管子，这个方法就不适用了。</p><p>对于常见的进口型号的大功率塑封管，其c极基本都是在中间（我还没见过b在中间的）。中、小功率管有的b极可能在中间。比如常用的9014三极管及其系列 的其它型号三极管、2SC1815、2N5401、2N5551等三极管，其b极有的在就中间。当然它们也有 c极在中间的。所以在维修更换三极管时，尤其是这些小功率三极管，不可拿来就按原样直接安上，一定要先测一下。</p><p>6 、测稳压二极管：</p><p>我们通常所用到的稳压管的稳压值一般都大于1.5V，而指针表的R×1k以下的电阻档是用表内的1.5V电池供电的，这样，用R×1k以下的电阻档测量稳 压管就如同测二极管一样，具有完全的单向导电性。但指针表的R×10k档是用9V或15V电池供电的，在用R×10k测稳压值小于9V或15V的稳压管 时，反向阻值就不会是∞，而是有一定阻值，但这个阻值还是要大大高于稳压管的正向阻值的。如此，我们就可以初步估测出稳压管的好坏。但是，好的稳压管还要 有个准确的稳压值，业余条件下怎么估测出这个稳压值呢？不难，再去找一块指针表来就可以了。方法是：先将一块表置于R×10k档，其黑、红表笔分别接在稳 压管的阴极和阳极，这时就模拟出稳压管的实际工作状态，再取另一块表置于电压档V×10V或V×50V（根据稳压值）上，将红、黑表笔分别搭接到刚才那块 表的的黑、红表笔上，这时测出的电压值就基本上是这个稳压管的稳压值。说“基本上”，是因为第一块表对稳压管的偏置电流相对正常使用时的偏置电流稍小些， 所以测出的稳压值会稍偏大一点，但基本相差不大。这个方法只可估测稳压值小于指针表高压电池电压的稳压管。如果稳压管的稳压值太高，就只能用外加电源的方 法来测量了（这样看来，我们在选用指针表时，选用高压电池电压为15V的要比9V的更适用些）。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;1、指针表内的电池：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005vwoCygy1fl40p768osj30sg0hz77f.jpg&quot; alt
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>计时器制作</title>
    <link href="https://mapan.tech/posts/bcb8.html"/>
    <id>https://mapan.tech/posts/bcb8.html</id>
    <published>2015-09-08T04:00:00.000Z</published>
    <updated>2017-11-02T12:32:48.735Z</updated>
    
    <content type="html"><![CDATA[<p>这次来做一个不用电路板的制作</p><h1 id="作品欣赏"><a href="#作品欣赏" class="headerlink" title="作品欣赏"></a>作品欣赏</h1><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40lbkn5bj30ii0c8tiz.jpg" alt></p><h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><ul><li>蜂鸣器</li><li>晶振</li><li>电池盒</li><li>4位共阳极数码管</li><li>主控STC12C5A60S2</li><li>5号电池x3</li></ul><p>如下图所示，就这么几个东西<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40larcl6j30ox0ig7l6.jpg" alt></p><p>蜂鸣器直接接到P1.0和VCC上。晶振直接焊接到18、19引脚上。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40lc1f3kj30lm0gd7lf.jpg" alt></p><p>数码管和MCU”对接”<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40ldxukjj30sc0kr1h2.jpg" alt></p><p>对准位置后焊接，引脚间距都是2.54mm  [100mil]<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40lacsr8j30mz0ecnbc.jpg" alt></p><p>数码管需要共阳装，0.5英寸大小的。需要注意尺寸<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40l7yomxj30pj0afq79.jpg" alt></p><p>下载程序时候需要勾选复位脚用作IO口<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40l6kucmj30m70g7t9r.jpg" alt></p><p>最后附上原理图：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40la17gsj31120fi0ze.jpg" alt></p><hr><p>—————————————————-割—————————————————————-<br>干电池不环保，块头又大，后来就改了一个充电宝供电。<br>在某东以￥9.9/个的价格秒了几个2200mAh的充电宝，直接拆了从电池引出两根线，实测电压4.12V。充电部分没有动，可以直接用microUSB数据线对其充电。<br>单片机数据手册上标工作电压为3.3-5.5V，所以直接通过一个船型开关就接上单片机。用热熔胶把充电宝和单片机固定到一起。效果图如下：<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40lb0lavj30t40lkqd1.jpg" alt></p><p>这个定时器被我用来煮粥使用，现有一电饭煲，加米加水后定时1小时，到时间蜂鸣器会鸣响，提醒关火，防止溢出。</p><p>自从有了它，粥再也没有溢的满地都是了。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这次来做一个不用电路板的制作&lt;/p&gt;
&lt;h1 id=&quot;作品欣赏&quot;&gt;&lt;a href=&quot;#作品欣赏&quot; class=&quot;headerlink&quot; title=&quot;作品欣赏&quot;&gt;&lt;/a&gt;作品欣赏&lt;/h1&gt;&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于51单片机的万年历『1』</title>
    <link href="https://mapan.tech/posts/9491.html"/>
    <id>https://mapan.tech/posts/9491.html</id>
    <published>2015-08-06T02:00:00.000Z</published>
    <updated>2017-11-02T12:29:44.463Z</updated>
    
    <content type="html"><![CDATA[<p>大二暑假时期，制作了一个51单片机主控的万年历。</p><h3 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h3><ul><li>使用了LCD1602作为显示屏</li><li>DS18B20温度传感器</li><li>DS1302时钟芯片</li><li>主控芯片是STC89c52RC(贴片)</li><li>外围器件：点动开关、蜂鸣器、电位器等等</li></ul><p>这个是第一版成品图，用了mini版的1602显示器.<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hd1iilj30c10cudiw.jpg" alt></p><p>侧面图，底板仅仅作为加固和保护内部电路作用，无电气属性。中间用铜柱连接<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hch1k7j30dc0hugpd.jpg" alt></p><p>屏幕和电路板对比，纽扣电池给DS1302供电<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hchvx6j30d90hsjuc.jpg" alt></p><p>这个是第二版，使用了普通版的LCD1602，PCB也进行了重新优化<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hdbqbjj30hs0dagp9.jpg" alt></p><p>反面如图所示，有署名和时间，同样这版DS1302也采用贴片规格。由一对铜柱使其倾斜便于观看<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40heq3moj30i00dg7m2.jpg" alt></p><p>第二版做了两个，由于铜柱的作用，角度倾斜所以显的大小不同。除了屏幕颜色，两个完全一样。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hdlqyzj30hs0dajv3.jpg" alt></p><p>全家福<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hd7ja1j30hs0a90vc.jpg" alt></p><p>原理图<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hc7kq0j30hs09mq4m.jpg" alt></p><p>第一版PCB<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hce5m1j30gy0fdta6.jpg" alt></p><p>第二版PCB<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40hce27yj30hs05wwgq.jpg" alt></p><blockquote><p>第一版的万年历送给了一个对我有帮助的老师<br>第二版的两个：</p><ul><li>一个送给了朋友作为生日礼物</li><li>另一个放在家里  给爷爷看时间</li></ul></blockquote><p><a href="http://blog.mapan.win/posts/d091.html" target="_blank" rel="noopener">大屏升级版万年历</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;大二暑假时期，制作了一个51单片机主控的万年历。&lt;/p&gt;
&lt;h3 id=&quot;BOM&quot;&gt;&lt;a href=&quot;#BOM&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自制遥控玩具车</title>
    <link href="https://mapan.tech/posts/348d.html"/>
    <id>https://mapan.tech/posts/348d.html</id>
    <published>2015-07-25T11:45:00.000Z</published>
    <updated>2017-11-02T12:25:47.478Z</updated>
    
    <content type="html"><![CDATA[<p>看图说话<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40fa9kvrj30qw1007g0.jpg" alt></p><p>底盘使用了一块10cm x 15cm的覆铜板</p><p>另使用 两个马达减速箱作为后轮驱动。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40f8reklj30hs08jjsc.jpg" alt></p><p>加上自制的51最小系统板<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40fa0nf4j30kq0rzn4i.jpg" alt></p><p>两节18620锂电池</p><p>和一块L298N电机驱动小板<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40f9j94wj30hs07hq48.jpg" alt></p><p>一个无线键控的的小遥控<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl40f9jcf5j30hs07jta2.jpg" alt></p><p>前轮使用了室友友情赞助的乒乓球。</p><p>三轮车转向使用差速转向。</p><p>（左转：右轮转速&gt;&gt;左轮转速，右转：左轮转速&gt;&gt;右轮转速，后退就是两个轮同时倒转）</p><p>转速的控制使用脉冲宽度调制的方法，就是我们所说的PWM。现在很多单片机已经片内集成了PWM了，只需简单的程序调用即可使用。我用的单片机没有这个功能，不过通过软件实现也并非难事。</p><p>如果马力全开 速度还是挺快的，只不过L298N芯片就吃不消了，散热片比较烫手。</p><p>所以我通过程序把最高速度设定到全速的50%，这样就没有那么热了。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;看图说话&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005vwoCygy1fl40fa9kvrj30qw1007g0.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;底盘使用了一块10cm x 15cm的覆铜板&lt;/p&gt;
&lt;p&gt;另使用
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>电子四班电子相册第三弹</title>
    <link href="https://mapan.tech/posts/277.html"/>
    <id>https://mapan.tech/posts/277.html</id>
    <published>2015-07-20T05:25:00.000Z</published>
    <updated>2017-11-04T10:14:06.545Z</updated>
    
    <content type="html"><![CDATA[<p>这段小视频我们班第三学期制作的，作者是我的哥们阿黄。很棒的视频，Enjoy！</p><div id="dplayer3" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer3"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/70832301_93bdfd2963386c610fb1c9923cfa15f2_0f50d23df488_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这段小视频我们班第三学期制作的，作者是我的哥们阿黄。很棒的视频，Enjoy！&lt;/p&gt;
&lt;div id=&quot;dplayer3&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom:
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>电子四班电子相册第二弹</title>
    <link href="https://mapan.tech/posts/e0e.html"/>
    <id>https://mapan.tech/posts/e0e.html</id>
    <published>2015-07-20T05:12:00.000Z</published>
    <updated>2017-11-04T07:54:53.446Z</updated>
    
    <content type="html"><![CDATA[<p>这是大学第二学期的聚餐时候拍的照片，我用课余时间整理并剪辑制作了一个小的电子相册。希望大家能够喜欢。<br><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/101052602_d1b459a186cefdd8995cf0b3673c9bdd_8ae8cab358e2_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是大学第二学期的聚餐时候拍的照片，我用课余时间整理并剪辑制作了一个小的电子相册。希望大家能够喜欢。&lt;br&gt;&lt;div id=&quot;dplayer2&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom:
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于51单片机的心形全彩灯</title>
    <link href="https://mapan.tech/posts/b1d.html"/>
    <id>https://mapan.tech/posts/b1d.html</id>
    <published>2015-07-19T23:43:00.000Z</published>
    <updated>2017-11-04T08:54:08.180Z</updated>
    
    <content type="html"><![CDATA[<p>这是2014年做的，想要做这个已经想了很久，从构思到设计焊接完成大概花了1个多月的课余时间。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zv41ailj30hs0daadd.jpg" alt></p><p>放在我的电脑上面<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zvdqtd6j30hs0daq65.jpg" alt></p><p>特殊的<em>三层板</em>。。底层是起固定和保护作用的。最上面的小板是51的最小系统。中间的才是主要的驱动层。</p><p>再来一张正面照片</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zvjnv0lj30d90hs0vg.jpg" alt></p><p>欣赏完效果图 我就来简单说一下制作过程吧。</p><h3 id="BOM-："><a href="#BOM-：" class="headerlink" title="BOM ："></a>BOM ：</h3><ul><li><p>51单片机最小系统（其他单片机也可以，我选的是STC89C52RC）</p></li><li><p>74HC595锁存器 5个</p></li><li><p>74HC573锁存器 3个</p></li><li><p>共阴三色彩灯 40个</p></li><li><p>四位共阴数码管 1个</p></li><li><p>10cm X 15cm覆铜板两块</p></li><li><p>排针 若干</p></li><li><p>导线 若干（跳线用到）</p></li><li><p>限流电阻若干15个左右 （约500欧姆）</p></li><li><p>按键2个</p></li></ul><p>我把 原理图 和 走线图 贴上来供大家参考，我相信我做的不是最好，希望想仿制的朋友能够进行改进</p><p>这是74HC595的接法（我用的是贴片的，体积小 易焊接，价格合适）</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zvw6tk9j30hs05kq41.jpg" alt></p><p>这是三色雾状彩灯的接法。上面的0805是限流电阻，我用的是贴片封装的，比较省空间</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zw6ett3j30hs0d0jv1.jpg" alt></p><p>这是51系统小板和74HC573的接法了，为了提高速度，充分利用GPIO口，我直接把OE接低电平 LE接到高电平了。这样使用相当于74HC573是透明的，仅仅起驱动（放大电流）作用。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zwdm9w3j30hs0bumzy.jpg" alt></p><p>这是51系统小板的PCB布局走线，可以拿来参考下。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zwnnopsj30hs07g0um.jpg" alt></p><p>下面是重头戏了。每个灯都是四个引脚，一个共阴极脚，三个颜色的阳极脚。有40个彩灯，分为5组，每组的同样的颜色引脚接一起（采用搭桥式焊接法，布 线的时候我并没有接）。所有灯的阴极全部引出，接到74HC595锁存器上面。5组灯，每组三种颜色，引出三条线，5组即3 X 5=15条线 ， 接到两个74HC573的输出端。剩下的一个74HC573用来驱动共阴数码管。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zwvdl0dj30hs0cjn1r.jpg" alt></p><h3 id="灯引脚的折法"><a href="#灯引脚的折法" class="headerlink" title="灯引脚的折法"></a>灯引脚的折法</h3><p>灯买回来的时候间距是50mil，我们手工做不出来这么精细的板子。所以要把引脚折一下，方便焊接 也同时增大了引脚间距（折成100mil）。<br><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zx43yxdj30hs09sdh4.jpg" alt></p><p>总结一下：</p><blockquote><p>采用51单片机接5个74HC595 进行阴极驱动。2个74HC573驱动灯的阳极，剩下一个74HC573驱动数码管阳极.</p></blockquote><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>这个是第一版</p><embed src="//player.youku.com/player.php/sid/XODUyNjc0Njk2/v.swf" allowfullscreen="true" quality="high" width="640" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash"><h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h3><p>这个是改进版<br><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/54607946_4e21948b114418d95b0c31d6435a302c_4a54dc7ec3ab_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是2014年做的，想要做这个已经想了很久，从构思到设计焊接完成大概花了1个多月的课余时间。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>电子四班电子相册第一弹</title>
    <link href="https://mapan.tech/posts/9e74.html"/>
    <id>https://mapan.tech/posts/9e74.html</id>
    <published>2015-07-19T05:10:00.000Z</published>
    <updated>2017-11-04T09:57:54.063Z</updated>
    
    <content type="html"><![CDATA[<p>搜集了2013级电子四班的所有人同学的照片，用AE和Pr简单的剪辑了一个小视频短片。<br><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"video":{"url":"https://gss3.baidu.com/6LZ0ej3k1Qd3ote6lo7D0j9wehsv/tieba-smallvideo-transcode/97692102_b91d25dac99d8c47b1bba7e7c2d3aa2f_f46dfc8572c8_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></p><p>大一的上学期做的，自己学了一些视频制作软件。一个电子相册，永远的回忆。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;搜集了2013级电子四班的所有人同学的照片，用AE和Pr简单的剪辑了一个小视频短片。&lt;br&gt;&lt;div id=&quot;dplayer0&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom:
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>开关三极管的剖析</title>
    <link href="https://mapan.tech/posts/dcaf.html"/>
    <id>https://mapan.tech/posts/dcaf.html</id>
    <published>2015-07-18T09:18:00.000Z</published>
    <updated>2017-12-22T14:17:38.539Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;在数字电路设计的中，往往需要把数字信号经过开关扩流器件来驱动一些蜂鸣器、LED、继电器等需要较大电流的器件，用得最多的开关扩流器件要数三极 管。然而 在使用的过程中，如果电路设计不当，三极管无法工作在正常的开关状态，就达不到预期的目的，有时就是因为这些小小的错误而导致重新打板，导致浪费。本人在 这个方面就吃过亏，所以把自己使用三极管的一些经验以及一些常见的误区给大家分享一下，在电路设计的过程中可以减少一些不必要的麻烦。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zrcs294j30b408cjrn.jpg" alt="各种三极管"></p><p>下面来看几个三极管做开关的常用电路画法。几个例子都是蜂鸣器作为被驱动器件。<br><img src="https://ww1.sinaimg.cn/large/005vwoCygy1fl3zo0gp41j30of0bb40b.jpg" alt="图一"></p><p>图一的a 电路用的是NPN管，注意蜂鸣器接在三极管的集电极，驱动信号可以是常见的3.3V或者5VTTL，高电平开通，电阻按照经验法可以取4.7K。 例如a电路，开通时假设为高电平5V，基极电流Ib=(5V-0.7V)/4.7K=0.9mA，可以使三极管完全饱和。b 电路用的是PNP管，同样把 蜂鸣器接在三极管的集电极，不同的是驱动信号是5V的TTL电平。以上这两个都可以正常工作，只要PWM驱动信号工作在合适的频率，蜂鸣器（有源）都会发 出最大的声音。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zsexf1qj30m009tmyn.jpg" alt title="图二"></p><p>图二的这两个电路相比图一来说，最大的区别在于被驱动器件接在三极管的发射极。同样看c电路，开通时假设为高电平5V，基极电流Ib=(5V- 0.7V- UL)/4.7K，其中UL为被驱动器件上的压降。可以看到，同样取基极电阻为4.7K，流过的基极电流会比图一a电路的要小，小多少要看UL是多少。如 果UL比较大，那么相应的Ib就小，很有可能导致三极管无法工作在饱和状态，使得被驱动器件无法动作。有人会说把基极电阻减小就可以了呀，可是被驱动器件 的压降是很难获知的，有些被驱动器件的压降是变动的，这样一来基极电阻就较难选择合适的值，阻值选择太大就会驱动失败，选择太小，损耗又变大。所以，在非 不得已的情况下，不建议选用图二的这两种电路。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3zt3t9caj30oa0apwg4.jpg" alt title="图三"></p><p>我们再来看图三这两个电路。驱动信号为3.3VTTL电平，而被驱动器件开通电压需要5V。在3.3V的MCU电路中，不小心的话很容易就设计出这 两种电 路，而这两种电路都是错误的。先分析e电路，这是典型的“发射极正偏，集电极反偏”的放大电路，或者叫射极输出器。当PWM信号为3.3V时，三极管发射 极电压为3.3V-0.7V = 2.6V，无法达到期望的5V。图三f电路也是一个很失败的电路，首先这个电路开通是没有问题的，当驱动信号为低电平 时，被驱动器件可以正常动作。然而这个电路是无法关断的，当驱动信号PWM为3.3V高电平的时候，Ube = 5V – 3.3V = 1.7V仍然可 以使三极管开通，于是无法关断。在这里，有人会说用过这个电路，没有问题啊，而且MCU的电压也是3.3V。我说你用的肯定是OD（开漏）驱动方式，而且 是真正的OD或者是5V容忍的OD，比如STM32的很多IO口都可以设置为5V容忍的OD驱动方式（但是有些是不行的）。当驱动信号为OD门驱动方式 时，输出高电平，信号就变成了高阻态，流过基极的电流为零，三极管可以有效关断，这个时候f电路依然有效。</p><p><img src="https://ws1.sinaimg.cn/large/005vwoCygy1fl3ztj5htxj30oa0csq4y.jpg" alt title="图四"></p><p>综合以上几种电路的情况分析，得到图四这两种个人认为是最优的驱动电路，与图一不同的是，图四在基极与发射极之间多加了一个100K的电阻，这个电 阻也是有 一定作用的，可以让三极管有一个已知的默认状态。当输入信号去除的时候，三极管还处于关断状态。在安全和稳定的方面考虑，多加的这个电阻还是很有必要的， 或者说可以让三极管工作在更好的开关状态。<br>三极管作为开关器件，虽然驱动电路很简单，要使电路工作更加稳定可靠，还是不能掉以轻心。为了不容易出错，个人建议是优先采用图四的电路，尽量不采用图二的电路，避免使用图三的工作状况。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在数字电路设计的中，往往需要把数字信号经过开关扩流器件来驱动一些蜂鸣器、LED、继电器等需要较大电流的器件，用得最多的开关扩流器件要数三极 管。然而
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://mapan.tech/posts/3eeb.html"/>
    <id>https://mapan.tech/posts/3eeb.html</id>
    <published>2015-07-10T04:40:00.000Z</published>
    <updated>2018-08-10T12:10:20.160Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Hello World</p></blockquote><p>2015年7月，本站使用wordpres工具在阿里云虚拟主机搭建。<br>2016年9月，由于嫌wordpress太不像一个博客，阿里云的免费主机不稳定等原因，转移到静态博客Hexo。</p><p>搭建博客让我在互联网认识了不少有趣的人，厉害的人，S-B的人，形形色色。原来以为自己很厉害，后来意识到比自己厉害的人多了去了，自己还是太浮躁。</p><p>并不知道自己搭建博客，搭建公众号 有什么特别的目的，只是想着通过这样一种方式去记录自己一种体验，一种心态，一种经历。也许有些文章显得愤青不知天高地厚，这也不正由于年轻所以才热血么？我只是以一种自己喜欢的方式来记录罢了，像一本日记，又像一本笔记，也许以后会向像一本相册。没关系，我不是为了讨好谁，自己舒服就好。</p><p>如果你喜欢我的博客，可以存为书签，或者关注我的公众号，我不会经常更新，但不会停止更新。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;Hello
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
